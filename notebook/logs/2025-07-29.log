2025-07-29 13:42:34 [INFO    ] SQLAgent: === SQL Agent Logger Initialized (Console Output Disabled, ALL Log Levels Captured) ===
2025-07-29 13:42:34 [DEBUG   ] SQLAgent: DEBUG level logging enabled - all detailed information will be captured
2025-07-29 13:42:34 [WARNING ] SQLAgent: WARNING level logging enabled - all warnings will be captured
2025-07-29 13:42:34 [ERROR   ] SQLAgent: ERROR level logging enabled - all errors will be captured
2025-07-29 13:42:34 [CRITICAL] SQLAgent: CRITICAL level logging enabled - all critical issues will be captured
2025-07-29 13:42:34 [INFO    ] SQLAgent: === Starting SQL Agent Example ===
2025-07-29 13:42:34 [INFO    ] SQLAgent: Initializing SQLAgent...
2025-07-29 13:42:34 [DEBUG   ] SQLAgent: Input - db_path: D:\ML(ExtraClass Project)\AGENT AI\SQL-Sage-Intelligent-DB-Agent-with-Gemini-LangGraph\database\final_ecommerce.db, model_name: llama-3.1-8b-instant
2025-07-29 13:42:34 [DEBUG   ] SQLAgent: Connection string created: sqlite:///D:\ML(ExtraClass Project)\AGENT AI\SQL-Sage-Intelligent-DB-Agent-with-Gemini-LangGraph\database\final_ecommerce.db
2025-07-29 13:42:34 [INFO    ] SQLAgent: Connected to SQLite database.
2025-07-29 13:42:34 [DEBUG   ] SQLAgent: Database usable tables: ['cart', 'cart_items', 'categories', 'coupons', 'order_coupons', 'order_items', 'orders', 'payments', 'product_images', 'products', 'reviews', 'shipping', 'users', 'wishlist']
2025-07-29 13:42:36 [INFO    ] SQLAgent: Groq LLM initialized with model: llama-3.1-8b-instant
2025-07-29 13:42:36 [INFO    ] SQLAgent: Starting _setup_tools...
2025-07-29 13:42:36 [DEBUG   ] SQLAgent: Fetched 4 tools from toolkit: ['sql_db_query', 'sql_db_schema', 'sql_db_list_tables', 'sql_db_query_checker']
2025-07-29 13:42:36 [DEBUG   ] SQLAgent: Tool 'sql_db_list_tables' loaded.
2025-07-29 13:42:36 [DEBUG   ] SQLAgent: Tool 'sql_db_schema' loaded.
2025-07-29 13:42:36 [INFO    ] SQLAgent: All tools setup completed.
2025-07-29 13:42:36 [INFO    ] SQLAgent: Setting up prompts...
2025-07-29 13:42:36 [DEBUG   ] SQLAgent: Query generation prompt created.
2025-07-29 13:42:36 [DEBUG   ] SQLAgent: Interpretation prompt created.
2025-07-29 13:42:36 [INFO    ] SQLAgent: Prompts setup completed.
2025-07-29 13:42:36 [INFO    ] SQLAgent: Building LangGraph workflow...
2025-07-29 13:42:36 [DEBUG   ] SQLAgent: Node 'first_tool_call' added to graph.
2025-07-29 13:42:36 [DEBUG   ] SQLAgent: Creating tool node with fallback for tools: ['sql_db_list_tables']
2025-07-29 13:42:36 [DEBUG   ] SQLAgent: Tool node with fallback created.
2025-07-29 13:42:36 [DEBUG   ] SQLAgent: Node 'list_tables_tool' added to graph.
2025-07-29 13:42:36 [DEBUG   ] SQLAgent: Node 'model_get_schema' added to graph.
2025-07-29 13:42:36 [DEBUG   ] SQLAgent: Creating tool node with fallback for tools: ['sql_db_schema']
2025-07-29 13:42:36 [DEBUG   ] SQLAgent: Tool node with fallback created.
2025-07-29 13:42:36 [DEBUG   ] SQLAgent: Node 'get_schema_tool' added to graph.
2025-07-29 13:42:36 [DEBUG   ] SQLAgent: Node 'query_gen' added to graph.
2025-07-29 13:42:36 [DEBUG   ] SQLAgent: Node 'execute_query' added to graph.
2025-07-29 13:42:36 [DEBUG   ] SQLAgent: Node 'interpret_results' added to graph.
2025-07-29 13:42:36 [DEBUG   ] SQLAgent: Edge: START → first_tool_call
2025-07-29 13:42:36 [DEBUG   ] SQLAgent: Edge: first_tool_call → list_tables_tool
2025-07-29 13:42:36 [DEBUG   ] SQLAgent: Edge: list_tables_tool → model_get_schema
2025-07-29 13:42:36 [DEBUG   ] SQLAgent: Edge: model_get_schema → get_schema_tool
2025-07-29 13:42:36 [DEBUG   ] SQLAgent: Edge: get_schema_tool → query_gen
2025-07-29 13:42:36 [DEBUG   ] SQLAgent: Conditional edges added from 'query_gen'
2025-07-29 13:42:36 [DEBUG   ] SQLAgent: Conditional edges added from 'execute_query'
2025-07-29 13:42:36 [DEBUG   ] SQLAgent: Conditional edges added from 'interpret_results'
2025-07-29 13:42:36 [INFO    ] SQLAgent: LangGraph workflow compiled successfully.
2025-07-29 13:42:36 [INFO    ] SQLAgent: SQLAgent initialization completed.
2025-07-29 13:42:36 [INFO    ] SQLAgent: SQLAgent instance created.
2025-07-29 13:42:36 [INFO    ] SQLAgent: === Example Query Execution ===
2025-07-29 13:42:36 [INFO    ] SQLAgent: Received query: 'display all users i said all users all info about users'
2025-07-29 13:42:36 [INFO    ] SQLAgent: Setting recursion limit: 15
2025-07-29 13:42:36 [INFO    ] SQLAgent: Invoking agent workflow...
2025-07-29 13:42:36 [INFO    ] SQLAgent: Executing first_tool_call: requesting list of tables.
2025-07-29 13:42:36 [DEBUG   ] SQLAgent: first_tool_call response prepared.
2025-07-29 13:42:36 [INFO    ] SQLAgent: Calling model_get_schema to fetch schema.
2025-07-29 13:42:36 [DEBUG   ] SQLAgent: Current message history: [('HumanMessage', 'display all users i said all users all info about users'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist')]
2025-07-29 13:42:37 [INFO    ] SQLAgent: LLM schema request took 1.11 seconds.
2025-07-29 13:42:37 [DEBUG   ] SQLAgent: Schema response: content='' additional_kwargs={'tool_calls': [{'id': 't5xjfzkst', 'function': {'arguments': '{"table_names":"users,cart,cart_items,categories,coupons,order_coupons,order_items,orders,payments,product_images,products,reviews,shipping,wishlist"}', 'name': 'sql_db_schema'}, 'type': 'function'}]} response_metadata={'token_usage': {'completion_tokens': 50, 'prompt_tokens': 398, 'total_tokens': 448, 'completion_time': 0.066666667, 'prompt_time': 0.02561825, 'queue_time': 0.051239530000000005, 'total_time': 0.092284917}, 'model_name': 'llama-3.1-8b-instant', 'system_fingerprint': 'fp_c523237e5d', 'service_tier': 'on_demand', 'finish_reason': 'tool_calls', 'logprobs': None} id='run--7276006e-325e-48ec-9876-608147c6b32f-0' tool_calls=[{'name': 'sql_db_schema', 'args': {'table_names': 'users,cart,cart_items,categories,coupons,order_coupons,order_items,orders,payments,product_images,products,reviews,shipping,wishlist'}, 'id': 't5xjfzkst', 'type': 'tool_call'}] usage_metadata={'input_tokens': 398, 'output_tokens': 50, 'total_tokens': 448}
2025-07-29 13:42:37 [INFO    ] SQLAgent: Entering query_gen_node to generate SQL query.
2025-07-29 13:42:37 [DEBUG   ] SQLAgent: Message history: [('HumanMessage', 'display all users i said all users all info about users'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist'), ('AIMessage', ''), ('ToolMessage', "\nCREATE TABLE cart (\n\tcart_id INTEGER, \n\tuser_id INTEGER, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (cart_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from cart table:\ncart_id\tuser_id\tcreated_at\n1\t1\t2025-07-28 17:03:54\n2\t2\t2025-07-28 17:03:54\n3\t3\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE cart_items (\n\tcart_item_id INTEGER, \n\tcart_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tPRIMARY KEY (cart_item_id), \n\tFOREIGN KEY(cart_id) REFERENCES cart (cart_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from cart_items table:\ncart_item_id\tcart_id\tproduct_id\tquantity\n1\t1\t3\t1\n2\t2\t4\t2\n3\t3\t2\t1\n*/\n\n\nCREATE TABLE categories (\n\tcategory_id INTEGER, \n\tcategory_name TEXT NOT NULL, \n\tdescription TEXT, \n\tPRIMARY KEY (category_id)\n)\n\n/*\n3 rows from categories table:\ncategory_id\tcategory_name\tdescription\n1\tMobiles\tSmartphones and accessories\n2\tClothing\tMen and Women fashion\n3\tComputers\tLaptops and peripherals\n*/\n\n\nCREATE TABLE coupons (\n\tcoupon_id INTEGER, \n\tcode TEXT, \n\tdiscount_percent INTEGER, \n\tvalid_from DATE, \n\tvalid_to DATE, \n\tPRIMARY KEY (coupon_id), \n\tUNIQUE (code), \n\tCHECK (discount_percent BETWEEN 1 AND 100)\n)\n\n/*\n3 rows from coupons table:\ncoupon_id\tcode\tdiscount_percent\tvalid_from\tvalid_to\n1\tNEPAL10\t10\t2025-07-01\t2025-12-31\n2\tFEST20\t20\t2025-07-01\t2025-12-31\n3\tWELCOME5\t5\t2025-07-01\t2025-12-31\n*/\n\n\nCREATE TABLE order_coupons (\n\tid INTEGER, \n\torder_id INTEGER, \n\tcoupon_id INTEGER, \n\tPRIMARY KEY (id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(coupon_id) REFERENCES coupons (coupon_id)\n)\n\n/*\n3 rows from order_coupons table:\nid\torder_id\tcoupon_id\n1\t1\t1\n2\t2\t2\n3\t3\t3\n*/\n\n\nCREATE TABLE order_items (\n\torder_item_id INTEGER, \n\torder_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tprice REAL NOT NULL, \n\tPRIMARY KEY (order_item_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from order_items table:\norder_item_id\torder_id\tproduct_id\tquantity\tprice\n1\t1\t1\t1\t550.0\n2\t2\t3\t1\t120.0\n3\t3\t4\t1\t1300.0\n*/\n\n\nCREATE TABLE orders (\n\torder_id INTEGER, \n\tuser_id INTEGER, \n\torder_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tstatus TEXT DEFAULT 'Pending', \n\ttotal_amount REAL, \n\tPRIMARY KEY (order_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from orders table:\norder_id\tuser_id\torder_date\tstatus\ttotal_amount\n1\t1\t2025-07-28 17:03:54\tPending\t550.0\n2\t2\t2025-07-28 17:03:54\tPending\t120.0\n3\t3\t2025-07-28 17:03:54\tPending\t1300.0\n*/\n\n\nCREATE TABLE payments (\n\tpayment_id INTEGER, \n\torder_id INTEGER, \n\tpayment_method TEXT, \n\tamount REAL, \n\tpayment_status TEXT DEFAULT 'Pending', \n\tpaid_at TIMESTAMP, \n\tPRIMARY KEY (payment_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from payments table:\npayment_id\torder_id\tpayment_method\tamount\tpayment_status\tpaid_at\n1\t1\tEsewa\t550.0\tCompleted\tNone\n2\t2\tKhalti\t120.0\tCompleted\tNone\n3\t3\tCash\t1300.0\tPending\tNone\n*/\n\n\nCREATE TABLE product_images (\n\timage_id INTEGER, \n\tproduct_id INTEGER, \n\timage_url TEXT NOT NULL, \n\tPRIMARY KEY (image_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from product_images table:\nimage_id\tproduct_id\timage_url\n1\t1\tsamsung.jpg\n2\t2\tiphone.jpg\n3\t3\tcoat.jpg\n*/\n\n\nCREATE TABLE products (\n\tproduct_id INTEGER, \n\tcategory_id INTEGER, \n\tname TEXT NOT NULL, \n\tdescription TEXT, \n\tprice REAL NOT NULL, \n\tstock INTEGER DEFAULT 0, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (product_id), \n\tFOREIGN KEY(category_id) REFERENCES categories (category_id)\n)\n\n/*\n3 rows from products table:\nproduct_id\tcategory_id\tname\tdescription\tprice\tstock\tcreated_at\n1\t1\tSamsung Galaxy A55\t5G smartphone with AMOLED display\t550.0\t50\t2025-07-28 17:03:54\n2\t1\tiPhone 15\tLatest Apple flagship smartphone\t999.0\t30\t2025-07-28 17:03:54\n3\t2\tWinter Coat\tStylish warm coat for winter\t120.0\t25\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE reviews (\n\treview_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\trating INTEGER, \n\tcomment TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (review_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id), \n\tCHECK (rating BETWEEN 1 AND 5)\n)\n\n/*\n3 rows from reviews table:\nreview_id\tuser_id\tproduct_id\trating\tcomment\tcreated_at\n1\t1\t1\t5\tExcellent smartphone!\t2025-07-28 17:03:54\n2\t2\t3\t4\tCoat is warm and stylish.\t2025-07-28 17:03:54\n3\t3\t4\t5\tLaptop is powerful.\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE shipping (\n\tshipping_id INTEGER, \n\torder_id INTEGER, \n\ttracking_number TEXT, \n\tshipping_address TEXT, \n\tshipping_date TIMESTAMP, \n\tdelivery_date TIMESTAMP, \n\tstatus TEXT DEFAULT 'Preparing', \n\tPRIMARY KEY (shipping_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from shipping table:\nshipping_id\torder_id\ttracking_number\tshipping_address\tshipping_date\tdelivery_date\tstatus\n1\t1\tTRK001\tKathmandu\t2025-07-01 00:00:00\t2025-07-05 00:00:00\tDelivered\n2\t2\tTRK002\tPokhara\t2025-07-02 00:00:00\t2025-07-06 00:00:00\tDelivered\n3\t3\tTRK003\tButwal\t2025-07-03 00:00:00\t2025-07-08 00:00:00\tShipped\n*/\n\n\nCREATE TABLE users (\n\tuser_id INTEGER, \n\tname TEXT, \n\temail TEXT, \n\tpassword TEXT, \n\tphone TEXT, \n\taddress TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (user_id), \n\tUNIQUE (email)\n)\n\n/*\n3 rows from users table:\nuser_id\tname\temail\tpassword\tphone\taddress\tcreated_at\n1\tArun Pandey\tarun@example.com\tpass\t9801111111\tKathmandu\t2025-07-28 17:03:54\n2\tSita Sharma\tsita@example.com\tpass\t9802222222\tPokhara\t2025-07-28 17:03:54\n3\tRam Thapa\tram@example.com\tpass\t9803333333\tButwal\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE wishlist (\n\twishlist_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\tadded_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (wishlist_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from wishlist table:\nwishlist_id\tuser_id\tproduct_id\tadded_at\n1\t1\t2\t2025-07-28 17:03:54\n2\t2\t3\t2025-07-28 17:03:54\n3\t3\t1\t2025-07-28 17:03:54\n*/")]
2025-07-29 13:42:37 [DEBUG   ] SQLAgent: Query attempt #1
2025-07-29 13:42:37 [INFO    ] SQLAgent: Invoking LLM for SQL generation...
2025-07-29 13:42:37 [INFO    ] SQLAgent: LLM generated SQL in 0.46 seconds.
2025-07-29 13:42:37 [DEBUG   ] SQLAgent: LLM response content: SELECT * FROM users LIMIT 10;
2025-07-29 13:42:37 [INFO    ] SQLAgent: Valid SELECT query detected. Proceeding to execute_query.
2025-07-29 13:42:37 [INFO    ] SQLAgent: Executing SQL query from last message.
2025-07-29 13:42:37 [DEBUG   ] SQLAgent: Last message type: AIMessage, content: SELECT * FROM users LIMIT 10;
2025-07-29 13:42:37 [DEBUG   ] SQLAgent: Raw SQL content: SELECT * FROM users LIMIT 10;
2025-07-29 13:42:37 [INFO    ] SQLAgent: Extracted SQL query: SELECT * FROM users LIMIT 10;
2025-07-29 13:42:37 [INFO    ] SQLAgent: Query executed in 0.00 seconds.
2025-07-29 13:42:37 [INFO    ] SQLAgent: Query result: [(1, 'Arun Pandey', 'arun@example.com', 'pass', '9801111111', 'Kathmandu', '2025-07-28 17:03:54'), (2, 'Sita Sharma', 'sita@example.com', 'pass', '9802222222', 'Pokhara', '2025-07-28 17:03:54'), (3, '...
2025-07-29 13:42:37 [INFO    ] SQLAgent: Query executed successfully. Proceeding to interpretation.
2025-07-29 13:42:37 [INFO    ] SQLAgent: Interpreting query results into natural language answer.
2025-07-29 13:42:37 [DEBUG   ] SQLAgent: Message history for interpretation: [('HumanMessage', 'display all users i said all users all info about users'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist'), ('AIMessage', ''), ('ToolMessage', "\nCREATE TABLE cart (\n\tcart_id INTEGER, \n\tuser_id INTEGER, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (cart_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from cart table:\ncart_id\tuser_id\tcreated_at\n1\t1\t2025-07-28 17:03:54\n2\t2\t2025-07-28 17:03:54\n3\t3\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE cart_items (\n\tcart_item_id INTEGER, \n\tcart_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tPRIMARY KEY (cart_item_id), \n\tFOREIGN KEY(cart_id) REFERENCES cart (cart_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from cart_items table:\ncart_item_id\tcart_id\tproduct_id\tquantity\n1\t1\t3\t1\n2\t2\t4\t2\n3\t3\t2\t1\n*/\n\n\nCREATE TABLE categories (\n\tcategory_id INTEGER, \n\tcategory_name TEXT NOT NULL, \n\tdescription TEXT, \n\tPRIMARY KEY (category_id)\n)\n\n/*\n3 rows from categories table:\ncategory_id\tcategory_name\tdescription\n1\tMobiles\tSmartphones and accessories\n2\tClothing\tMen and Women fashion\n3\tComputers\tLaptops and peripherals\n*/\n\n\nCREATE TABLE coupons (\n\tcoupon_id INTEGER, \n\tcode TEXT, \n\tdiscount_percent INTEGER, \n\tvalid_from DATE, \n\tvalid_to DATE, \n\tPRIMARY KEY (coupon_id), \n\tUNIQUE (code), \n\tCHECK (discount_percent BETWEEN 1 AND 100)\n)\n\n/*\n3 rows from coupons table:\ncoupon_id\tcode\tdiscount_percent\tvalid_from\tvalid_to\n1\tNEPAL10\t10\t2025-07-01\t2025-12-31\n2\tFEST20\t20\t2025-07-01\t2025-12-31\n3\tWELCOME5\t5\t2025-07-01\t2025-12-31\n*/\n\n\nCREATE TABLE order_coupons (\n\tid INTEGER, \n\torder_id INTEGER, \n\tcoupon_id INTEGER, \n\tPRIMARY KEY (id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(coupon_id) REFERENCES coupons (coupon_id)\n)\n\n/*\n3 rows from order_coupons table:\nid\torder_id\tcoupon_id\n1\t1\t1\n2\t2\t2\n3\t3\t3\n*/\n\n\nCREATE TABLE order_items (\n\torder_item_id INTEGER, \n\torder_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tprice REAL NOT NULL, \n\tPRIMARY KEY (order_item_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from order_items table:\norder_item_id\torder_id\tproduct_id\tquantity\tprice\n1\t1\t1\t1\t550.0\n2\t2\t3\t1\t120.0\n3\t3\t4\t1\t1300.0\n*/\n\n\nCREATE TABLE orders (\n\torder_id INTEGER, \n\tuser_id INTEGER, \n\torder_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tstatus TEXT DEFAULT 'Pending', \n\ttotal_amount REAL, \n\tPRIMARY KEY (order_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from orders table:\norder_id\tuser_id\torder_date\tstatus\ttotal_amount\n1\t1\t2025-07-28 17:03:54\tPending\t550.0\n2\t2\t2025-07-28 17:03:54\tPending\t120.0\n3\t3\t2025-07-28 17:03:54\tPending\t1300.0\n*/\n\n\nCREATE TABLE payments (\n\tpayment_id INTEGER, \n\torder_id INTEGER, \n\tpayment_method TEXT, \n\tamount REAL, \n\tpayment_status TEXT DEFAULT 'Pending', \n\tpaid_at TIMESTAMP, \n\tPRIMARY KEY (payment_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from payments table:\npayment_id\torder_id\tpayment_method\tamount\tpayment_status\tpaid_at\n1\t1\tEsewa\t550.0\tCompleted\tNone\n2\t2\tKhalti\t120.0\tCompleted\tNone\n3\t3\tCash\t1300.0\tPending\tNone\n*/\n\n\nCREATE TABLE product_images (\n\timage_id INTEGER, \n\tproduct_id INTEGER, \n\timage_url TEXT NOT NULL, \n\tPRIMARY KEY (image_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from product_images table:\nimage_id\tproduct_id\timage_url\n1\t1\tsamsung.jpg\n2\t2\tiphone.jpg\n3\t3\tcoat.jpg\n*/\n\n\nCREATE TABLE products (\n\tproduct_id INTEGER, \n\tcategory_id INTEGER, \n\tname TEXT NOT NULL, \n\tdescription TEXT, \n\tprice REAL NOT NULL, \n\tstock INTEGER DEFAULT 0, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (product_id), \n\tFOREIGN KEY(category_id) REFERENCES categories (category_id)\n)\n\n/*\n3 rows from products table:\nproduct_id\tcategory_id\tname\tdescription\tprice\tstock\tcreated_at\n1\t1\tSamsung Galaxy A55\t5G smartphone with AMOLED display\t550.0\t50\t2025-07-28 17:03:54\n2\t1\tiPhone 15\tLatest Apple flagship smartphone\t999.0\t30\t2025-07-28 17:03:54\n3\t2\tWinter Coat\tStylish warm coat for winter\t120.0\t25\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE reviews (\n\treview_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\trating INTEGER, \n\tcomment TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (review_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id), \n\tCHECK (rating BETWEEN 1 AND 5)\n)\n\n/*\n3 rows from reviews table:\nreview_id\tuser_id\tproduct_id\trating\tcomment\tcreated_at\n1\t1\t1\t5\tExcellent smartphone!\t2025-07-28 17:03:54\n2\t2\t3\t4\tCoat is warm and stylish.\t2025-07-28 17:03:54\n3\t3\t4\t5\tLaptop is powerful.\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE shipping (\n\tshipping_id INTEGER, \n\torder_id INTEGER, \n\ttracking_number TEXT, \n\tshipping_address TEXT, \n\tshipping_date TIMESTAMP, \n\tdelivery_date TIMESTAMP, \n\tstatus TEXT DEFAULT 'Preparing', \n\tPRIMARY KEY (shipping_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from shipping table:\nshipping_id\torder_id\ttracking_number\tshipping_address\tshipping_date\tdelivery_date\tstatus\n1\t1\tTRK001\tKathmandu\t2025-07-01 00:00:00\t2025-07-05 00:00:00\tDelivered\n2\t2\tTRK002\tPokhara\t2025-07-02 00:00:00\t2025-07-06 00:00:00\tDelivered\n3\t3\tTRK003\tButwal\t2025-07-03 00:00:00\t2025-07-08 00:00:00\tShipped\n*/\n\n\nCREATE TABLE users (\n\tuser_id INTEGER, \n\tname TEXT, \n\temail TEXT, \n\tpassword TEXT, \n\tphone TEXT, \n\taddress TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (user_id), \n\tUNIQUE (email)\n)\n\n/*\n3 rows from users table:\nuser_id\tname\temail\tpassword\tphone\taddress\tcreated_at\n1\tArun Pandey\tarun@example.com\tpass\t9801111111\tKathmandu\t2025-07-28 17:03:54\n2\tSita Sharma\tsita@example.com\tpass\t9802222222\tPokhara\t2025-07-28 17:03:54\n3\tRam Thapa\tram@example.com\tpass\t9803333333\tButwal\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE wishlist (\n\twishlist_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\tadded_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (wishlist_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from wishlist table:\nwishlist_id\tuser_id\tproduct_id\tadded_at\n1\t1\t2\t2025-07-28 17:03:54\n2\t2\t3\t2025-07-28 17:03:54\n3\t3\t1\t2025-07-28 17:03:54\n*/"), ('AIMessage', 'SELECT * FROM users LIMIT 10;'), ('ToolMessage', "[(1, 'Arun Pandey', 'arun@example.com', 'pass', '9801111111', 'Kathmandu', '2025-07-28 17:03:54'), (2, 'Sita Sharma', 'sita@example.com', 'pass', '9802222222', 'Pokhara', '2025-07-28 17:03:54'), (3, 'Ram Thapa', 'ram@example.com', 'pass', '9803333333', 'Butwal', '2025-07-28 17:03:54'), (4, 'Krishna Adhikari', 'krishna@example.com', 'pass', '9804444444', 'Chitwan', '2025-07-28 17:03:54'), (5, 'Bina Kafle', 'bina@example.com', 'pass', '9805555555', 'Lalitpur', '2025-07-28 17:03:54'), (6, 'Binisha Chapagain', 'binisha@example.com', 'pass', '9806666666', 'Bhaktapur', '2025-07-28 17:03:54')]")]
2025-07-29 13:42:37 [INFO    ] SQLAgent: Invoking LLM for result interpretation...
2025-07-29 13:42:38 [INFO    ] SQLAgent: LLM interpretation completed in 0.71 seconds.
2025-07-29 13:42:38 [DEBUG   ] SQLAgent: Interpretation result: Answer: There are 6 users in the database. The users are:

1. Arun Pandey (arun@example.com)
2. Sita Sharma (sita@example.com)
3. Ram Thapa (ram@example.com)
4. Krishna Adhikari (krishna@example.com)
5. Bina Kafle (bina@example.com)
6. Binisha Chapagain (binisha@example.com)

Each user has a unique email address, phone number, and address.
2025-07-29 13:42:38 [INFO    ] SQLAgent: Final answer generated. Ending workflow.
2025-07-29 13:42:38 [INFO    ] SQLAgent: Agent workflow completed in 2.33 seconds.
2025-07-29 13:42:38 [DEBUG   ] SQLAgent: Extracting final SQL query from message history.
2025-07-29 13:42:38 [DEBUG   ] SQLAgent: Extracted SQL query: SELECT * FROM users LIMIT 10;
2025-07-29 13:42:38 [INFO    ] SQLAgent: Final SQL Query: SELECT * FROM users LIMIT 10;
2025-07-29 13:42:38 [INFO    ] SQLAgent: Final Answer: Answer: There are 6 users in the database. The users are:

1. Arun Pandey (arun@example.com)
2. Sita Sharma (sita@example.com)
3. Ram Thapa (ram@example.com)
4. Krishna Adhikari (krishna@example.com)
5. Bina Kafle (bina@example.com)
6. Binisha Chapagain (binisha@example.com)

Each user has a unique email address, phone number, and address.
2025-07-29 13:42:38 [INFO    ] SQLAgent: === Example Query Execution Completed ===
2025-07-29 13:43:50 [INFO    ] SQLAgent: === SQL Agent Logger Initialized (Console Output Disabled, ALL Log Levels Captured) ===
2025-07-29 13:43:50 [DEBUG   ] SQLAgent: DEBUG level logging enabled - all detailed information will be captured
2025-07-29 13:43:50 [WARNING ] SQLAgent: WARNING level logging enabled - all warnings will be captured
2025-07-29 13:43:50 [ERROR   ] SQLAgent: ERROR level logging enabled - all errors will be captured
2025-07-29 13:43:50 [CRITICAL] SQLAgent: CRITICAL level logging enabled - all critical issues will be captured
2025-07-29 13:45:59 [INFO    ] SQLAgent: === Starting SQL Agent Example ===
2025-07-29 13:45:59 [INFO    ] SQLAgent: Initializing SQLAgent...
2025-07-29 13:45:59 [DEBUG   ] SQLAgent: Input - db_path: D:\ML(ExtraClass Project)\AGENT AI\SQL-Sage-Intelligent-DB-Agent-with-Gemini-LangGraph\database\final_ecommerce.db, model_name: llama-3.1-8b-instant
2025-07-29 13:45:59 [DEBUG   ] SQLAgent: Connection string created: sqlite:///D:\ML(ExtraClass Project)\AGENT AI\SQL-Sage-Intelligent-DB-Agent-with-Gemini-LangGraph\database\final_ecommerce.db
2025-07-29 13:45:59 [INFO    ] SQLAgent: Connected to SQLite database.
2025-07-29 13:45:59 [DEBUG   ] SQLAgent: Database usable tables: ['cart', 'cart_items', 'categories', 'coupons', 'order_coupons', 'order_items', 'orders', 'payments', 'product_images', 'products', 'reviews', 'shipping', 'users', 'wishlist']
2025-07-29 13:46:00 [INFO    ] SQLAgent: Groq LLM initialized with model: llama-3.1-8b-instant
2025-07-29 13:46:00 [INFO    ] SQLAgent: Starting _setup_tools...
2025-07-29 13:46:00 [DEBUG   ] SQLAgent: Fetched 4 tools from toolkit: ['sql_db_query', 'sql_db_schema', 'sql_db_list_tables', 'sql_db_query_checker']
2025-07-29 13:46:00 [DEBUG   ] SQLAgent: Tool 'sql_db_list_tables' loaded.
2025-07-29 13:46:00 [DEBUG   ] SQLAgent: Tool 'sql_db_schema' loaded.
2025-07-29 13:46:00 [INFO    ] SQLAgent: All tools setup completed.
2025-07-29 13:46:00 [INFO    ] SQLAgent: Setting up prompts...
2025-07-29 13:46:00 [DEBUG   ] SQLAgent: Query generation prompt created.
2025-07-29 13:46:00 [DEBUG   ] SQLAgent: Interpretation prompt created.
2025-07-29 13:46:00 [INFO    ] SQLAgent: Prompts setup completed.
2025-07-29 13:46:00 [INFO    ] SQLAgent: Building LangGraph workflow...
2025-07-29 13:46:00 [DEBUG   ] SQLAgent: Node 'first_tool_call' added to graph.
2025-07-29 13:46:00 [DEBUG   ] SQLAgent: Creating tool node with fallback for tools: ['sql_db_list_tables']
2025-07-29 13:46:00 [DEBUG   ] SQLAgent: Tool node with fallback created.
2025-07-29 13:46:00 [DEBUG   ] SQLAgent: Node 'list_tables_tool' added to graph.
2025-07-29 13:46:00 [DEBUG   ] SQLAgent: Node 'model_get_schema' added to graph.
2025-07-29 13:46:00 [DEBUG   ] SQLAgent: Creating tool node with fallback for tools: ['sql_db_schema']
2025-07-29 13:46:00 [DEBUG   ] SQLAgent: Tool node with fallback created.
2025-07-29 13:46:00 [DEBUG   ] SQLAgent: Node 'get_schema_tool' added to graph.
2025-07-29 13:46:00 [DEBUG   ] SQLAgent: Node 'query_gen' added to graph.
2025-07-29 13:46:00 [DEBUG   ] SQLAgent: Node 'execute_query' added to graph.
2025-07-29 13:46:00 [DEBUG   ] SQLAgent: Node 'interpret_results' added to graph.
2025-07-29 13:46:00 [DEBUG   ] SQLAgent: Edge: START → first_tool_call
2025-07-29 13:46:00 [DEBUG   ] SQLAgent: Edge: first_tool_call → list_tables_tool
2025-07-29 13:46:00 [DEBUG   ] SQLAgent: Edge: list_tables_tool → model_get_schema
2025-07-29 13:46:00 [DEBUG   ] SQLAgent: Edge: model_get_schema → get_schema_tool
2025-07-29 13:46:00 [DEBUG   ] SQLAgent: Edge: get_schema_tool → query_gen
2025-07-29 13:46:00 [DEBUG   ] SQLAgent: Conditional edges added from 'query_gen'
2025-07-29 13:46:00 [DEBUG   ] SQLAgent: Conditional edges added from 'execute_query'
2025-07-29 13:46:00 [DEBUG   ] SQLAgent: Conditional edges added from 'interpret_results'
2025-07-29 13:46:00 [INFO    ] SQLAgent: LangGraph workflow compiled successfully.
2025-07-29 13:46:00 [INFO    ] SQLAgent: SQLAgent initialization completed.
2025-07-29 13:46:00 [INFO    ] SQLAgent: SQLAgent instance created.
2025-07-29 13:46:00 [INFO    ] SQLAgent: === Example Query Execution ===
2025-07-29 13:46:00 [INFO    ] SQLAgent: Received query: 'display all the orders'
2025-07-29 13:46:00 [INFO    ] SQLAgent: Setting recursion limit: 15
2025-07-29 13:46:00 [INFO    ] SQLAgent: Invoking agent workflow...
2025-07-29 13:46:00 [INFO    ] SQLAgent: Executing first_tool_call: requesting list of tables.
2025-07-29 13:46:00 [DEBUG   ] SQLAgent: first_tool_call response prepared.
2025-07-29 13:46:00 [INFO    ] SQLAgent: Calling model_get_schema to fetch schema.
2025-07-29 13:46:00 [DEBUG   ] SQLAgent: Current message history: [('HumanMessage', 'display all the orders'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist')]
2025-07-29 13:46:01 [INFO    ] SQLAgent: LLM schema request took 0.60 seconds.
2025-07-29 13:46:01 [DEBUG   ] SQLAgent: Schema response: content='' additional_kwargs={'tool_calls': [{'id': 'zr4mgd8wq', 'function': {'arguments': '{"table_names":"orders, order_items, payments, users, products, cart, cart_items, order_coupons, coupons, shipping, reviews, product_images, categories, wishlist"}', 'name': 'sql_db_schema'}, 'type': 'function'}]} response_metadata={'token_usage': {'completion_tokens': 48, 'prompt_tokens': 391, 'total_tokens': 439, 'completion_time': 0.128142078, 'prompt_time': 0.034903185, 'queue_time': 0.054939221999999996, 'total_time': 0.163045263}, 'model_name': 'llama-3.1-8b-instant', 'system_fingerprint': 'fp_c523237e5d', 'service_tier': 'on_demand', 'finish_reason': 'tool_calls', 'logprobs': None} id='run--53521a16-8379-40ce-9f95-a7bfdb55c7c1-0' tool_calls=[{'name': 'sql_db_schema', 'args': {'table_names': 'orders, order_items, payments, users, products, cart, cart_items, order_coupons, coupons, shipping, reviews, product_images, categories, wishlist'}, 'id': 'zr4mgd8wq', 'type': 'tool_call'}] usage_metadata={'input_tokens': 391, 'output_tokens': 48, 'total_tokens': 439}
2025-07-29 13:46:01 [INFO    ] SQLAgent: Entering query_gen_node to generate SQL query.
2025-07-29 13:46:01 [DEBUG   ] SQLAgent: Message history: [('HumanMessage', 'display all the orders'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist'), ('AIMessage', ''), ('ToolMessage', "\nCREATE TABLE cart (\n\tcart_id INTEGER, \n\tuser_id INTEGER, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (cart_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from cart table:\ncart_id\tuser_id\tcreated_at\n1\t1\t2025-07-28 17:03:54\n2\t2\t2025-07-28 17:03:54\n3\t3\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE cart_items (\n\tcart_item_id INTEGER, \n\tcart_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tPRIMARY KEY (cart_item_id), \n\tFOREIGN KEY(cart_id) REFERENCES cart (cart_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from cart_items table:\ncart_item_id\tcart_id\tproduct_id\tquantity\n1\t1\t3\t1\n2\t2\t4\t2\n3\t3\t2\t1\n*/\n\n\nCREATE TABLE categories (\n\tcategory_id INTEGER, \n\tcategory_name TEXT NOT NULL, \n\tdescription TEXT, \n\tPRIMARY KEY (category_id)\n)\n\n/*\n3 rows from categories table:\ncategory_id\tcategory_name\tdescription\n1\tMobiles\tSmartphones and accessories\n2\tClothing\tMen and Women fashion\n3\tComputers\tLaptops and peripherals\n*/\n\n\nCREATE TABLE coupons (\n\tcoupon_id INTEGER, \n\tcode TEXT, \n\tdiscount_percent INTEGER, \n\tvalid_from DATE, \n\tvalid_to DATE, \n\tPRIMARY KEY (coupon_id), \n\tUNIQUE (code), \n\tCHECK (discount_percent BETWEEN 1 AND 100)\n)\n\n/*\n3 rows from coupons table:\ncoupon_id\tcode\tdiscount_percent\tvalid_from\tvalid_to\n1\tNEPAL10\t10\t2025-07-01\t2025-12-31\n2\tFEST20\t20\t2025-07-01\t2025-12-31\n3\tWELCOME5\t5\t2025-07-01\t2025-12-31\n*/\n\n\nCREATE TABLE order_coupons (\n\tid INTEGER, \n\torder_id INTEGER, \n\tcoupon_id INTEGER, \n\tPRIMARY KEY (id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(coupon_id) REFERENCES coupons (coupon_id)\n)\n\n/*\n3 rows from order_coupons table:\nid\torder_id\tcoupon_id\n1\t1\t1\n2\t2\t2\n3\t3\t3\n*/\n\n\nCREATE TABLE order_items (\n\torder_item_id INTEGER, \n\torder_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tprice REAL NOT NULL, \n\tPRIMARY KEY (order_item_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from order_items table:\norder_item_id\torder_id\tproduct_id\tquantity\tprice\n1\t1\t1\t1\t550.0\n2\t2\t3\t1\t120.0\n3\t3\t4\t1\t1300.0\n*/\n\n\nCREATE TABLE orders (\n\torder_id INTEGER, \n\tuser_id INTEGER, \n\torder_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tstatus TEXT DEFAULT 'Pending', \n\ttotal_amount REAL, \n\tPRIMARY KEY (order_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from orders table:\norder_id\tuser_id\torder_date\tstatus\ttotal_amount\n1\t1\t2025-07-28 17:03:54\tPending\t550.0\n2\t2\t2025-07-28 17:03:54\tPending\t120.0\n3\t3\t2025-07-28 17:03:54\tPending\t1300.0\n*/\n\n\nCREATE TABLE payments (\n\tpayment_id INTEGER, \n\torder_id INTEGER, \n\tpayment_method TEXT, \n\tamount REAL, \n\tpayment_status TEXT DEFAULT 'Pending', \n\tpaid_at TIMESTAMP, \n\tPRIMARY KEY (payment_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from payments table:\npayment_id\torder_id\tpayment_method\tamount\tpayment_status\tpaid_at\n1\t1\tEsewa\t550.0\tCompleted\tNone\n2\t2\tKhalti\t120.0\tCompleted\tNone\n3\t3\tCash\t1300.0\tPending\tNone\n*/\n\n\nCREATE TABLE product_images (\n\timage_id INTEGER, \n\tproduct_id INTEGER, \n\timage_url TEXT NOT NULL, \n\tPRIMARY KEY (image_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from product_images table:\nimage_id\tproduct_id\timage_url\n1\t1\tsamsung.jpg\n2\t2\tiphone.jpg\n3\t3\tcoat.jpg\n*/\n\n\nCREATE TABLE products (\n\tproduct_id INTEGER, \n\tcategory_id INTEGER, \n\tname TEXT NOT NULL, \n\tdescription TEXT, \n\tprice REAL NOT NULL, \n\tstock INTEGER DEFAULT 0, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (product_id), \n\tFOREIGN KEY(category_id) REFERENCES categories (category_id)\n)\n\n/*\n3 rows from products table:\nproduct_id\tcategory_id\tname\tdescription\tprice\tstock\tcreated_at\n1\t1\tSamsung Galaxy A55\t5G smartphone with AMOLED display\t550.0\t50\t2025-07-28 17:03:54\n2\t1\tiPhone 15\tLatest Apple flagship smartphone\t999.0\t30\t2025-07-28 17:03:54\n3\t2\tWinter Coat\tStylish warm coat for winter\t120.0\t25\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE reviews (\n\treview_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\trating INTEGER, \n\tcomment TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (review_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id), \n\tCHECK (rating BETWEEN 1 AND 5)\n)\n\n/*\n3 rows from reviews table:\nreview_id\tuser_id\tproduct_id\trating\tcomment\tcreated_at\n1\t1\t1\t5\tExcellent smartphone!\t2025-07-28 17:03:54\n2\t2\t3\t4\tCoat is warm and stylish.\t2025-07-28 17:03:54\n3\t3\t4\t5\tLaptop is powerful.\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE shipping (\n\tshipping_id INTEGER, \n\torder_id INTEGER, \n\ttracking_number TEXT, \n\tshipping_address TEXT, \n\tshipping_date TIMESTAMP, \n\tdelivery_date TIMESTAMP, \n\tstatus TEXT DEFAULT 'Preparing', \n\tPRIMARY KEY (shipping_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from shipping table:\nshipping_id\torder_id\ttracking_number\tshipping_address\tshipping_date\tdelivery_date\tstatus\n1\t1\tTRK001\tKathmandu\t2025-07-01 00:00:00\t2025-07-05 00:00:00\tDelivered\n2\t2\tTRK002\tPokhara\t2025-07-02 00:00:00\t2025-07-06 00:00:00\tDelivered\n3\t3\tTRK003\tButwal\t2025-07-03 00:00:00\t2025-07-08 00:00:00\tShipped\n*/\n\n\nCREATE TABLE users (\n\tuser_id INTEGER, \n\tname TEXT, \n\temail TEXT, \n\tpassword TEXT, \n\tphone TEXT, \n\taddress TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (user_id), \n\tUNIQUE (email)\n)\n\n/*\n3 rows from users table:\nuser_id\tname\temail\tpassword\tphone\taddress\tcreated_at\n1\tArun Pandey\tarun@example.com\tpass\t9801111111\tKathmandu\t2025-07-28 17:03:54\n2\tSita Sharma\tsita@example.com\tpass\t9802222222\tPokhara\t2025-07-28 17:03:54\n3\tRam Thapa\tram@example.com\tpass\t9803333333\tButwal\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE wishlist (\n\twishlist_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\tadded_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (wishlist_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from wishlist table:\nwishlist_id\tuser_id\tproduct_id\tadded_at\n1\t1\t2\t2025-07-28 17:03:54\n2\t2\t3\t2025-07-28 17:03:54\n3\t3\t1\t2025-07-28 17:03:54\n*/")]
2025-07-29 13:46:01 [DEBUG   ] SQLAgent: Query attempt #1
2025-07-29 13:46:01 [INFO    ] SQLAgent: Invoking LLM for SQL generation...
2025-07-29 13:46:01 [INFO    ] SQLAgent: LLM generated SQL in 0.68 seconds.
2025-07-29 13:46:01 [DEBUG   ] SQLAgent: LLM response content: SELECT * FROM orders;
2025-07-29 13:46:01 [INFO    ] SQLAgent: Valid SELECT query detected. Proceeding to execute_query.
2025-07-29 13:46:01 [INFO    ] SQLAgent: Executing SQL query from last message.
2025-07-29 13:46:01 [DEBUG   ] SQLAgent: Last message type: AIMessage, content: SELECT * FROM orders;
2025-07-29 13:46:01 [DEBUG   ] SQLAgent: Raw SQL content: SELECT * FROM orders;
2025-07-29 13:46:01 [INFO    ] SQLAgent: Extracted SQL query: SELECT * FROM orders;
2025-07-29 13:46:01 [INFO    ] SQLAgent: Query executed in 0.00 seconds.
2025-07-29 13:46:01 [INFO    ] SQLAgent: Query result: [(1, 1, '2025-07-28 17:03:54', 'Pending', 550.0), (2, 2, '2025-07-28 17:03:54', 'Pending', 120.0), (3, 3, '2025-07-28 17:03:54', 'Pending', 1300.0), (4, 4, '2025-07-28 17:03:54', 'Pending', 12.0), (5,...
2025-07-29 13:46:01 [INFO    ] SQLAgent: Query executed successfully. Proceeding to interpretation.
2025-07-29 13:46:01 [INFO    ] SQLAgent: Interpreting query results into natural language answer.
2025-07-29 13:46:01 [DEBUG   ] SQLAgent: Message history for interpretation: [('HumanMessage', 'display all the orders'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist'), ('AIMessage', ''), ('ToolMessage', "\nCREATE TABLE cart (\n\tcart_id INTEGER, \n\tuser_id INTEGER, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (cart_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from cart table:\ncart_id\tuser_id\tcreated_at\n1\t1\t2025-07-28 17:03:54\n2\t2\t2025-07-28 17:03:54\n3\t3\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE cart_items (\n\tcart_item_id INTEGER, \n\tcart_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tPRIMARY KEY (cart_item_id), \n\tFOREIGN KEY(cart_id) REFERENCES cart (cart_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from cart_items table:\ncart_item_id\tcart_id\tproduct_id\tquantity\n1\t1\t3\t1\n2\t2\t4\t2\n3\t3\t2\t1\n*/\n\n\nCREATE TABLE categories (\n\tcategory_id INTEGER, \n\tcategory_name TEXT NOT NULL, \n\tdescription TEXT, \n\tPRIMARY KEY (category_id)\n)\n\n/*\n3 rows from categories table:\ncategory_id\tcategory_name\tdescription\n1\tMobiles\tSmartphones and accessories\n2\tClothing\tMen and Women fashion\n3\tComputers\tLaptops and peripherals\n*/\n\n\nCREATE TABLE coupons (\n\tcoupon_id INTEGER, \n\tcode TEXT, \n\tdiscount_percent INTEGER, \n\tvalid_from DATE, \n\tvalid_to DATE, \n\tPRIMARY KEY (coupon_id), \n\tUNIQUE (code), \n\tCHECK (discount_percent BETWEEN 1 AND 100)\n)\n\n/*\n3 rows from coupons table:\ncoupon_id\tcode\tdiscount_percent\tvalid_from\tvalid_to\n1\tNEPAL10\t10\t2025-07-01\t2025-12-31\n2\tFEST20\t20\t2025-07-01\t2025-12-31\n3\tWELCOME5\t5\t2025-07-01\t2025-12-31\n*/\n\n\nCREATE TABLE order_coupons (\n\tid INTEGER, \n\torder_id INTEGER, \n\tcoupon_id INTEGER, \n\tPRIMARY KEY (id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(coupon_id) REFERENCES coupons (coupon_id)\n)\n\n/*\n3 rows from order_coupons table:\nid\torder_id\tcoupon_id\n1\t1\t1\n2\t2\t2\n3\t3\t3\n*/\n\n\nCREATE TABLE order_items (\n\torder_item_id INTEGER, \n\torder_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tprice REAL NOT NULL, \n\tPRIMARY KEY (order_item_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from order_items table:\norder_item_id\torder_id\tproduct_id\tquantity\tprice\n1\t1\t1\t1\t550.0\n2\t2\t3\t1\t120.0\n3\t3\t4\t1\t1300.0\n*/\n\n\nCREATE TABLE orders (\n\torder_id INTEGER, \n\tuser_id INTEGER, \n\torder_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tstatus TEXT DEFAULT 'Pending', \n\ttotal_amount REAL, \n\tPRIMARY KEY (order_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from orders table:\norder_id\tuser_id\torder_date\tstatus\ttotal_amount\n1\t1\t2025-07-28 17:03:54\tPending\t550.0\n2\t2\t2025-07-28 17:03:54\tPending\t120.0\n3\t3\t2025-07-28 17:03:54\tPending\t1300.0\n*/\n\n\nCREATE TABLE payments (\n\tpayment_id INTEGER, \n\torder_id INTEGER, \n\tpayment_method TEXT, \n\tamount REAL, \n\tpayment_status TEXT DEFAULT 'Pending', \n\tpaid_at TIMESTAMP, \n\tPRIMARY KEY (payment_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from payments table:\npayment_id\torder_id\tpayment_method\tamount\tpayment_status\tpaid_at\n1\t1\tEsewa\t550.0\tCompleted\tNone\n2\t2\tKhalti\t120.0\tCompleted\tNone\n3\t3\tCash\t1300.0\tPending\tNone\n*/\n\n\nCREATE TABLE product_images (\n\timage_id INTEGER, \n\tproduct_id INTEGER, \n\timage_url TEXT NOT NULL, \n\tPRIMARY KEY (image_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from product_images table:\nimage_id\tproduct_id\timage_url\n1\t1\tsamsung.jpg\n2\t2\tiphone.jpg\n3\t3\tcoat.jpg\n*/\n\n\nCREATE TABLE products (\n\tproduct_id INTEGER, \n\tcategory_id INTEGER, \n\tname TEXT NOT NULL, \n\tdescription TEXT, \n\tprice REAL NOT NULL, \n\tstock INTEGER DEFAULT 0, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (product_id), \n\tFOREIGN KEY(category_id) REFERENCES categories (category_id)\n)\n\n/*\n3 rows from products table:\nproduct_id\tcategory_id\tname\tdescription\tprice\tstock\tcreated_at\n1\t1\tSamsung Galaxy A55\t5G smartphone with AMOLED display\t550.0\t50\t2025-07-28 17:03:54\n2\t1\tiPhone 15\tLatest Apple flagship smartphone\t999.0\t30\t2025-07-28 17:03:54\n3\t2\tWinter Coat\tStylish warm coat for winter\t120.0\t25\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE reviews (\n\treview_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\trating INTEGER, \n\tcomment TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (review_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id), \n\tCHECK (rating BETWEEN 1 AND 5)\n)\n\n/*\n3 rows from reviews table:\nreview_id\tuser_id\tproduct_id\trating\tcomment\tcreated_at\n1\t1\t1\t5\tExcellent smartphone!\t2025-07-28 17:03:54\n2\t2\t3\t4\tCoat is warm and stylish.\t2025-07-28 17:03:54\n3\t3\t4\t5\tLaptop is powerful.\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE shipping (\n\tshipping_id INTEGER, \n\torder_id INTEGER, \n\ttracking_number TEXT, \n\tshipping_address TEXT, \n\tshipping_date TIMESTAMP, \n\tdelivery_date TIMESTAMP, \n\tstatus TEXT DEFAULT 'Preparing', \n\tPRIMARY KEY (shipping_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from shipping table:\nshipping_id\torder_id\ttracking_number\tshipping_address\tshipping_date\tdelivery_date\tstatus\n1\t1\tTRK001\tKathmandu\t2025-07-01 00:00:00\t2025-07-05 00:00:00\tDelivered\n2\t2\tTRK002\tPokhara\t2025-07-02 00:00:00\t2025-07-06 00:00:00\tDelivered\n3\t3\tTRK003\tButwal\t2025-07-03 00:00:00\t2025-07-08 00:00:00\tShipped\n*/\n\n\nCREATE TABLE users (\n\tuser_id INTEGER, \n\tname TEXT, \n\temail TEXT, \n\tpassword TEXT, \n\tphone TEXT, \n\taddress TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (user_id), \n\tUNIQUE (email)\n)\n\n/*\n3 rows from users table:\nuser_id\tname\temail\tpassword\tphone\taddress\tcreated_at\n1\tArun Pandey\tarun@example.com\tpass\t9801111111\tKathmandu\t2025-07-28 17:03:54\n2\tSita Sharma\tsita@example.com\tpass\t9802222222\tPokhara\t2025-07-28 17:03:54\n3\tRam Thapa\tram@example.com\tpass\t9803333333\tButwal\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE wishlist (\n\twishlist_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\tadded_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (wishlist_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from wishlist table:\nwishlist_id\tuser_id\tproduct_id\tadded_at\n1\t1\t2\t2025-07-28 17:03:54\n2\t2\t3\t2025-07-28 17:03:54\n3\t3\t1\t2025-07-28 17:03:54\n*/"), ('AIMessage', 'SELECT * FROM orders;'), ('ToolMessage', "[(1, 1, '2025-07-28 17:03:54', 'Pending', 550.0), (2, 2, '2025-07-28 17:03:54', 'Pending', 120.0), (3, 3, '2025-07-28 17:03:54', 'Pending', 1300.0), (4, 4, '2025-07-28 17:03:54', 'Pending', 12.0), (5, 5, '2025-07-28 17:03:54', 'Pending', 45.0), (6, 6, '2025-07-28 17:03:54', 'Pending', 300.0)]")]
2025-07-29 13:46:01 [INFO    ] SQLAgent: Invoking LLM for result interpretation...
2025-07-29 13:46:03 [INFO    ] SQLAgent: LLM interpretation completed in 1.42 seconds.
2025-07-29 13:46:03 [DEBUG   ] SQLAgent: Interpretation result: Answer: There are 6 orders in total. The orders are from users with IDs 1, 2, 3, 4, 5, and 6. The orders were placed on '2025-07-28 17:03:54' and are currently in the 'Pending' status. The total amount of the orders are 550.0, 120.0, 1300.0, 12.0, 45.0, and 300.0 respectively.
2025-07-29 13:46:03 [INFO    ] SQLAgent: Final answer generated. Ending workflow.
2025-07-29 13:46:03 [INFO    ] SQLAgent: Agent workflow completed in 2.75 seconds.
2025-07-29 13:46:03 [DEBUG   ] SQLAgent: Extracting final SQL query from message history.
2025-07-29 13:46:03 [DEBUG   ] SQLAgent: Extracted SQL query: SELECT * FROM orders;
2025-07-29 13:46:03 [INFO    ] SQLAgent: Final SQL Query: SELECT * FROM orders;
2025-07-29 13:46:03 [INFO    ] SQLAgent: Final Answer: Answer: There are 6 orders in total. The orders are from users with IDs 1, 2, 3, 4, 5, and 6. The orders were placed on '2025-07-28 17:03:54' and are currently in the 'Pending' status. The total amount of the orders are 550.0, 120.0, 1300.0, 12.0, 45.0, and 300.0 respectively.
2025-07-29 13:46:03 [INFO    ] SQLAgent: === Example Query Execution Completed ===
2025-07-29 13:46:56 [INFO    ] SQLAgent: === Starting SQL Agent Example ===
2025-07-29 13:46:56 [INFO    ] SQLAgent: Initializing SQLAgent...
2025-07-29 13:46:56 [DEBUG   ] SQLAgent: Input - db_path: D:\ML(ExtraClass Project)\AGENT AI\SQL-Sage-Intelligent-DB-Agent-with-Gemini-LangGraph\database\final_ecommerce.db, model_name: llama-3.1-8b-instant
2025-07-29 13:46:56 [DEBUG   ] SQLAgent: Connection string created: sqlite:///D:\ML(ExtraClass Project)\AGENT AI\SQL-Sage-Intelligent-DB-Agent-with-Gemini-LangGraph\database\final_ecommerce.db
2025-07-29 13:46:56 [INFO    ] SQLAgent: Connected to SQLite database.
2025-07-29 13:46:56 [DEBUG   ] SQLAgent: Database usable tables: ['cart', 'cart_items', 'categories', 'coupons', 'order_coupons', 'order_items', 'orders', 'payments', 'product_images', 'products', 'reviews', 'shipping', 'users', 'wishlist']
2025-07-29 13:46:56 [INFO    ] SQLAgent: Groq LLM initialized with model: llama-3.1-8b-instant
2025-07-29 13:46:56 [INFO    ] SQLAgent: Starting _setup_tools...
2025-07-29 13:46:56 [DEBUG   ] SQLAgent: Fetched 4 tools from toolkit: ['sql_db_query', 'sql_db_schema', 'sql_db_list_tables', 'sql_db_query_checker']
2025-07-29 13:46:56 [DEBUG   ] SQLAgent: Tool 'sql_db_list_tables' loaded.
2025-07-29 13:46:56 [DEBUG   ] SQLAgent: Tool 'sql_db_schema' loaded.
2025-07-29 13:46:56 [INFO    ] SQLAgent: All tools setup completed.
2025-07-29 13:46:56 [INFO    ] SQLAgent: Setting up prompts...
2025-07-29 13:46:56 [DEBUG   ] SQLAgent: Query generation prompt created.
2025-07-29 13:46:56 [DEBUG   ] SQLAgent: Interpretation prompt created.
2025-07-29 13:46:56 [INFO    ] SQLAgent: Prompts setup completed.
2025-07-29 13:46:56 [INFO    ] SQLAgent: Building LangGraph workflow...
2025-07-29 13:46:56 [DEBUG   ] SQLAgent: Node 'first_tool_call' added to graph.
2025-07-29 13:46:56 [DEBUG   ] SQLAgent: Creating tool node with fallback for tools: ['sql_db_list_tables']
2025-07-29 13:46:56 [DEBUG   ] SQLAgent: Tool node with fallback created.
2025-07-29 13:46:56 [DEBUG   ] SQLAgent: Node 'list_tables_tool' added to graph.
2025-07-29 13:46:56 [DEBUG   ] SQLAgent: Node 'model_get_schema' added to graph.
2025-07-29 13:46:56 [DEBUG   ] SQLAgent: Creating tool node with fallback for tools: ['sql_db_schema']
2025-07-29 13:46:56 [DEBUG   ] SQLAgent: Tool node with fallback created.
2025-07-29 13:46:56 [DEBUG   ] SQLAgent: Node 'get_schema_tool' added to graph.
2025-07-29 13:46:56 [DEBUG   ] SQLAgent: Node 'query_gen' added to graph.
2025-07-29 13:46:56 [DEBUG   ] SQLAgent: Node 'execute_query' added to graph.
2025-07-29 13:46:56 [DEBUG   ] SQLAgent: Node 'interpret_results' added to graph.
2025-07-29 13:46:56 [DEBUG   ] SQLAgent: Edge: START → first_tool_call
2025-07-29 13:46:56 [DEBUG   ] SQLAgent: Edge: first_tool_call → list_tables_tool
2025-07-29 13:46:56 [DEBUG   ] SQLAgent: Edge: list_tables_tool → model_get_schema
2025-07-29 13:46:56 [DEBUG   ] SQLAgent: Edge: model_get_schema → get_schema_tool
2025-07-29 13:46:56 [DEBUG   ] SQLAgent: Edge: get_schema_tool → query_gen
2025-07-29 13:46:56 [DEBUG   ] SQLAgent: Conditional edges added from 'query_gen'
2025-07-29 13:46:56 [DEBUG   ] SQLAgent: Conditional edges added from 'execute_query'
2025-07-29 13:46:56 [DEBUG   ] SQLAgent: Conditional edges added from 'interpret_results'
2025-07-29 13:46:56 [INFO    ] SQLAgent: LangGraph workflow compiled successfully.
2025-07-29 13:46:56 [INFO    ] SQLAgent: SQLAgent initialization completed.
2025-07-29 13:46:56 [INFO    ] SQLAgent: SQLAgent instance created.
2025-07-29 13:46:56 [INFO    ] SQLAgent: === Example Query Execution ===
2025-07-29 13:46:56 [INFO    ] SQLAgent: Received query: 'hi can you display all users with all their information?'
2025-07-29 13:46:56 [INFO    ] SQLAgent: Setting recursion limit: 15
2025-07-29 13:46:56 [INFO    ] SQLAgent: Invoking agent workflow...
2025-07-29 13:46:56 [INFO    ] SQLAgent: Executing first_tool_call: requesting list of tables.
2025-07-29 13:46:56 [DEBUG   ] SQLAgent: first_tool_call response prepared.
2025-07-29 13:46:56 [INFO    ] SQLAgent: Calling model_get_schema to fetch schema.
2025-07-29 13:46:56 [DEBUG   ] SQLAgent: Current message history: [('HumanMessage', 'hi can you display all users with all their information?'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist')]
2025-07-29 13:46:57 [INFO    ] SQLAgent: LLM schema request took 0.50 seconds.
2025-07-29 13:46:57 [DEBUG   ] SQLAgent: Schema response: content='' additional_kwargs={'tool_calls': [{'id': '5pz71s5d1', 'function': {'arguments': '{"table_names":"users,cart,cart_items,categories,coupons,order_coupons,order_items,orders,payments,product_images,products,reviews,shipping,wishlist"}', 'name': 'sql_db_schema'}, 'type': 'function'}]} response_metadata={'token_usage': {'completion_tokens': 50, 'prompt_tokens': 398, 'total_tokens': 448, 'completion_time': 0.066666667, 'prompt_time': 0.283978028, 'queue_time': 0.05096272099999999, 'total_time': 0.350644695}, 'model_name': 'llama-3.1-8b-instant', 'system_fingerprint': 'fp_c523237e5d', 'service_tier': 'on_demand', 'finish_reason': 'tool_calls', 'logprobs': None} id='run--a9a5d2e2-dacc-4ba3-ad6d-f719ddd5b8dc-0' tool_calls=[{'name': 'sql_db_schema', 'args': {'table_names': 'users,cart,cart_items,categories,coupons,order_coupons,order_items,orders,payments,product_images,products,reviews,shipping,wishlist'}, 'id': '5pz71s5d1', 'type': 'tool_call'}] usage_metadata={'input_tokens': 398, 'output_tokens': 50, 'total_tokens': 448}
2025-07-29 13:46:57 [INFO    ] SQLAgent: Entering query_gen_node to generate SQL query.
2025-07-29 13:46:57 [DEBUG   ] SQLAgent: Message history: [('HumanMessage', 'hi can you display all users with all their information?'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist'), ('AIMessage', ''), ('ToolMessage', "\nCREATE TABLE cart (\n\tcart_id INTEGER, \n\tuser_id INTEGER, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (cart_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from cart table:\ncart_id\tuser_id\tcreated_at\n1\t1\t2025-07-28 17:03:54\n2\t2\t2025-07-28 17:03:54\n3\t3\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE cart_items (\n\tcart_item_id INTEGER, \n\tcart_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tPRIMARY KEY (cart_item_id), \n\tFOREIGN KEY(cart_id) REFERENCES cart (cart_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from cart_items table:\ncart_item_id\tcart_id\tproduct_id\tquantity\n1\t1\t3\t1\n2\t2\t4\t2\n3\t3\t2\t1\n*/\n\n\nCREATE TABLE categories (\n\tcategory_id INTEGER, \n\tcategory_name TEXT NOT NULL, \n\tdescription TEXT, \n\tPRIMARY KEY (category_id)\n)\n\n/*\n3 rows from categories table:\ncategory_id\tcategory_name\tdescription\n1\tMobiles\tSmartphones and accessories\n2\tClothing\tMen and Women fashion\n3\tComputers\tLaptops and peripherals\n*/\n\n\nCREATE TABLE coupons (\n\tcoupon_id INTEGER, \n\tcode TEXT, \n\tdiscount_percent INTEGER, \n\tvalid_from DATE, \n\tvalid_to DATE, \n\tPRIMARY KEY (coupon_id), \n\tUNIQUE (code), \n\tCHECK (discount_percent BETWEEN 1 AND 100)\n)\n\n/*\n3 rows from coupons table:\ncoupon_id\tcode\tdiscount_percent\tvalid_from\tvalid_to\n1\tNEPAL10\t10\t2025-07-01\t2025-12-31\n2\tFEST20\t20\t2025-07-01\t2025-12-31\n3\tWELCOME5\t5\t2025-07-01\t2025-12-31\n*/\n\n\nCREATE TABLE order_coupons (\n\tid INTEGER, \n\torder_id INTEGER, \n\tcoupon_id INTEGER, \n\tPRIMARY KEY (id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(coupon_id) REFERENCES coupons (coupon_id)\n)\n\n/*\n3 rows from order_coupons table:\nid\torder_id\tcoupon_id\n1\t1\t1\n2\t2\t2\n3\t3\t3\n*/\n\n\nCREATE TABLE order_items (\n\torder_item_id INTEGER, \n\torder_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tprice REAL NOT NULL, \n\tPRIMARY KEY (order_item_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from order_items table:\norder_item_id\torder_id\tproduct_id\tquantity\tprice\n1\t1\t1\t1\t550.0\n2\t2\t3\t1\t120.0\n3\t3\t4\t1\t1300.0\n*/\n\n\nCREATE TABLE orders (\n\torder_id INTEGER, \n\tuser_id INTEGER, \n\torder_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tstatus TEXT DEFAULT 'Pending', \n\ttotal_amount REAL, \n\tPRIMARY KEY (order_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from orders table:\norder_id\tuser_id\torder_date\tstatus\ttotal_amount\n1\t1\t2025-07-28 17:03:54\tPending\t550.0\n2\t2\t2025-07-28 17:03:54\tPending\t120.0\n3\t3\t2025-07-28 17:03:54\tPending\t1300.0\n*/\n\n\nCREATE TABLE payments (\n\tpayment_id INTEGER, \n\torder_id INTEGER, \n\tpayment_method TEXT, \n\tamount REAL, \n\tpayment_status TEXT DEFAULT 'Pending', \n\tpaid_at TIMESTAMP, \n\tPRIMARY KEY (payment_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from payments table:\npayment_id\torder_id\tpayment_method\tamount\tpayment_status\tpaid_at\n1\t1\tEsewa\t550.0\tCompleted\tNone\n2\t2\tKhalti\t120.0\tCompleted\tNone\n3\t3\tCash\t1300.0\tPending\tNone\n*/\n\n\nCREATE TABLE product_images (\n\timage_id INTEGER, \n\tproduct_id INTEGER, \n\timage_url TEXT NOT NULL, \n\tPRIMARY KEY (image_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from product_images table:\nimage_id\tproduct_id\timage_url\n1\t1\tsamsung.jpg\n2\t2\tiphone.jpg\n3\t3\tcoat.jpg\n*/\n\n\nCREATE TABLE products (\n\tproduct_id INTEGER, \n\tcategory_id INTEGER, \n\tname TEXT NOT NULL, \n\tdescription TEXT, \n\tprice REAL NOT NULL, \n\tstock INTEGER DEFAULT 0, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (product_id), \n\tFOREIGN KEY(category_id) REFERENCES categories (category_id)\n)\n\n/*\n3 rows from products table:\nproduct_id\tcategory_id\tname\tdescription\tprice\tstock\tcreated_at\n1\t1\tSamsung Galaxy A55\t5G smartphone with AMOLED display\t550.0\t50\t2025-07-28 17:03:54\n2\t1\tiPhone 15\tLatest Apple flagship smartphone\t999.0\t30\t2025-07-28 17:03:54\n3\t2\tWinter Coat\tStylish warm coat for winter\t120.0\t25\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE reviews (\n\treview_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\trating INTEGER, \n\tcomment TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (review_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id), \n\tCHECK (rating BETWEEN 1 AND 5)\n)\n\n/*\n3 rows from reviews table:\nreview_id\tuser_id\tproduct_id\trating\tcomment\tcreated_at\n1\t1\t1\t5\tExcellent smartphone!\t2025-07-28 17:03:54\n2\t2\t3\t4\tCoat is warm and stylish.\t2025-07-28 17:03:54\n3\t3\t4\t5\tLaptop is powerful.\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE shipping (\n\tshipping_id INTEGER, \n\torder_id INTEGER, \n\ttracking_number TEXT, \n\tshipping_address TEXT, \n\tshipping_date TIMESTAMP, \n\tdelivery_date TIMESTAMP, \n\tstatus TEXT DEFAULT 'Preparing', \n\tPRIMARY KEY (shipping_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from shipping table:\nshipping_id\torder_id\ttracking_number\tshipping_address\tshipping_date\tdelivery_date\tstatus\n1\t1\tTRK001\tKathmandu\t2025-07-01 00:00:00\t2025-07-05 00:00:00\tDelivered\n2\t2\tTRK002\tPokhara\t2025-07-02 00:00:00\t2025-07-06 00:00:00\tDelivered\n3\t3\tTRK003\tButwal\t2025-07-03 00:00:00\t2025-07-08 00:00:00\tShipped\n*/\n\n\nCREATE TABLE users (\n\tuser_id INTEGER, \n\tname TEXT, \n\temail TEXT, \n\tpassword TEXT, \n\tphone TEXT, \n\taddress TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (user_id), \n\tUNIQUE (email)\n)\n\n/*\n3 rows from users table:\nuser_id\tname\temail\tpassword\tphone\taddress\tcreated_at\n1\tArun Pandey\tarun@example.com\tpass\t9801111111\tKathmandu\t2025-07-28 17:03:54\n2\tSita Sharma\tsita@example.com\tpass\t9802222222\tPokhara\t2025-07-28 17:03:54\n3\tRam Thapa\tram@example.com\tpass\t9803333333\tButwal\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE wishlist (\n\twishlist_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\tadded_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (wishlist_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from wishlist table:\nwishlist_id\tuser_id\tproduct_id\tadded_at\n1\t1\t2\t2025-07-28 17:03:54\n2\t2\t3\t2025-07-28 17:03:54\n3\t3\t1\t2025-07-28 17:03:54\n*/")]
2025-07-29 13:46:57 [DEBUG   ] SQLAgent: Query attempt #1
2025-07-29 13:46:57 [INFO    ] SQLAgent: Invoking LLM for SQL generation...
2025-07-29 13:46:59 [INFO    ] SQLAgent: LLM generated SQL in 1.46 seconds.
2025-07-29 13:46:59 [DEBUG   ] SQLAgent: LLM response content: SELECT * FROM users LIMIT 10;
2025-07-29 13:46:59 [INFO    ] SQLAgent: Valid SELECT query detected. Proceeding to execute_query.
2025-07-29 13:46:59 [INFO    ] SQLAgent: Executing SQL query from last message.
2025-07-29 13:46:59 [DEBUG   ] SQLAgent: Last message type: AIMessage, content: SELECT * FROM users LIMIT 10;
2025-07-29 13:46:59 [DEBUG   ] SQLAgent: Raw SQL content: SELECT * FROM users LIMIT 10;
2025-07-29 13:46:59 [INFO    ] SQLAgent: Extracted SQL query: SELECT * FROM users LIMIT 10;
2025-07-29 13:46:59 [INFO    ] SQLAgent: Query executed in 0.00 seconds.
2025-07-29 13:46:59 [INFO    ] SQLAgent: Query result: [(1, 'Arun Pandey', 'arun@example.com', 'pass', '9801111111', 'Kathmandu', '2025-07-28 17:03:54'), (2, 'Sita Sharma', 'sita@example.com', 'pass', '9802222222', 'Pokhara', '2025-07-28 17:03:54'), (3, '...
2025-07-29 13:46:59 [INFO    ] SQLAgent: Query executed successfully. Proceeding to interpretation.
2025-07-29 13:46:59 [INFO    ] SQLAgent: Interpreting query results into natural language answer.
2025-07-29 13:46:59 [DEBUG   ] SQLAgent: Message history for interpretation: [('HumanMessage', 'hi can you display all users with all their information?'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist'), ('AIMessage', ''), ('ToolMessage', "\nCREATE TABLE cart (\n\tcart_id INTEGER, \n\tuser_id INTEGER, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (cart_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from cart table:\ncart_id\tuser_id\tcreated_at\n1\t1\t2025-07-28 17:03:54\n2\t2\t2025-07-28 17:03:54\n3\t3\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE cart_items (\n\tcart_item_id INTEGER, \n\tcart_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tPRIMARY KEY (cart_item_id), \n\tFOREIGN KEY(cart_id) REFERENCES cart (cart_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from cart_items table:\ncart_item_id\tcart_id\tproduct_id\tquantity\n1\t1\t3\t1\n2\t2\t4\t2\n3\t3\t2\t1\n*/\n\n\nCREATE TABLE categories (\n\tcategory_id INTEGER, \n\tcategory_name TEXT NOT NULL, \n\tdescription TEXT, \n\tPRIMARY KEY (category_id)\n)\n\n/*\n3 rows from categories table:\ncategory_id\tcategory_name\tdescription\n1\tMobiles\tSmartphones and accessories\n2\tClothing\tMen and Women fashion\n3\tComputers\tLaptops and peripherals\n*/\n\n\nCREATE TABLE coupons (\n\tcoupon_id INTEGER, \n\tcode TEXT, \n\tdiscount_percent INTEGER, \n\tvalid_from DATE, \n\tvalid_to DATE, \n\tPRIMARY KEY (coupon_id), \n\tUNIQUE (code), \n\tCHECK (discount_percent BETWEEN 1 AND 100)\n)\n\n/*\n3 rows from coupons table:\ncoupon_id\tcode\tdiscount_percent\tvalid_from\tvalid_to\n1\tNEPAL10\t10\t2025-07-01\t2025-12-31\n2\tFEST20\t20\t2025-07-01\t2025-12-31\n3\tWELCOME5\t5\t2025-07-01\t2025-12-31\n*/\n\n\nCREATE TABLE order_coupons (\n\tid INTEGER, \n\torder_id INTEGER, \n\tcoupon_id INTEGER, \n\tPRIMARY KEY (id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(coupon_id) REFERENCES coupons (coupon_id)\n)\n\n/*\n3 rows from order_coupons table:\nid\torder_id\tcoupon_id\n1\t1\t1\n2\t2\t2\n3\t3\t3\n*/\n\n\nCREATE TABLE order_items (\n\torder_item_id INTEGER, \n\torder_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tprice REAL NOT NULL, \n\tPRIMARY KEY (order_item_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from order_items table:\norder_item_id\torder_id\tproduct_id\tquantity\tprice\n1\t1\t1\t1\t550.0\n2\t2\t3\t1\t120.0\n3\t3\t4\t1\t1300.0\n*/\n\n\nCREATE TABLE orders (\n\torder_id INTEGER, \n\tuser_id INTEGER, \n\torder_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tstatus TEXT DEFAULT 'Pending', \n\ttotal_amount REAL, \n\tPRIMARY KEY (order_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from orders table:\norder_id\tuser_id\torder_date\tstatus\ttotal_amount\n1\t1\t2025-07-28 17:03:54\tPending\t550.0\n2\t2\t2025-07-28 17:03:54\tPending\t120.0\n3\t3\t2025-07-28 17:03:54\tPending\t1300.0\n*/\n\n\nCREATE TABLE payments (\n\tpayment_id INTEGER, \n\torder_id INTEGER, \n\tpayment_method TEXT, \n\tamount REAL, \n\tpayment_status TEXT DEFAULT 'Pending', \n\tpaid_at TIMESTAMP, \n\tPRIMARY KEY (payment_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from payments table:\npayment_id\torder_id\tpayment_method\tamount\tpayment_status\tpaid_at\n1\t1\tEsewa\t550.0\tCompleted\tNone\n2\t2\tKhalti\t120.0\tCompleted\tNone\n3\t3\tCash\t1300.0\tPending\tNone\n*/\n\n\nCREATE TABLE product_images (\n\timage_id INTEGER, \n\tproduct_id INTEGER, \n\timage_url TEXT NOT NULL, \n\tPRIMARY KEY (image_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from product_images table:\nimage_id\tproduct_id\timage_url\n1\t1\tsamsung.jpg\n2\t2\tiphone.jpg\n3\t3\tcoat.jpg\n*/\n\n\nCREATE TABLE products (\n\tproduct_id INTEGER, \n\tcategory_id INTEGER, \n\tname TEXT NOT NULL, \n\tdescription TEXT, \n\tprice REAL NOT NULL, \n\tstock INTEGER DEFAULT 0, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (product_id), \n\tFOREIGN KEY(category_id) REFERENCES categories (category_id)\n)\n\n/*\n3 rows from products table:\nproduct_id\tcategory_id\tname\tdescription\tprice\tstock\tcreated_at\n1\t1\tSamsung Galaxy A55\t5G smartphone with AMOLED display\t550.0\t50\t2025-07-28 17:03:54\n2\t1\tiPhone 15\tLatest Apple flagship smartphone\t999.0\t30\t2025-07-28 17:03:54\n3\t2\tWinter Coat\tStylish warm coat for winter\t120.0\t25\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE reviews (\n\treview_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\trating INTEGER, \n\tcomment TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (review_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id), \n\tCHECK (rating BETWEEN 1 AND 5)\n)\n\n/*\n3 rows from reviews table:\nreview_id\tuser_id\tproduct_id\trating\tcomment\tcreated_at\n1\t1\t1\t5\tExcellent smartphone!\t2025-07-28 17:03:54\n2\t2\t3\t4\tCoat is warm and stylish.\t2025-07-28 17:03:54\n3\t3\t4\t5\tLaptop is powerful.\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE shipping (\n\tshipping_id INTEGER, \n\torder_id INTEGER, \n\ttracking_number TEXT, \n\tshipping_address TEXT, \n\tshipping_date TIMESTAMP, \n\tdelivery_date TIMESTAMP, \n\tstatus TEXT DEFAULT 'Preparing', \n\tPRIMARY KEY (shipping_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from shipping table:\nshipping_id\torder_id\ttracking_number\tshipping_address\tshipping_date\tdelivery_date\tstatus\n1\t1\tTRK001\tKathmandu\t2025-07-01 00:00:00\t2025-07-05 00:00:00\tDelivered\n2\t2\tTRK002\tPokhara\t2025-07-02 00:00:00\t2025-07-06 00:00:00\tDelivered\n3\t3\tTRK003\tButwal\t2025-07-03 00:00:00\t2025-07-08 00:00:00\tShipped\n*/\n\n\nCREATE TABLE users (\n\tuser_id INTEGER, \n\tname TEXT, \n\temail TEXT, \n\tpassword TEXT, \n\tphone TEXT, \n\taddress TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (user_id), \n\tUNIQUE (email)\n)\n\n/*\n3 rows from users table:\nuser_id\tname\temail\tpassword\tphone\taddress\tcreated_at\n1\tArun Pandey\tarun@example.com\tpass\t9801111111\tKathmandu\t2025-07-28 17:03:54\n2\tSita Sharma\tsita@example.com\tpass\t9802222222\tPokhara\t2025-07-28 17:03:54\n3\tRam Thapa\tram@example.com\tpass\t9803333333\tButwal\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE wishlist (\n\twishlist_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\tadded_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (wishlist_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from wishlist table:\nwishlist_id\tuser_id\tproduct_id\tadded_at\n1\t1\t2\t2025-07-28 17:03:54\n2\t2\t3\t2025-07-28 17:03:54\n3\t3\t1\t2025-07-28 17:03:54\n*/"), ('AIMessage', 'SELECT * FROM users LIMIT 10;'), ('ToolMessage', "[(1, 'Arun Pandey', 'arun@example.com', 'pass', '9801111111', 'Kathmandu', '2025-07-28 17:03:54'), (2, 'Sita Sharma', 'sita@example.com', 'pass', '9802222222', 'Pokhara', '2025-07-28 17:03:54'), (3, 'Ram Thapa', 'ram@example.com', 'pass', '9803333333', 'Butwal', '2025-07-28 17:03:54'), (4, 'Krishna Adhikari', 'krishna@example.com', 'pass', '9804444444', 'Chitwan', '2025-07-28 17:03:54'), (5, 'Bina Kafle', 'bina@example.com', 'pass', '9805555555', 'Lalitpur', '2025-07-28 17:03:54'), (6, 'Binisha Chapagain', 'binisha@example.com', 'pass', '9806666666', 'Bhaktapur', '2025-07-28 17:03:54')]")]
2025-07-29 13:46:59 [INFO    ] SQLAgent: Invoking LLM for result interpretation...
2025-07-29 13:47:00 [INFO    ] SQLAgent: LLM interpretation completed in 1.01 seconds.
2025-07-29 13:47:00 [DEBUG   ] SQLAgent: Interpretation result: Answer: There are 6 users in the database. Their information includes user ID, name, email, password, phone number, address, and the date they were created.
2025-07-29 13:47:00 [INFO    ] SQLAgent: Final answer generated. Ending workflow.
2025-07-29 13:47:00 [INFO    ] SQLAgent: Agent workflow completed in 3.04 seconds.
2025-07-29 13:47:00 [DEBUG   ] SQLAgent: Extracting final SQL query from message history.
2025-07-29 13:47:00 [DEBUG   ] SQLAgent: Extracted SQL query: SELECT * FROM users LIMIT 10;
2025-07-29 13:47:00 [INFO    ] SQLAgent: Final SQL Query: SELECT * FROM users LIMIT 10;
2025-07-29 13:47:00 [INFO    ] SQLAgent: Final Answer: Answer: There are 6 users in the database. Their information includes user ID, name, email, password, phone number, address, and the date they were created.
2025-07-29 13:47:00 [INFO    ] SQLAgent: === Example Query Execution Completed ===
2025-07-29 13:50:15 [INFO    ] SQLAgent: === SQL Agent Logger Initialized (Console Output Disabled, ALL Log Levels Captured) ===
2025-07-29 13:50:15 [DEBUG   ] SQLAgent: DEBUG level logging enabled - all detailed information will be captured
2025-07-29 13:50:15 [WARNING ] SQLAgent: WARNING level logging enabled - all warnings will be captured
2025-07-29 13:50:15 [ERROR   ] SQLAgent: ERROR level logging enabled - all errors will be captured
2025-07-29 13:50:15 [CRITICAL] SQLAgent: CRITICAL level logging enabled - all critical issues will be captured
2025-07-29 13:50:15 [INFO    ] SQLAgent: === Starting SQL Agent  ===
2025-07-29 13:50:15 [INFO    ] SQLAgent: Initializing SQLAgent...
2025-07-29 13:50:15 [DEBUG   ] SQLAgent: Input - db_path: D:\ML(ExtraClass Project)\AGENT AI\SQL-Sage-Intelligent-DB-Agent-with-Gemini-LangGraph\database\final_ecommerce.db, model_name: llama-3.1-8b-instant
2025-07-29 13:50:15 [DEBUG   ] SQLAgent: Connection string created: sqlite:///D:\ML(ExtraClass Project)\AGENT AI\SQL-Sage-Intelligent-DB-Agent-with-Gemini-LangGraph\database\final_ecommerce.db
2025-07-29 13:50:15 [INFO    ] SQLAgent: Connected to SQLite database.
2025-07-29 13:50:15 [DEBUG   ] SQLAgent: Database usable tables: ['cart', 'cart_items', 'categories', 'coupons', 'order_coupons', 'order_items', 'orders', 'payments', 'product_images', 'products', 'reviews', 'shipping', 'users', 'wishlist']
2025-07-29 13:50:16 [INFO    ] SQLAgent: Groq LLM initialized with model: llama-3.1-8b-instant
2025-07-29 13:50:16 [INFO    ] SQLAgent: Starting _setup_tools...
2025-07-29 13:50:16 [DEBUG   ] SQLAgent: Fetched 4 tools from toolkit: ['sql_db_query', 'sql_db_schema', 'sql_db_list_tables', 'sql_db_query_checker']
2025-07-29 13:50:16 [DEBUG   ] SQLAgent: Tool 'sql_db_list_tables' loaded.
2025-07-29 13:50:16 [DEBUG   ] SQLAgent: Tool 'sql_db_schema' loaded.
2025-07-29 13:50:16 [INFO    ] SQLAgent: All tools setup completed.
2025-07-29 13:50:16 [INFO    ] SQLAgent: Setting up prompts...
2025-07-29 13:50:16 [DEBUG   ] SQLAgent: Query generation prompt created.
2025-07-29 13:50:16 [DEBUG   ] SQLAgent: Interpretation prompt created.
2025-07-29 13:50:16 [INFO    ] SQLAgent: Prompts setup completed.
2025-07-29 13:50:16 [INFO    ] SQLAgent: Building LangGraph workflow...
2025-07-29 13:50:16 [DEBUG   ] SQLAgent: Node 'first_tool_call' added to graph.
2025-07-29 13:50:16 [DEBUG   ] SQLAgent: Creating tool node with fallback for tools: ['sql_db_list_tables']
2025-07-29 13:50:16 [DEBUG   ] SQLAgent: Tool node with fallback created.
2025-07-29 13:50:16 [DEBUG   ] SQLAgent: Node 'list_tables_tool' added to graph.
2025-07-29 13:50:16 [DEBUG   ] SQLAgent: Node 'model_get_schema' added to graph.
2025-07-29 13:50:16 [DEBUG   ] SQLAgent: Creating tool node with fallback for tools: ['sql_db_schema']
2025-07-29 13:50:16 [DEBUG   ] SQLAgent: Tool node with fallback created.
2025-07-29 13:50:16 [DEBUG   ] SQLAgent: Node 'get_schema_tool' added to graph.
2025-07-29 13:50:16 [DEBUG   ] SQLAgent: Node 'query_gen' added to graph.
2025-07-29 13:50:16 [DEBUG   ] SQLAgent: Node 'execute_query' added to graph.
2025-07-29 13:50:16 [DEBUG   ] SQLAgent: Node 'interpret_results' added to graph.
2025-07-29 13:50:16 [DEBUG   ] SQLAgent: Edge: START → first_tool_call
2025-07-29 13:50:16 [DEBUG   ] SQLAgent: Edge: first_tool_call → list_tables_tool
2025-07-29 13:50:16 [DEBUG   ] SQLAgent: Edge: list_tables_tool → model_get_schema
2025-07-29 13:50:16 [DEBUG   ] SQLAgent: Edge: model_get_schema → get_schema_tool
2025-07-29 13:50:16 [DEBUG   ] SQLAgent: Edge: get_schema_tool → query_gen
2025-07-29 13:50:16 [DEBUG   ] SQLAgent: Conditional edges added from 'query_gen'
2025-07-29 13:50:16 [DEBUG   ] SQLAgent: Conditional edges added from 'execute_query'
2025-07-29 13:50:16 [DEBUG   ] SQLAgent: Conditional edges added from 'interpret_results'
2025-07-29 13:50:16 [INFO    ] SQLAgent: LangGraph workflow compiled successfully.
2025-07-29 13:50:16 [INFO    ] SQLAgent: SQLAgent initialization completed.
2025-07-29 13:50:16 [INFO    ] SQLAgent: SQLAgent instance created.
2025-07-29 13:50:16 [INFO    ] SQLAgent: === Query Execution ===
2025-07-29 13:50:16 [INFO    ] SQLAgent: Received query: 'hi bro what the email of Arun ?'
2025-07-29 13:50:16 [INFO    ] SQLAgent: Setting recursion limit: 15
2025-07-29 13:50:16 [INFO    ] SQLAgent: Invoking agent workflow...
2025-07-29 13:50:16 [INFO    ] SQLAgent: Executing first_tool_call: requesting list of tables.
2025-07-29 13:50:16 [DEBUG   ] SQLAgent: first_tool_call response prepared.
2025-07-29 13:50:16 [INFO    ] SQLAgent: Calling model_get_schema to fetch schema.
2025-07-29 13:50:16 [DEBUG   ] SQLAgent: Current message history: [('HumanMessage', 'hi bro what the email of Arun ?'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist')]
2025-07-29 13:50:17 [INFO    ] SQLAgent: LLM schema request took 0.65 seconds.
2025-07-29 13:50:17 [DEBUG   ] SQLAgent: Schema response: content='' additional_kwargs={'tool_calls': [{'id': 'j9vqrc5vd', 'function': {'arguments': '{"table_names":"cart,cart_items,categories,coupons,order_coupons,order_items,orders,payments,product_images,products,reviews,shipping,users,wishlist"}', 'name': 'sql_db_schema'}, 'type': 'function'}]} response_metadata={'token_usage': {'completion_tokens': 50, 'prompt_tokens': 396, 'total_tokens': 446, 'completion_time': 0.066666667, 'prompt_time': 0.28457654, 'queue_time': 0.051985590000000026, 'total_time': 0.351243207}, 'model_name': 'llama-3.1-8b-instant', 'system_fingerprint': 'fp_c523237e5d', 'service_tier': 'on_demand', 'finish_reason': 'tool_calls', 'logprobs': None} id='run--9e82d8e2-ff40-465d-a974-22e3abde1018-0' tool_calls=[{'name': 'sql_db_schema', 'args': {'table_names': 'cart,cart_items,categories,coupons,order_coupons,order_items,orders,payments,product_images,products,reviews,shipping,users,wishlist'}, 'id': 'j9vqrc5vd', 'type': 'tool_call'}] usage_metadata={'input_tokens': 396, 'output_tokens': 50, 'total_tokens': 446}
2025-07-29 13:50:17 [INFO    ] SQLAgent: Entering query_gen_node to generate SQL query.
2025-07-29 13:50:17 [DEBUG   ] SQLAgent: Message history: [('HumanMessage', 'hi bro what the email of Arun ?'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist'), ('AIMessage', ''), ('ToolMessage', "\nCREATE TABLE cart (\n\tcart_id INTEGER, \n\tuser_id INTEGER, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (cart_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from cart table:\ncart_id\tuser_id\tcreated_at\n1\t1\t2025-07-28 17:03:54\n2\t2\t2025-07-28 17:03:54\n3\t3\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE cart_items (\n\tcart_item_id INTEGER, \n\tcart_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tPRIMARY KEY (cart_item_id), \n\tFOREIGN KEY(cart_id) REFERENCES cart (cart_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from cart_items table:\ncart_item_id\tcart_id\tproduct_id\tquantity\n1\t1\t3\t1\n2\t2\t4\t2\n3\t3\t2\t1\n*/\n\n\nCREATE TABLE categories (\n\tcategory_id INTEGER, \n\tcategory_name TEXT NOT NULL, \n\tdescription TEXT, \n\tPRIMARY KEY (category_id)\n)\n\n/*\n3 rows from categories table:\ncategory_id\tcategory_name\tdescription\n1\tMobiles\tSmartphones and accessories\n2\tClothing\tMen and Women fashion\n3\tComputers\tLaptops and peripherals\n*/\n\n\nCREATE TABLE coupons (\n\tcoupon_id INTEGER, \n\tcode TEXT, \n\tdiscount_percent INTEGER, \n\tvalid_from DATE, \n\tvalid_to DATE, \n\tPRIMARY KEY (coupon_id), \n\tUNIQUE (code), \n\tCHECK (discount_percent BETWEEN 1 AND 100)\n)\n\n/*\n3 rows from coupons table:\ncoupon_id\tcode\tdiscount_percent\tvalid_from\tvalid_to\n1\tNEPAL10\t10\t2025-07-01\t2025-12-31\n2\tFEST20\t20\t2025-07-01\t2025-12-31\n3\tWELCOME5\t5\t2025-07-01\t2025-12-31\n*/\n\n\nCREATE TABLE order_coupons (\n\tid INTEGER, \n\torder_id INTEGER, \n\tcoupon_id INTEGER, \n\tPRIMARY KEY (id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(coupon_id) REFERENCES coupons (coupon_id)\n)\n\n/*\n3 rows from order_coupons table:\nid\torder_id\tcoupon_id\n1\t1\t1\n2\t2\t2\n3\t3\t3\n*/\n\n\nCREATE TABLE order_items (\n\torder_item_id INTEGER, \n\torder_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tprice REAL NOT NULL, \n\tPRIMARY KEY (order_item_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from order_items table:\norder_item_id\torder_id\tproduct_id\tquantity\tprice\n1\t1\t1\t1\t550.0\n2\t2\t3\t1\t120.0\n3\t3\t4\t1\t1300.0\n*/\n\n\nCREATE TABLE orders (\n\torder_id INTEGER, \n\tuser_id INTEGER, \n\torder_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tstatus TEXT DEFAULT 'Pending', \n\ttotal_amount REAL, \n\tPRIMARY KEY (order_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from orders table:\norder_id\tuser_id\torder_date\tstatus\ttotal_amount\n1\t1\t2025-07-28 17:03:54\tPending\t550.0\n2\t2\t2025-07-28 17:03:54\tPending\t120.0\n3\t3\t2025-07-28 17:03:54\tPending\t1300.0\n*/\n\n\nCREATE TABLE payments (\n\tpayment_id INTEGER, \n\torder_id INTEGER, \n\tpayment_method TEXT, \n\tamount REAL, \n\tpayment_status TEXT DEFAULT 'Pending', \n\tpaid_at TIMESTAMP, \n\tPRIMARY KEY (payment_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from payments table:\npayment_id\torder_id\tpayment_method\tamount\tpayment_status\tpaid_at\n1\t1\tEsewa\t550.0\tCompleted\tNone\n2\t2\tKhalti\t120.0\tCompleted\tNone\n3\t3\tCash\t1300.0\tPending\tNone\n*/\n\n\nCREATE TABLE product_images (\n\timage_id INTEGER, \n\tproduct_id INTEGER, \n\timage_url TEXT NOT NULL, \n\tPRIMARY KEY (image_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from product_images table:\nimage_id\tproduct_id\timage_url\n1\t1\tsamsung.jpg\n2\t2\tiphone.jpg\n3\t3\tcoat.jpg\n*/\n\n\nCREATE TABLE products (\n\tproduct_id INTEGER, \n\tcategory_id INTEGER, \n\tname TEXT NOT NULL, \n\tdescription TEXT, \n\tprice REAL NOT NULL, \n\tstock INTEGER DEFAULT 0, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (product_id), \n\tFOREIGN KEY(category_id) REFERENCES categories (category_id)\n)\n\n/*\n3 rows from products table:\nproduct_id\tcategory_id\tname\tdescription\tprice\tstock\tcreated_at\n1\t1\tSamsung Galaxy A55\t5G smartphone with AMOLED display\t550.0\t50\t2025-07-28 17:03:54\n2\t1\tiPhone 15\tLatest Apple flagship smartphone\t999.0\t30\t2025-07-28 17:03:54\n3\t2\tWinter Coat\tStylish warm coat for winter\t120.0\t25\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE reviews (\n\treview_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\trating INTEGER, \n\tcomment TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (review_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id), \n\tCHECK (rating BETWEEN 1 AND 5)\n)\n\n/*\n3 rows from reviews table:\nreview_id\tuser_id\tproduct_id\trating\tcomment\tcreated_at\n1\t1\t1\t5\tExcellent smartphone!\t2025-07-28 17:03:54\n2\t2\t3\t4\tCoat is warm and stylish.\t2025-07-28 17:03:54\n3\t3\t4\t5\tLaptop is powerful.\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE shipping (\n\tshipping_id INTEGER, \n\torder_id INTEGER, \n\ttracking_number TEXT, \n\tshipping_address TEXT, \n\tshipping_date TIMESTAMP, \n\tdelivery_date TIMESTAMP, \n\tstatus TEXT DEFAULT 'Preparing', \n\tPRIMARY KEY (shipping_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from shipping table:\nshipping_id\torder_id\ttracking_number\tshipping_address\tshipping_date\tdelivery_date\tstatus\n1\t1\tTRK001\tKathmandu\t2025-07-01 00:00:00\t2025-07-05 00:00:00\tDelivered\n2\t2\tTRK002\tPokhara\t2025-07-02 00:00:00\t2025-07-06 00:00:00\tDelivered\n3\t3\tTRK003\tButwal\t2025-07-03 00:00:00\t2025-07-08 00:00:00\tShipped\n*/\n\n\nCREATE TABLE users (\n\tuser_id INTEGER, \n\tname TEXT, \n\temail TEXT, \n\tpassword TEXT, \n\tphone TEXT, \n\taddress TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (user_id), \n\tUNIQUE (email)\n)\n\n/*\n3 rows from users table:\nuser_id\tname\temail\tpassword\tphone\taddress\tcreated_at\n1\tArun Pandey\tarun@example.com\tpass\t9801111111\tKathmandu\t2025-07-28 17:03:54\n2\tSita Sharma\tsita@example.com\tpass\t9802222222\tPokhara\t2025-07-28 17:03:54\n3\tRam Thapa\tram@example.com\tpass\t9803333333\tButwal\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE wishlist (\n\twishlist_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\tadded_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (wishlist_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from wishlist table:\nwishlist_id\tuser_id\tproduct_id\tadded_at\n1\t1\t2\t2025-07-28 17:03:54\n2\t2\t3\t2025-07-28 17:03:54\n3\t3\t1\t2025-07-28 17:03:54\n*/")]
2025-07-29 13:50:17 [DEBUG   ] SQLAgent: Query attempt #1
2025-07-29 13:50:17 [INFO    ] SQLAgent: Invoking LLM for SQL generation...
2025-07-29 13:50:17 [INFO    ] SQLAgent: LLM generated SQL in 0.56 seconds.
2025-07-29 13:50:17 [DEBUG   ] SQLAgent: LLM response content: SELECT email FROM users WHERE name = 'Arun';
2025-07-29 13:50:17 [INFO    ] SQLAgent: Valid SELECT query detected. Proceeding to execute_query.
2025-07-29 13:50:17 [INFO    ] SQLAgent: Executing SQL query from last message.
2025-07-29 13:50:17 [DEBUG   ] SQLAgent: Last message type: AIMessage, content: SELECT email FROM users WHERE name = 'Arun';
2025-07-29 13:50:17 [DEBUG   ] SQLAgent: Raw SQL content: SELECT email FROM users WHERE name = 'Arun';
2025-07-29 13:50:17 [INFO    ] SQLAgent: Extracted SQL query: SELECT email FROM users WHERE name = 'Arun';
2025-07-29 13:50:17 [INFO    ] SQLAgent: Query executed in 0.00 seconds.
2025-07-29 13:50:17 [INFO    ] SQLAgent: Query returned no results.
2025-07-29 13:50:17 [INFO    ] SQLAgent: Query executed successfully. Proceeding to interpretation.
2025-07-29 13:50:17 [INFO    ] SQLAgent: Interpreting query results into natural language answer.
2025-07-29 13:50:17 [DEBUG   ] SQLAgent: Message history for interpretation: [('HumanMessage', 'hi bro what the email of Arun ?'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist'), ('AIMessage', ''), ('ToolMessage', "\nCREATE TABLE cart (\n\tcart_id INTEGER, \n\tuser_id INTEGER, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (cart_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from cart table:\ncart_id\tuser_id\tcreated_at\n1\t1\t2025-07-28 17:03:54\n2\t2\t2025-07-28 17:03:54\n3\t3\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE cart_items (\n\tcart_item_id INTEGER, \n\tcart_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tPRIMARY KEY (cart_item_id), \n\tFOREIGN KEY(cart_id) REFERENCES cart (cart_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from cart_items table:\ncart_item_id\tcart_id\tproduct_id\tquantity\n1\t1\t3\t1\n2\t2\t4\t2\n3\t3\t2\t1\n*/\n\n\nCREATE TABLE categories (\n\tcategory_id INTEGER, \n\tcategory_name TEXT NOT NULL, \n\tdescription TEXT, \n\tPRIMARY KEY (category_id)\n)\n\n/*\n3 rows from categories table:\ncategory_id\tcategory_name\tdescription\n1\tMobiles\tSmartphones and accessories\n2\tClothing\tMen and Women fashion\n3\tComputers\tLaptops and peripherals\n*/\n\n\nCREATE TABLE coupons (\n\tcoupon_id INTEGER, \n\tcode TEXT, \n\tdiscount_percent INTEGER, \n\tvalid_from DATE, \n\tvalid_to DATE, \n\tPRIMARY KEY (coupon_id), \n\tUNIQUE (code), \n\tCHECK (discount_percent BETWEEN 1 AND 100)\n)\n\n/*\n3 rows from coupons table:\ncoupon_id\tcode\tdiscount_percent\tvalid_from\tvalid_to\n1\tNEPAL10\t10\t2025-07-01\t2025-12-31\n2\tFEST20\t20\t2025-07-01\t2025-12-31\n3\tWELCOME5\t5\t2025-07-01\t2025-12-31\n*/\n\n\nCREATE TABLE order_coupons (\n\tid INTEGER, \n\torder_id INTEGER, \n\tcoupon_id INTEGER, \n\tPRIMARY KEY (id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(coupon_id) REFERENCES coupons (coupon_id)\n)\n\n/*\n3 rows from order_coupons table:\nid\torder_id\tcoupon_id\n1\t1\t1\n2\t2\t2\n3\t3\t3\n*/\n\n\nCREATE TABLE order_items (\n\torder_item_id INTEGER, \n\torder_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tprice REAL NOT NULL, \n\tPRIMARY KEY (order_item_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from order_items table:\norder_item_id\torder_id\tproduct_id\tquantity\tprice\n1\t1\t1\t1\t550.0\n2\t2\t3\t1\t120.0\n3\t3\t4\t1\t1300.0\n*/\n\n\nCREATE TABLE orders (\n\torder_id INTEGER, \n\tuser_id INTEGER, \n\torder_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tstatus TEXT DEFAULT 'Pending', \n\ttotal_amount REAL, \n\tPRIMARY KEY (order_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from orders table:\norder_id\tuser_id\torder_date\tstatus\ttotal_amount\n1\t1\t2025-07-28 17:03:54\tPending\t550.0\n2\t2\t2025-07-28 17:03:54\tPending\t120.0\n3\t3\t2025-07-28 17:03:54\tPending\t1300.0\n*/\n\n\nCREATE TABLE payments (\n\tpayment_id INTEGER, \n\torder_id INTEGER, \n\tpayment_method TEXT, \n\tamount REAL, \n\tpayment_status TEXT DEFAULT 'Pending', \n\tpaid_at TIMESTAMP, \n\tPRIMARY KEY (payment_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from payments table:\npayment_id\torder_id\tpayment_method\tamount\tpayment_status\tpaid_at\n1\t1\tEsewa\t550.0\tCompleted\tNone\n2\t2\tKhalti\t120.0\tCompleted\tNone\n3\t3\tCash\t1300.0\tPending\tNone\n*/\n\n\nCREATE TABLE product_images (\n\timage_id INTEGER, \n\tproduct_id INTEGER, \n\timage_url TEXT NOT NULL, \n\tPRIMARY KEY (image_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from product_images table:\nimage_id\tproduct_id\timage_url\n1\t1\tsamsung.jpg\n2\t2\tiphone.jpg\n3\t3\tcoat.jpg\n*/\n\n\nCREATE TABLE products (\n\tproduct_id INTEGER, \n\tcategory_id INTEGER, \n\tname TEXT NOT NULL, \n\tdescription TEXT, \n\tprice REAL NOT NULL, \n\tstock INTEGER DEFAULT 0, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (product_id), \n\tFOREIGN KEY(category_id) REFERENCES categories (category_id)\n)\n\n/*\n3 rows from products table:\nproduct_id\tcategory_id\tname\tdescription\tprice\tstock\tcreated_at\n1\t1\tSamsung Galaxy A55\t5G smartphone with AMOLED display\t550.0\t50\t2025-07-28 17:03:54\n2\t1\tiPhone 15\tLatest Apple flagship smartphone\t999.0\t30\t2025-07-28 17:03:54\n3\t2\tWinter Coat\tStylish warm coat for winter\t120.0\t25\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE reviews (\n\treview_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\trating INTEGER, \n\tcomment TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (review_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id), \n\tCHECK (rating BETWEEN 1 AND 5)\n)\n\n/*\n3 rows from reviews table:\nreview_id\tuser_id\tproduct_id\trating\tcomment\tcreated_at\n1\t1\t1\t5\tExcellent smartphone!\t2025-07-28 17:03:54\n2\t2\t3\t4\tCoat is warm and stylish.\t2025-07-28 17:03:54\n3\t3\t4\t5\tLaptop is powerful.\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE shipping (\n\tshipping_id INTEGER, \n\torder_id INTEGER, \n\ttracking_number TEXT, \n\tshipping_address TEXT, \n\tshipping_date TIMESTAMP, \n\tdelivery_date TIMESTAMP, \n\tstatus TEXT DEFAULT 'Preparing', \n\tPRIMARY KEY (shipping_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from shipping table:\nshipping_id\torder_id\ttracking_number\tshipping_address\tshipping_date\tdelivery_date\tstatus\n1\t1\tTRK001\tKathmandu\t2025-07-01 00:00:00\t2025-07-05 00:00:00\tDelivered\n2\t2\tTRK002\tPokhara\t2025-07-02 00:00:00\t2025-07-06 00:00:00\tDelivered\n3\t3\tTRK003\tButwal\t2025-07-03 00:00:00\t2025-07-08 00:00:00\tShipped\n*/\n\n\nCREATE TABLE users (\n\tuser_id INTEGER, \n\tname TEXT, \n\temail TEXT, \n\tpassword TEXT, \n\tphone TEXT, \n\taddress TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (user_id), \n\tUNIQUE (email)\n)\n\n/*\n3 rows from users table:\nuser_id\tname\temail\tpassword\tphone\taddress\tcreated_at\n1\tArun Pandey\tarun@example.com\tpass\t9801111111\tKathmandu\t2025-07-28 17:03:54\n2\tSita Sharma\tsita@example.com\tpass\t9802222222\tPokhara\t2025-07-28 17:03:54\n3\tRam Thapa\tram@example.com\tpass\t9803333333\tButwal\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE wishlist (\n\twishlist_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\tadded_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (wishlist_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from wishlist table:\nwishlist_id\tuser_id\tproduct_id\tadded_at\n1\t1\t2\t2025-07-28 17:03:54\n2\t2\t3\t2025-07-28 17:03:54\n3\t3\t1\t2025-07-28 17:03:54\n*/"), ('AIMessage', "SELECT email FROM users WHERE name = 'Arun';"), ('ToolMessage', 'Query executed successfully but returned no results.')]
2025-07-29 13:50:17 [INFO    ] SQLAgent: Invoking LLM for result interpretation...
2025-07-29 13:50:18 [INFO    ] SQLAgent: LLM interpretation completed in 0.44 seconds.
2025-07-29 13:50:18 [DEBUG   ] SQLAgent: Interpretation result: Answer: No matching records were found for the user 'Arun'.
2025-07-29 13:50:18 [INFO    ] SQLAgent: Final answer generated. Ending workflow.
2025-07-29 13:50:18 [INFO    ] SQLAgent: Agent workflow completed in 1.70 seconds.
2025-07-29 13:50:18 [DEBUG   ] SQLAgent: Extracting final SQL query from message history.
2025-07-29 13:50:18 [DEBUG   ] SQLAgent: Extracted SQL query: SELECT email FROM users WHERE name = 'Arun';
2025-07-29 13:50:18 [INFO    ] SQLAgent: Final SQL Query: SELECT email FROM users WHERE name = 'Arun';
2025-07-29 13:50:18 [INFO    ] SQLAgent: Final Answer: Answer: No matching records were found for the user 'Arun'.
2025-07-29 13:50:18 [INFO    ] SQLAgent: ===  Query Execution Completed ===
2025-07-29 13:50:42 [INFO    ] SQLAgent: === Starting SQL Agent  ===
2025-07-29 13:50:42 [INFO    ] SQLAgent: Initializing SQLAgent...
2025-07-29 13:50:42 [DEBUG   ] SQLAgent: Input - db_path: D:\ML(ExtraClass Project)\AGENT AI\SQL-Sage-Intelligent-DB-Agent-with-Gemini-LangGraph\database\final_ecommerce.db, model_name: llama-3.1-8b-instant
2025-07-29 13:50:42 [DEBUG   ] SQLAgent: Connection string created: sqlite:///D:\ML(ExtraClass Project)\AGENT AI\SQL-Sage-Intelligent-DB-Agent-with-Gemini-LangGraph\database\final_ecommerce.db
2025-07-29 13:50:42 [INFO    ] SQLAgent: Connected to SQLite database.
2025-07-29 13:50:42 [DEBUG   ] SQLAgent: Database usable tables: ['cart', 'cart_items', 'categories', 'coupons', 'order_coupons', 'order_items', 'orders', 'payments', 'product_images', 'products', 'reviews', 'shipping', 'users', 'wishlist']
2025-07-29 13:50:43 [INFO    ] SQLAgent: Groq LLM initialized with model: llama-3.1-8b-instant
2025-07-29 13:50:43 [INFO    ] SQLAgent: Starting _setup_tools...
2025-07-29 13:50:43 [DEBUG   ] SQLAgent: Fetched 4 tools from toolkit: ['sql_db_query', 'sql_db_schema', 'sql_db_list_tables', 'sql_db_query_checker']
2025-07-29 13:50:43 [DEBUG   ] SQLAgent: Tool 'sql_db_list_tables' loaded.
2025-07-29 13:50:43 [DEBUG   ] SQLAgent: Tool 'sql_db_schema' loaded.
2025-07-29 13:50:43 [INFO    ] SQLAgent: All tools setup completed.
2025-07-29 13:50:43 [INFO    ] SQLAgent: Setting up prompts...
2025-07-29 13:50:43 [DEBUG   ] SQLAgent: Query generation prompt created.
2025-07-29 13:50:43 [DEBUG   ] SQLAgent: Interpretation prompt created.
2025-07-29 13:50:43 [INFO    ] SQLAgent: Prompts setup completed.
2025-07-29 13:50:43 [INFO    ] SQLAgent: Building LangGraph workflow...
2025-07-29 13:50:43 [DEBUG   ] SQLAgent: Node 'first_tool_call' added to graph.
2025-07-29 13:50:43 [DEBUG   ] SQLAgent: Creating tool node with fallback for tools: ['sql_db_list_tables']
2025-07-29 13:50:43 [DEBUG   ] SQLAgent: Tool node with fallback created.
2025-07-29 13:50:43 [DEBUG   ] SQLAgent: Node 'list_tables_tool' added to graph.
2025-07-29 13:50:43 [DEBUG   ] SQLAgent: Node 'model_get_schema' added to graph.
2025-07-29 13:50:43 [DEBUG   ] SQLAgent: Creating tool node with fallback for tools: ['sql_db_schema']
2025-07-29 13:50:43 [DEBUG   ] SQLAgent: Tool node with fallback created.
2025-07-29 13:50:43 [DEBUG   ] SQLAgent: Node 'get_schema_tool' added to graph.
2025-07-29 13:50:43 [DEBUG   ] SQLAgent: Node 'query_gen' added to graph.
2025-07-29 13:50:43 [DEBUG   ] SQLAgent: Node 'execute_query' added to graph.
2025-07-29 13:50:43 [DEBUG   ] SQLAgent: Node 'interpret_results' added to graph.
2025-07-29 13:50:43 [DEBUG   ] SQLAgent: Edge: START → first_tool_call
2025-07-29 13:50:43 [DEBUG   ] SQLAgent: Edge: first_tool_call → list_tables_tool
2025-07-29 13:50:43 [DEBUG   ] SQLAgent: Edge: list_tables_tool → model_get_schema
2025-07-29 13:50:43 [DEBUG   ] SQLAgent: Edge: model_get_schema → get_schema_tool
2025-07-29 13:50:43 [DEBUG   ] SQLAgent: Edge: get_schema_tool → query_gen
2025-07-29 13:50:43 [DEBUG   ] SQLAgent: Conditional edges added from 'query_gen'
2025-07-29 13:50:43 [DEBUG   ] SQLAgent: Conditional edges added from 'execute_query'
2025-07-29 13:50:43 [DEBUG   ] SQLAgent: Conditional edges added from 'interpret_results'
2025-07-29 13:50:43 [INFO    ] SQLAgent: LangGraph workflow compiled successfully.
2025-07-29 13:50:43 [INFO    ] SQLAgent: SQLAgent initialization completed.
2025-07-29 13:50:43 [INFO    ] SQLAgent: SQLAgent instance created.
2025-07-29 13:50:43 [INFO    ] SQLAgent: === Query Execution ===
2025-07-29 13:50:43 [INFO    ] SQLAgent: Received query: 'hi bro what the email of arun ?'
2025-07-29 13:50:43 [INFO    ] SQLAgent: Setting recursion limit: 15
2025-07-29 13:50:43 [INFO    ] SQLAgent: Invoking agent workflow...
2025-07-29 13:50:43 [INFO    ] SQLAgent: Executing first_tool_call: requesting list of tables.
2025-07-29 13:50:43 [DEBUG   ] SQLAgent: first_tool_call response prepared.
2025-07-29 13:50:43 [INFO    ] SQLAgent: Calling model_get_schema to fetch schema.
2025-07-29 13:50:43 [DEBUG   ] SQLAgent: Current message history: [('HumanMessage', 'hi bro what the email of arun ?'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist')]
2025-07-29 13:50:43 [INFO    ] SQLAgent: LLM schema request took 0.24 seconds.
2025-07-29 13:50:43 [DEBUG   ] SQLAgent: Schema response: content='' additional_kwargs={'tool_calls': [{'id': 'swdgghazh', 'function': {'arguments': '{"table_names":"cart,cart_items,categories,coupons,order_coupons,order_items,orders,payments,product_images,products,reviews,shipping,users,wishlist"}', 'name': 'sql_db_schema'}, 'type': 'function'}]} response_metadata={'token_usage': {'completion_tokens': 50, 'prompt_tokens': 396, 'total_tokens': 446, 'completion_time': 0.066666667, 'prompt_time': 0.023507028, 'queue_time': 0.051853662999999994, 'total_time': 0.090173695}, 'model_name': 'llama-3.1-8b-instant', 'system_fingerprint': 'fp_c523237e5d', 'service_tier': 'on_demand', 'finish_reason': 'tool_calls', 'logprobs': None} id='run--f6c86ab8-4294-4852-b4da-21fecfdf6454-0' tool_calls=[{'name': 'sql_db_schema', 'args': {'table_names': 'cart,cart_items,categories,coupons,order_coupons,order_items,orders,payments,product_images,products,reviews,shipping,users,wishlist'}, 'id': 'swdgghazh', 'type': 'tool_call'}] usage_metadata={'input_tokens': 396, 'output_tokens': 50, 'total_tokens': 446}
2025-07-29 13:50:43 [INFO    ] SQLAgent: Entering query_gen_node to generate SQL query.
2025-07-29 13:50:43 [DEBUG   ] SQLAgent: Message history: [('HumanMessage', 'hi bro what the email of arun ?'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist'), ('AIMessage', ''), ('ToolMessage', "\nCREATE TABLE cart (\n\tcart_id INTEGER, \n\tuser_id INTEGER, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (cart_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from cart table:\ncart_id\tuser_id\tcreated_at\n1\t1\t2025-07-28 17:03:54\n2\t2\t2025-07-28 17:03:54\n3\t3\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE cart_items (\n\tcart_item_id INTEGER, \n\tcart_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tPRIMARY KEY (cart_item_id), \n\tFOREIGN KEY(cart_id) REFERENCES cart (cart_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from cart_items table:\ncart_item_id\tcart_id\tproduct_id\tquantity\n1\t1\t3\t1\n2\t2\t4\t2\n3\t3\t2\t1\n*/\n\n\nCREATE TABLE categories (\n\tcategory_id INTEGER, \n\tcategory_name TEXT NOT NULL, \n\tdescription TEXT, \n\tPRIMARY KEY (category_id)\n)\n\n/*\n3 rows from categories table:\ncategory_id\tcategory_name\tdescription\n1\tMobiles\tSmartphones and accessories\n2\tClothing\tMen and Women fashion\n3\tComputers\tLaptops and peripherals\n*/\n\n\nCREATE TABLE coupons (\n\tcoupon_id INTEGER, \n\tcode TEXT, \n\tdiscount_percent INTEGER, \n\tvalid_from DATE, \n\tvalid_to DATE, \n\tPRIMARY KEY (coupon_id), \n\tUNIQUE (code), \n\tCHECK (discount_percent BETWEEN 1 AND 100)\n)\n\n/*\n3 rows from coupons table:\ncoupon_id\tcode\tdiscount_percent\tvalid_from\tvalid_to\n1\tNEPAL10\t10\t2025-07-01\t2025-12-31\n2\tFEST20\t20\t2025-07-01\t2025-12-31\n3\tWELCOME5\t5\t2025-07-01\t2025-12-31\n*/\n\n\nCREATE TABLE order_coupons (\n\tid INTEGER, \n\torder_id INTEGER, \n\tcoupon_id INTEGER, \n\tPRIMARY KEY (id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(coupon_id) REFERENCES coupons (coupon_id)\n)\n\n/*\n3 rows from order_coupons table:\nid\torder_id\tcoupon_id\n1\t1\t1\n2\t2\t2\n3\t3\t3\n*/\n\n\nCREATE TABLE order_items (\n\torder_item_id INTEGER, \n\torder_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tprice REAL NOT NULL, \n\tPRIMARY KEY (order_item_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from order_items table:\norder_item_id\torder_id\tproduct_id\tquantity\tprice\n1\t1\t1\t1\t550.0\n2\t2\t3\t1\t120.0\n3\t3\t4\t1\t1300.0\n*/\n\n\nCREATE TABLE orders (\n\torder_id INTEGER, \n\tuser_id INTEGER, \n\torder_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tstatus TEXT DEFAULT 'Pending', \n\ttotal_amount REAL, \n\tPRIMARY KEY (order_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from orders table:\norder_id\tuser_id\torder_date\tstatus\ttotal_amount\n1\t1\t2025-07-28 17:03:54\tPending\t550.0\n2\t2\t2025-07-28 17:03:54\tPending\t120.0\n3\t3\t2025-07-28 17:03:54\tPending\t1300.0\n*/\n\n\nCREATE TABLE payments (\n\tpayment_id INTEGER, \n\torder_id INTEGER, \n\tpayment_method TEXT, \n\tamount REAL, \n\tpayment_status TEXT DEFAULT 'Pending', \n\tpaid_at TIMESTAMP, \n\tPRIMARY KEY (payment_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from payments table:\npayment_id\torder_id\tpayment_method\tamount\tpayment_status\tpaid_at\n1\t1\tEsewa\t550.0\tCompleted\tNone\n2\t2\tKhalti\t120.0\tCompleted\tNone\n3\t3\tCash\t1300.0\tPending\tNone\n*/\n\n\nCREATE TABLE product_images (\n\timage_id INTEGER, \n\tproduct_id INTEGER, \n\timage_url TEXT NOT NULL, \n\tPRIMARY KEY (image_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from product_images table:\nimage_id\tproduct_id\timage_url\n1\t1\tsamsung.jpg\n2\t2\tiphone.jpg\n3\t3\tcoat.jpg\n*/\n\n\nCREATE TABLE products (\n\tproduct_id INTEGER, \n\tcategory_id INTEGER, \n\tname TEXT NOT NULL, \n\tdescription TEXT, \n\tprice REAL NOT NULL, \n\tstock INTEGER DEFAULT 0, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (product_id), \n\tFOREIGN KEY(category_id) REFERENCES categories (category_id)\n)\n\n/*\n3 rows from products table:\nproduct_id\tcategory_id\tname\tdescription\tprice\tstock\tcreated_at\n1\t1\tSamsung Galaxy A55\t5G smartphone with AMOLED display\t550.0\t50\t2025-07-28 17:03:54\n2\t1\tiPhone 15\tLatest Apple flagship smartphone\t999.0\t30\t2025-07-28 17:03:54\n3\t2\tWinter Coat\tStylish warm coat for winter\t120.0\t25\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE reviews (\n\treview_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\trating INTEGER, \n\tcomment TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (review_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id), \n\tCHECK (rating BETWEEN 1 AND 5)\n)\n\n/*\n3 rows from reviews table:\nreview_id\tuser_id\tproduct_id\trating\tcomment\tcreated_at\n1\t1\t1\t5\tExcellent smartphone!\t2025-07-28 17:03:54\n2\t2\t3\t4\tCoat is warm and stylish.\t2025-07-28 17:03:54\n3\t3\t4\t5\tLaptop is powerful.\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE shipping (\n\tshipping_id INTEGER, \n\torder_id INTEGER, \n\ttracking_number TEXT, \n\tshipping_address TEXT, \n\tshipping_date TIMESTAMP, \n\tdelivery_date TIMESTAMP, \n\tstatus TEXT DEFAULT 'Preparing', \n\tPRIMARY KEY (shipping_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from shipping table:\nshipping_id\torder_id\ttracking_number\tshipping_address\tshipping_date\tdelivery_date\tstatus\n1\t1\tTRK001\tKathmandu\t2025-07-01 00:00:00\t2025-07-05 00:00:00\tDelivered\n2\t2\tTRK002\tPokhara\t2025-07-02 00:00:00\t2025-07-06 00:00:00\tDelivered\n3\t3\tTRK003\tButwal\t2025-07-03 00:00:00\t2025-07-08 00:00:00\tShipped\n*/\n\n\nCREATE TABLE users (\n\tuser_id INTEGER, \n\tname TEXT, \n\temail TEXT, \n\tpassword TEXT, \n\tphone TEXT, \n\taddress TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (user_id), \n\tUNIQUE (email)\n)\n\n/*\n3 rows from users table:\nuser_id\tname\temail\tpassword\tphone\taddress\tcreated_at\n1\tArun Pandey\tarun@example.com\tpass\t9801111111\tKathmandu\t2025-07-28 17:03:54\n2\tSita Sharma\tsita@example.com\tpass\t9802222222\tPokhara\t2025-07-28 17:03:54\n3\tRam Thapa\tram@example.com\tpass\t9803333333\tButwal\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE wishlist (\n\twishlist_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\tadded_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (wishlist_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from wishlist table:\nwishlist_id\tuser_id\tproduct_id\tadded_at\n1\t1\t2\t2025-07-28 17:03:54\n2\t2\t3\t2025-07-28 17:03:54\n3\t3\t1\t2025-07-28 17:03:54\n*/")]
2025-07-29 13:50:43 [DEBUG   ] SQLAgent: Query attempt #1
2025-07-29 13:50:43 [INFO    ] SQLAgent: Invoking LLM for SQL generation...
2025-07-29 13:50:44 [INFO    ] SQLAgent: LLM generated SQL in 0.34 seconds.
2025-07-29 13:50:44 [DEBUG   ] SQLAgent: LLM response content: SELECT email FROM users WHERE name = 'Arun';
2025-07-29 13:50:44 [INFO    ] SQLAgent: Valid SELECT query detected. Proceeding to execute_query.
2025-07-29 13:50:44 [INFO    ] SQLAgent: Executing SQL query from last message.
2025-07-29 13:50:44 [DEBUG   ] SQLAgent: Last message type: AIMessage, content: SELECT email FROM users WHERE name = 'Arun';
2025-07-29 13:50:44 [DEBUG   ] SQLAgent: Raw SQL content: SELECT email FROM users WHERE name = 'Arun';
2025-07-29 13:50:44 [INFO    ] SQLAgent: Extracted SQL query: SELECT email FROM users WHERE name = 'Arun';
2025-07-29 13:50:44 [INFO    ] SQLAgent: Query executed in 0.00 seconds.
2025-07-29 13:50:44 [INFO    ] SQLAgent: Query returned no results.
2025-07-29 13:50:44 [INFO    ] SQLAgent: Query executed successfully. Proceeding to interpretation.
2025-07-29 13:50:44 [INFO    ] SQLAgent: Interpreting query results into natural language answer.
2025-07-29 13:50:44 [DEBUG   ] SQLAgent: Message history for interpretation: [('HumanMessage', 'hi bro what the email of arun ?'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist'), ('AIMessage', ''), ('ToolMessage', "\nCREATE TABLE cart (\n\tcart_id INTEGER, \n\tuser_id INTEGER, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (cart_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from cart table:\ncart_id\tuser_id\tcreated_at\n1\t1\t2025-07-28 17:03:54\n2\t2\t2025-07-28 17:03:54\n3\t3\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE cart_items (\n\tcart_item_id INTEGER, \n\tcart_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tPRIMARY KEY (cart_item_id), \n\tFOREIGN KEY(cart_id) REFERENCES cart (cart_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from cart_items table:\ncart_item_id\tcart_id\tproduct_id\tquantity\n1\t1\t3\t1\n2\t2\t4\t2\n3\t3\t2\t1\n*/\n\n\nCREATE TABLE categories (\n\tcategory_id INTEGER, \n\tcategory_name TEXT NOT NULL, \n\tdescription TEXT, \n\tPRIMARY KEY (category_id)\n)\n\n/*\n3 rows from categories table:\ncategory_id\tcategory_name\tdescription\n1\tMobiles\tSmartphones and accessories\n2\tClothing\tMen and Women fashion\n3\tComputers\tLaptops and peripherals\n*/\n\n\nCREATE TABLE coupons (\n\tcoupon_id INTEGER, \n\tcode TEXT, \n\tdiscount_percent INTEGER, \n\tvalid_from DATE, \n\tvalid_to DATE, \n\tPRIMARY KEY (coupon_id), \n\tUNIQUE (code), \n\tCHECK (discount_percent BETWEEN 1 AND 100)\n)\n\n/*\n3 rows from coupons table:\ncoupon_id\tcode\tdiscount_percent\tvalid_from\tvalid_to\n1\tNEPAL10\t10\t2025-07-01\t2025-12-31\n2\tFEST20\t20\t2025-07-01\t2025-12-31\n3\tWELCOME5\t5\t2025-07-01\t2025-12-31\n*/\n\n\nCREATE TABLE order_coupons (\n\tid INTEGER, \n\torder_id INTEGER, \n\tcoupon_id INTEGER, \n\tPRIMARY KEY (id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(coupon_id) REFERENCES coupons (coupon_id)\n)\n\n/*\n3 rows from order_coupons table:\nid\torder_id\tcoupon_id\n1\t1\t1\n2\t2\t2\n3\t3\t3\n*/\n\n\nCREATE TABLE order_items (\n\torder_item_id INTEGER, \n\torder_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tprice REAL NOT NULL, \n\tPRIMARY KEY (order_item_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from order_items table:\norder_item_id\torder_id\tproduct_id\tquantity\tprice\n1\t1\t1\t1\t550.0\n2\t2\t3\t1\t120.0\n3\t3\t4\t1\t1300.0\n*/\n\n\nCREATE TABLE orders (\n\torder_id INTEGER, \n\tuser_id INTEGER, \n\torder_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tstatus TEXT DEFAULT 'Pending', \n\ttotal_amount REAL, \n\tPRIMARY KEY (order_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from orders table:\norder_id\tuser_id\torder_date\tstatus\ttotal_amount\n1\t1\t2025-07-28 17:03:54\tPending\t550.0\n2\t2\t2025-07-28 17:03:54\tPending\t120.0\n3\t3\t2025-07-28 17:03:54\tPending\t1300.0\n*/\n\n\nCREATE TABLE payments (\n\tpayment_id INTEGER, \n\torder_id INTEGER, \n\tpayment_method TEXT, \n\tamount REAL, \n\tpayment_status TEXT DEFAULT 'Pending', \n\tpaid_at TIMESTAMP, \n\tPRIMARY KEY (payment_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from payments table:\npayment_id\torder_id\tpayment_method\tamount\tpayment_status\tpaid_at\n1\t1\tEsewa\t550.0\tCompleted\tNone\n2\t2\tKhalti\t120.0\tCompleted\tNone\n3\t3\tCash\t1300.0\tPending\tNone\n*/\n\n\nCREATE TABLE product_images (\n\timage_id INTEGER, \n\tproduct_id INTEGER, \n\timage_url TEXT NOT NULL, \n\tPRIMARY KEY (image_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from product_images table:\nimage_id\tproduct_id\timage_url\n1\t1\tsamsung.jpg\n2\t2\tiphone.jpg\n3\t3\tcoat.jpg\n*/\n\n\nCREATE TABLE products (\n\tproduct_id INTEGER, \n\tcategory_id INTEGER, \n\tname TEXT NOT NULL, \n\tdescription TEXT, \n\tprice REAL NOT NULL, \n\tstock INTEGER DEFAULT 0, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (product_id), \n\tFOREIGN KEY(category_id) REFERENCES categories (category_id)\n)\n\n/*\n3 rows from products table:\nproduct_id\tcategory_id\tname\tdescription\tprice\tstock\tcreated_at\n1\t1\tSamsung Galaxy A55\t5G smartphone with AMOLED display\t550.0\t50\t2025-07-28 17:03:54\n2\t1\tiPhone 15\tLatest Apple flagship smartphone\t999.0\t30\t2025-07-28 17:03:54\n3\t2\tWinter Coat\tStylish warm coat for winter\t120.0\t25\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE reviews (\n\treview_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\trating INTEGER, \n\tcomment TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (review_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id), \n\tCHECK (rating BETWEEN 1 AND 5)\n)\n\n/*\n3 rows from reviews table:\nreview_id\tuser_id\tproduct_id\trating\tcomment\tcreated_at\n1\t1\t1\t5\tExcellent smartphone!\t2025-07-28 17:03:54\n2\t2\t3\t4\tCoat is warm and stylish.\t2025-07-28 17:03:54\n3\t3\t4\t5\tLaptop is powerful.\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE shipping (\n\tshipping_id INTEGER, \n\torder_id INTEGER, \n\ttracking_number TEXT, \n\tshipping_address TEXT, \n\tshipping_date TIMESTAMP, \n\tdelivery_date TIMESTAMP, \n\tstatus TEXT DEFAULT 'Preparing', \n\tPRIMARY KEY (shipping_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from shipping table:\nshipping_id\torder_id\ttracking_number\tshipping_address\tshipping_date\tdelivery_date\tstatus\n1\t1\tTRK001\tKathmandu\t2025-07-01 00:00:00\t2025-07-05 00:00:00\tDelivered\n2\t2\tTRK002\tPokhara\t2025-07-02 00:00:00\t2025-07-06 00:00:00\tDelivered\n3\t3\tTRK003\tButwal\t2025-07-03 00:00:00\t2025-07-08 00:00:00\tShipped\n*/\n\n\nCREATE TABLE users (\n\tuser_id INTEGER, \n\tname TEXT, \n\temail TEXT, \n\tpassword TEXT, \n\tphone TEXT, \n\taddress TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (user_id), \n\tUNIQUE (email)\n)\n\n/*\n3 rows from users table:\nuser_id\tname\temail\tpassword\tphone\taddress\tcreated_at\n1\tArun Pandey\tarun@example.com\tpass\t9801111111\tKathmandu\t2025-07-28 17:03:54\n2\tSita Sharma\tsita@example.com\tpass\t9802222222\tPokhara\t2025-07-28 17:03:54\n3\tRam Thapa\tram@example.com\tpass\t9803333333\tButwal\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE wishlist (\n\twishlist_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\tadded_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (wishlist_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from wishlist table:\nwishlist_id\tuser_id\tproduct_id\tadded_at\n1\t1\t2\t2025-07-28 17:03:54\n2\t2\t3\t2025-07-28 17:03:54\n3\t3\t1\t2025-07-28 17:03:54\n*/"), ('AIMessage', "SELECT email FROM users WHERE name = 'Arun';"), ('ToolMessage', 'Query executed successfully but returned no results.')]
2025-07-29 13:50:44 [INFO    ] SQLAgent: Invoking LLM for result interpretation...
2025-07-29 13:50:51 [INFO    ] SQLAgent: LLM interpretation completed in 7.55 seconds.
2025-07-29 13:50:51 [DEBUG   ] SQLAgent: Interpretation result: Answer: No matching records were found for the user 'Arun'.
2025-07-29 13:50:51 [INFO    ] SQLAgent: Final answer generated. Ending workflow.
2025-07-29 13:50:51 [INFO    ] SQLAgent: Agent workflow completed in 8.19 seconds.
2025-07-29 13:50:51 [DEBUG   ] SQLAgent: Extracting final SQL query from message history.
2025-07-29 13:50:51 [DEBUG   ] SQLAgent: Extracted SQL query: SELECT email FROM users WHERE name = 'Arun';
2025-07-29 13:50:51 [INFO    ] SQLAgent: Final SQL Query: SELECT email FROM users WHERE name = 'Arun';
2025-07-29 13:50:51 [INFO    ] SQLAgent: Final Answer: Answer: No matching records were found for the user 'Arun'.
2025-07-29 13:50:51 [INFO    ] SQLAgent: ===  Query Execution Completed ===
2025-07-29 13:51:57 [INFO    ] SQLAgent: === Starting SQL Agent  ===
2025-07-29 13:51:57 [INFO    ] SQLAgent: Initializing SQLAgent...
2025-07-29 13:51:57 [DEBUG   ] SQLAgent: Input - db_path: D:\ML(ExtraClass Project)\AGENT AI\SQL-Sage-Intelligent-DB-Agent-with-Gemini-LangGraph\database\final_ecommerce.db, model_name: llama-3.1-8b-instant
2025-07-29 13:51:57 [DEBUG   ] SQLAgent: Connection string created: sqlite:///D:\ML(ExtraClass Project)\AGENT AI\SQL-Sage-Intelligent-DB-Agent-with-Gemini-LangGraph\database\final_ecommerce.db
2025-07-29 13:51:57 [INFO    ] SQLAgent: Connected to SQLite database.
2025-07-29 13:51:57 [DEBUG   ] SQLAgent: Database usable tables: ['cart', 'cart_items', 'categories', 'coupons', 'order_coupons', 'order_items', 'orders', 'payments', 'product_images', 'products', 'reviews', 'shipping', 'users', 'wishlist']
2025-07-29 13:51:58 [INFO    ] SQLAgent: Groq LLM initialized with model: llama-3.1-8b-instant
2025-07-29 13:51:58 [INFO    ] SQLAgent: Starting _setup_tools...
2025-07-29 13:51:58 [DEBUG   ] SQLAgent: Fetched 4 tools from toolkit: ['sql_db_query', 'sql_db_schema', 'sql_db_list_tables', 'sql_db_query_checker']
2025-07-29 13:51:58 [DEBUG   ] SQLAgent: Tool 'sql_db_list_tables' loaded.
2025-07-29 13:51:58 [DEBUG   ] SQLAgent: Tool 'sql_db_schema' loaded.
2025-07-29 13:51:58 [INFO    ] SQLAgent: All tools setup completed.
2025-07-29 13:51:58 [INFO    ] SQLAgent: Setting up prompts...
2025-07-29 13:51:58 [DEBUG   ] SQLAgent: Query generation prompt created.
2025-07-29 13:51:58 [DEBUG   ] SQLAgent: Interpretation prompt created.
2025-07-29 13:51:58 [INFO    ] SQLAgent: Prompts setup completed.
2025-07-29 13:51:58 [INFO    ] SQLAgent: Building LangGraph workflow...
2025-07-29 13:51:58 [DEBUG   ] SQLAgent: Node 'first_tool_call' added to graph.
2025-07-29 13:51:58 [DEBUG   ] SQLAgent: Creating tool node with fallback for tools: ['sql_db_list_tables']
2025-07-29 13:51:58 [DEBUG   ] SQLAgent: Tool node with fallback created.
2025-07-29 13:51:58 [DEBUG   ] SQLAgent: Node 'list_tables_tool' added to graph.
2025-07-29 13:51:58 [DEBUG   ] SQLAgent: Node 'model_get_schema' added to graph.
2025-07-29 13:51:58 [DEBUG   ] SQLAgent: Creating tool node with fallback for tools: ['sql_db_schema']
2025-07-29 13:51:58 [DEBUG   ] SQLAgent: Tool node with fallback created.
2025-07-29 13:51:58 [DEBUG   ] SQLAgent: Node 'get_schema_tool' added to graph.
2025-07-29 13:51:58 [DEBUG   ] SQLAgent: Node 'query_gen' added to graph.
2025-07-29 13:51:58 [DEBUG   ] SQLAgent: Node 'execute_query' added to graph.
2025-07-29 13:51:58 [DEBUG   ] SQLAgent: Node 'interpret_results' added to graph.
2025-07-29 13:51:58 [DEBUG   ] SQLAgent: Edge: START → first_tool_call
2025-07-29 13:51:58 [DEBUG   ] SQLAgent: Edge: first_tool_call → list_tables_tool
2025-07-29 13:51:58 [DEBUG   ] SQLAgent: Edge: list_tables_tool → model_get_schema
2025-07-29 13:51:58 [DEBUG   ] SQLAgent: Edge: model_get_schema → get_schema_tool
2025-07-29 13:51:58 [DEBUG   ] SQLAgent: Edge: get_schema_tool → query_gen
2025-07-29 13:51:58 [DEBUG   ] SQLAgent: Conditional edges added from 'query_gen'
2025-07-29 13:51:58 [DEBUG   ] SQLAgent: Conditional edges added from 'execute_query'
2025-07-29 13:51:58 [DEBUG   ] SQLAgent: Conditional edges added from 'interpret_results'
2025-07-29 13:51:58 [INFO    ] SQLAgent: LangGraph workflow compiled successfully.
2025-07-29 13:51:58 [INFO    ] SQLAgent: SQLAgent initialization completed.
2025-07-29 13:51:58 [INFO    ] SQLAgent: SQLAgent instance created.
2025-07-29 13:51:58 [INFO    ] SQLAgent: === Query Execution ===
2025-07-29 13:51:58 [INFO    ] SQLAgent: Received query: 'can you show me the details of 	Arun Pandey ?'
2025-07-29 13:51:58 [INFO    ] SQLAgent: Setting recursion limit: 15
2025-07-29 13:51:58 [INFO    ] SQLAgent: Invoking agent workflow...
2025-07-29 13:51:58 [INFO    ] SQLAgent: Executing first_tool_call: requesting list of tables.
2025-07-29 13:51:58 [DEBUG   ] SQLAgent: first_tool_call response prepared.
2025-07-29 13:51:58 [INFO    ] SQLAgent: Calling model_get_schema to fetch schema.
2025-07-29 13:51:58 [DEBUG   ] SQLAgent: Current message history: [('HumanMessage', 'can you show me the details of \tArun Pandey ?'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist')]
2025-07-29 13:52:00 [INFO    ] SQLAgent: LLM schema request took 1.96 seconds.
2025-07-29 13:52:00 [DEBUG   ] SQLAgent: Schema response: content='' additional_kwargs={'tool_calls': [{'id': 'jmj36f41n', 'function': {'arguments': '{"table_names":"cart,cart_items,categories,coupons,order_coupons,order_items,orders,payments,product_images,products,reviews,shipping,users,wishlist"}', 'name': 'sql_db_schema'}, 'type': 'function'}]} response_metadata={'token_usage': {'completion_tokens': 50, 'prompt_tokens': 400, 'total_tokens': 450, 'completion_time': 0.066666667, 'prompt_time': 0.031399799, 'queue_time': 0.056018411, 'total_time': 0.098066466}, 'model_name': 'llama-3.1-8b-instant', 'system_fingerprint': 'fp_c523237e5d', 'service_tier': 'on_demand', 'finish_reason': 'tool_calls', 'logprobs': None} id='run--97beda3e-6be5-41b8-bf75-8d05eb621f3d-0' tool_calls=[{'name': 'sql_db_schema', 'args': {'table_names': 'cart,cart_items,categories,coupons,order_coupons,order_items,orders,payments,product_images,products,reviews,shipping,users,wishlist'}, 'id': 'jmj36f41n', 'type': 'tool_call'}] usage_metadata={'input_tokens': 400, 'output_tokens': 50, 'total_tokens': 450}
2025-07-29 13:52:00 [INFO    ] SQLAgent: Entering query_gen_node to generate SQL query.
2025-07-29 13:52:00 [DEBUG   ] SQLAgent: Message history: [('HumanMessage', 'can you show me the details of \tArun Pandey ?'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist'), ('AIMessage', ''), ('ToolMessage', "\nCREATE TABLE cart (\n\tcart_id INTEGER, \n\tuser_id INTEGER, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (cart_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from cart table:\ncart_id\tuser_id\tcreated_at\n1\t1\t2025-07-28 17:03:54\n2\t2\t2025-07-28 17:03:54\n3\t3\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE cart_items (\n\tcart_item_id INTEGER, \n\tcart_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tPRIMARY KEY (cart_item_id), \n\tFOREIGN KEY(cart_id) REFERENCES cart (cart_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from cart_items table:\ncart_item_id\tcart_id\tproduct_id\tquantity\n1\t1\t3\t1\n2\t2\t4\t2\n3\t3\t2\t1\n*/\n\n\nCREATE TABLE categories (\n\tcategory_id INTEGER, \n\tcategory_name TEXT NOT NULL, \n\tdescription TEXT, \n\tPRIMARY KEY (category_id)\n)\n\n/*\n3 rows from categories table:\ncategory_id\tcategory_name\tdescription\n1\tMobiles\tSmartphones and accessories\n2\tClothing\tMen and Women fashion\n3\tComputers\tLaptops and peripherals\n*/\n\n\nCREATE TABLE coupons (\n\tcoupon_id INTEGER, \n\tcode TEXT, \n\tdiscount_percent INTEGER, \n\tvalid_from DATE, \n\tvalid_to DATE, \n\tPRIMARY KEY (coupon_id), \n\tUNIQUE (code), \n\tCHECK (discount_percent BETWEEN 1 AND 100)\n)\n\n/*\n3 rows from coupons table:\ncoupon_id\tcode\tdiscount_percent\tvalid_from\tvalid_to\n1\tNEPAL10\t10\t2025-07-01\t2025-12-31\n2\tFEST20\t20\t2025-07-01\t2025-12-31\n3\tWELCOME5\t5\t2025-07-01\t2025-12-31\n*/\n\n\nCREATE TABLE order_coupons (\n\tid INTEGER, \n\torder_id INTEGER, \n\tcoupon_id INTEGER, \n\tPRIMARY KEY (id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(coupon_id) REFERENCES coupons (coupon_id)\n)\n\n/*\n3 rows from order_coupons table:\nid\torder_id\tcoupon_id\n1\t1\t1\n2\t2\t2\n3\t3\t3\n*/\n\n\nCREATE TABLE order_items (\n\torder_item_id INTEGER, \n\torder_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tprice REAL NOT NULL, \n\tPRIMARY KEY (order_item_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from order_items table:\norder_item_id\torder_id\tproduct_id\tquantity\tprice\n1\t1\t1\t1\t550.0\n2\t2\t3\t1\t120.0\n3\t3\t4\t1\t1300.0\n*/\n\n\nCREATE TABLE orders (\n\torder_id INTEGER, \n\tuser_id INTEGER, \n\torder_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tstatus TEXT DEFAULT 'Pending', \n\ttotal_amount REAL, \n\tPRIMARY KEY (order_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from orders table:\norder_id\tuser_id\torder_date\tstatus\ttotal_amount\n1\t1\t2025-07-28 17:03:54\tPending\t550.0\n2\t2\t2025-07-28 17:03:54\tPending\t120.0\n3\t3\t2025-07-28 17:03:54\tPending\t1300.0\n*/\n\n\nCREATE TABLE payments (\n\tpayment_id INTEGER, \n\torder_id INTEGER, \n\tpayment_method TEXT, \n\tamount REAL, \n\tpayment_status TEXT DEFAULT 'Pending', \n\tpaid_at TIMESTAMP, \n\tPRIMARY KEY (payment_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from payments table:\npayment_id\torder_id\tpayment_method\tamount\tpayment_status\tpaid_at\n1\t1\tEsewa\t550.0\tCompleted\tNone\n2\t2\tKhalti\t120.0\tCompleted\tNone\n3\t3\tCash\t1300.0\tPending\tNone\n*/\n\n\nCREATE TABLE product_images (\n\timage_id INTEGER, \n\tproduct_id INTEGER, \n\timage_url TEXT NOT NULL, \n\tPRIMARY KEY (image_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from product_images table:\nimage_id\tproduct_id\timage_url\n1\t1\tsamsung.jpg\n2\t2\tiphone.jpg\n3\t3\tcoat.jpg\n*/\n\n\nCREATE TABLE products (\n\tproduct_id INTEGER, \n\tcategory_id INTEGER, \n\tname TEXT NOT NULL, \n\tdescription TEXT, \n\tprice REAL NOT NULL, \n\tstock INTEGER DEFAULT 0, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (product_id), \n\tFOREIGN KEY(category_id) REFERENCES categories (category_id)\n)\n\n/*\n3 rows from products table:\nproduct_id\tcategory_id\tname\tdescription\tprice\tstock\tcreated_at\n1\t1\tSamsung Galaxy A55\t5G smartphone with AMOLED display\t550.0\t50\t2025-07-28 17:03:54\n2\t1\tiPhone 15\tLatest Apple flagship smartphone\t999.0\t30\t2025-07-28 17:03:54\n3\t2\tWinter Coat\tStylish warm coat for winter\t120.0\t25\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE reviews (\n\treview_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\trating INTEGER, \n\tcomment TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (review_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id), \n\tCHECK (rating BETWEEN 1 AND 5)\n)\n\n/*\n3 rows from reviews table:\nreview_id\tuser_id\tproduct_id\trating\tcomment\tcreated_at\n1\t1\t1\t5\tExcellent smartphone!\t2025-07-28 17:03:54\n2\t2\t3\t4\tCoat is warm and stylish.\t2025-07-28 17:03:54\n3\t3\t4\t5\tLaptop is powerful.\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE shipping (\n\tshipping_id INTEGER, \n\torder_id INTEGER, \n\ttracking_number TEXT, \n\tshipping_address TEXT, \n\tshipping_date TIMESTAMP, \n\tdelivery_date TIMESTAMP, \n\tstatus TEXT DEFAULT 'Preparing', \n\tPRIMARY KEY (shipping_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from shipping table:\nshipping_id\torder_id\ttracking_number\tshipping_address\tshipping_date\tdelivery_date\tstatus\n1\t1\tTRK001\tKathmandu\t2025-07-01 00:00:00\t2025-07-05 00:00:00\tDelivered\n2\t2\tTRK002\tPokhara\t2025-07-02 00:00:00\t2025-07-06 00:00:00\tDelivered\n3\t3\tTRK003\tButwal\t2025-07-03 00:00:00\t2025-07-08 00:00:00\tShipped\n*/\n\n\nCREATE TABLE users (\n\tuser_id INTEGER, \n\tname TEXT, \n\temail TEXT, \n\tpassword TEXT, \n\tphone TEXT, \n\taddress TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (user_id), \n\tUNIQUE (email)\n)\n\n/*\n3 rows from users table:\nuser_id\tname\temail\tpassword\tphone\taddress\tcreated_at\n1\tArun Pandey\tarun@example.com\tpass\t9801111111\tKathmandu\t2025-07-28 17:03:54\n2\tSita Sharma\tsita@example.com\tpass\t9802222222\tPokhara\t2025-07-28 17:03:54\n3\tRam Thapa\tram@example.com\tpass\t9803333333\tButwal\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE wishlist (\n\twishlist_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\tadded_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (wishlist_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from wishlist table:\nwishlist_id\tuser_id\tproduct_id\tadded_at\n1\t1\t2\t2025-07-28 17:03:54\n2\t2\t3\t2025-07-28 17:03:54\n3\t3\t1\t2025-07-28 17:03:54\n*/")]
2025-07-29 13:52:00 [DEBUG   ] SQLAgent: Query attempt #1
2025-07-29 13:52:00 [INFO    ] SQLAgent: Invoking LLM for SQL generation...
2025-07-29 13:52:00 [INFO    ] SQLAgent: LLM generated SQL in 0.35 seconds.
2025-07-29 13:52:00 [DEBUG   ] SQLAgent: LLM response content: SELECT * FROM users WHERE name = 'Arun Pandey' LIMIT 1;
2025-07-29 13:52:00 [INFO    ] SQLAgent: Valid SELECT query detected. Proceeding to execute_query.
2025-07-29 13:52:00 [INFO    ] SQLAgent: Executing SQL query from last message.
2025-07-29 13:52:00 [DEBUG   ] SQLAgent: Last message type: AIMessage, content: SELECT * FROM users WHERE name = 'Arun Pandey' LIMIT 1;
2025-07-29 13:52:00 [DEBUG   ] SQLAgent: Raw SQL content: SELECT * FROM users WHERE name = 'Arun Pandey' LIMIT 1;
2025-07-29 13:52:00 [INFO    ] SQLAgent: Extracted SQL query: SELECT * FROM users WHERE name = 'Arun Pandey' LIMIT 1;
2025-07-29 13:52:00 [INFO    ] SQLAgent: Query executed in 0.00 seconds.
2025-07-29 13:52:00 [INFO    ] SQLAgent: Query result: [(1, 'Arun Pandey', 'arun@example.com', 'pass', '9801111111', 'Kathmandu', '2025-07-28 17:03:54')]
2025-07-29 13:52:00 [INFO    ] SQLAgent: Query executed successfully. Proceeding to interpretation.
2025-07-29 13:52:00 [INFO    ] SQLAgent: Interpreting query results into natural language answer.
2025-07-29 13:52:00 [DEBUG   ] SQLAgent: Message history for interpretation: [('HumanMessage', 'can you show me the details of \tArun Pandey ?'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist'), ('AIMessage', ''), ('ToolMessage', "\nCREATE TABLE cart (\n\tcart_id INTEGER, \n\tuser_id INTEGER, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (cart_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from cart table:\ncart_id\tuser_id\tcreated_at\n1\t1\t2025-07-28 17:03:54\n2\t2\t2025-07-28 17:03:54\n3\t3\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE cart_items (\n\tcart_item_id INTEGER, \n\tcart_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tPRIMARY KEY (cart_item_id), \n\tFOREIGN KEY(cart_id) REFERENCES cart (cart_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from cart_items table:\ncart_item_id\tcart_id\tproduct_id\tquantity\n1\t1\t3\t1\n2\t2\t4\t2\n3\t3\t2\t1\n*/\n\n\nCREATE TABLE categories (\n\tcategory_id INTEGER, \n\tcategory_name TEXT NOT NULL, \n\tdescription TEXT, \n\tPRIMARY KEY (category_id)\n)\n\n/*\n3 rows from categories table:\ncategory_id\tcategory_name\tdescription\n1\tMobiles\tSmartphones and accessories\n2\tClothing\tMen and Women fashion\n3\tComputers\tLaptops and peripherals\n*/\n\n\nCREATE TABLE coupons (\n\tcoupon_id INTEGER, \n\tcode TEXT, \n\tdiscount_percent INTEGER, \n\tvalid_from DATE, \n\tvalid_to DATE, \n\tPRIMARY KEY (coupon_id), \n\tUNIQUE (code), \n\tCHECK (discount_percent BETWEEN 1 AND 100)\n)\n\n/*\n3 rows from coupons table:\ncoupon_id\tcode\tdiscount_percent\tvalid_from\tvalid_to\n1\tNEPAL10\t10\t2025-07-01\t2025-12-31\n2\tFEST20\t20\t2025-07-01\t2025-12-31\n3\tWELCOME5\t5\t2025-07-01\t2025-12-31\n*/\n\n\nCREATE TABLE order_coupons (\n\tid INTEGER, \n\torder_id INTEGER, \n\tcoupon_id INTEGER, \n\tPRIMARY KEY (id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(coupon_id) REFERENCES coupons (coupon_id)\n)\n\n/*\n3 rows from order_coupons table:\nid\torder_id\tcoupon_id\n1\t1\t1\n2\t2\t2\n3\t3\t3\n*/\n\n\nCREATE TABLE order_items (\n\torder_item_id INTEGER, \n\torder_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tprice REAL NOT NULL, \n\tPRIMARY KEY (order_item_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from order_items table:\norder_item_id\torder_id\tproduct_id\tquantity\tprice\n1\t1\t1\t1\t550.0\n2\t2\t3\t1\t120.0\n3\t3\t4\t1\t1300.0\n*/\n\n\nCREATE TABLE orders (\n\torder_id INTEGER, \n\tuser_id INTEGER, \n\torder_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tstatus TEXT DEFAULT 'Pending', \n\ttotal_amount REAL, \n\tPRIMARY KEY (order_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from orders table:\norder_id\tuser_id\torder_date\tstatus\ttotal_amount\n1\t1\t2025-07-28 17:03:54\tPending\t550.0\n2\t2\t2025-07-28 17:03:54\tPending\t120.0\n3\t3\t2025-07-28 17:03:54\tPending\t1300.0\n*/\n\n\nCREATE TABLE payments (\n\tpayment_id INTEGER, \n\torder_id INTEGER, \n\tpayment_method TEXT, \n\tamount REAL, \n\tpayment_status TEXT DEFAULT 'Pending', \n\tpaid_at TIMESTAMP, \n\tPRIMARY KEY (payment_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from payments table:\npayment_id\torder_id\tpayment_method\tamount\tpayment_status\tpaid_at\n1\t1\tEsewa\t550.0\tCompleted\tNone\n2\t2\tKhalti\t120.0\tCompleted\tNone\n3\t3\tCash\t1300.0\tPending\tNone\n*/\n\n\nCREATE TABLE product_images (\n\timage_id INTEGER, \n\tproduct_id INTEGER, \n\timage_url TEXT NOT NULL, \n\tPRIMARY KEY (image_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from product_images table:\nimage_id\tproduct_id\timage_url\n1\t1\tsamsung.jpg\n2\t2\tiphone.jpg\n3\t3\tcoat.jpg\n*/\n\n\nCREATE TABLE products (\n\tproduct_id INTEGER, \n\tcategory_id INTEGER, \n\tname TEXT NOT NULL, \n\tdescription TEXT, \n\tprice REAL NOT NULL, \n\tstock INTEGER DEFAULT 0, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (product_id), \n\tFOREIGN KEY(category_id) REFERENCES categories (category_id)\n)\n\n/*\n3 rows from products table:\nproduct_id\tcategory_id\tname\tdescription\tprice\tstock\tcreated_at\n1\t1\tSamsung Galaxy A55\t5G smartphone with AMOLED display\t550.0\t50\t2025-07-28 17:03:54\n2\t1\tiPhone 15\tLatest Apple flagship smartphone\t999.0\t30\t2025-07-28 17:03:54\n3\t2\tWinter Coat\tStylish warm coat for winter\t120.0\t25\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE reviews (\n\treview_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\trating INTEGER, \n\tcomment TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (review_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id), \n\tCHECK (rating BETWEEN 1 AND 5)\n)\n\n/*\n3 rows from reviews table:\nreview_id\tuser_id\tproduct_id\trating\tcomment\tcreated_at\n1\t1\t1\t5\tExcellent smartphone!\t2025-07-28 17:03:54\n2\t2\t3\t4\tCoat is warm and stylish.\t2025-07-28 17:03:54\n3\t3\t4\t5\tLaptop is powerful.\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE shipping (\n\tshipping_id INTEGER, \n\torder_id INTEGER, \n\ttracking_number TEXT, \n\tshipping_address TEXT, \n\tshipping_date TIMESTAMP, \n\tdelivery_date TIMESTAMP, \n\tstatus TEXT DEFAULT 'Preparing', \n\tPRIMARY KEY (shipping_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from shipping table:\nshipping_id\torder_id\ttracking_number\tshipping_address\tshipping_date\tdelivery_date\tstatus\n1\t1\tTRK001\tKathmandu\t2025-07-01 00:00:00\t2025-07-05 00:00:00\tDelivered\n2\t2\tTRK002\tPokhara\t2025-07-02 00:00:00\t2025-07-06 00:00:00\tDelivered\n3\t3\tTRK003\tButwal\t2025-07-03 00:00:00\t2025-07-08 00:00:00\tShipped\n*/\n\n\nCREATE TABLE users (\n\tuser_id INTEGER, \n\tname TEXT, \n\temail TEXT, \n\tpassword TEXT, \n\tphone TEXT, \n\taddress TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (user_id), \n\tUNIQUE (email)\n)\n\n/*\n3 rows from users table:\nuser_id\tname\temail\tpassword\tphone\taddress\tcreated_at\n1\tArun Pandey\tarun@example.com\tpass\t9801111111\tKathmandu\t2025-07-28 17:03:54\n2\tSita Sharma\tsita@example.com\tpass\t9802222222\tPokhara\t2025-07-28 17:03:54\n3\tRam Thapa\tram@example.com\tpass\t9803333333\tButwal\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE wishlist (\n\twishlist_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\tadded_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (wishlist_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from wishlist table:\nwishlist_id\tuser_id\tproduct_id\tadded_at\n1\t1\t2\t2025-07-28 17:03:54\n2\t2\t3\t2025-07-28 17:03:54\n3\t3\t1\t2025-07-28 17:03:54\n*/"), ('AIMessage', "SELECT * FROM users WHERE name = 'Arun Pandey' LIMIT 1;"), ('ToolMessage', "[(1, 'Arun Pandey', 'arun@example.com', 'pass', '9801111111', 'Kathmandu', '2025-07-28 17:03:54')]")]
2025-07-29 13:52:00 [INFO    ] SQLAgent: Invoking LLM for result interpretation...
2025-07-29 13:52:01 [INFO    ] SQLAgent: LLM interpretation completed in 0.56 seconds.
2025-07-29 13:52:01 [DEBUG   ] SQLAgent: Interpretation result: Answer: The details of Arun Pandey are as follows:
- User ID: 1
- Name: Arun Pandey
- Email: arun@example.com
- Password: pass
- Phone: 9801111111
- Address: Kathmandu
- Created at: 2025-07-28 17:03:54
2025-07-29 13:52:01 [INFO    ] SQLAgent: Final answer generated. Ending workflow.
2025-07-29 13:52:01 [INFO    ] SQLAgent: Agent workflow completed in 2.92 seconds.
2025-07-29 13:52:01 [DEBUG   ] SQLAgent: Extracting final SQL query from message history.
2025-07-29 13:52:01 [DEBUG   ] SQLAgent: Extracted SQL query: SELECT * FROM users WHERE name = 'Arun Pandey' LIMIT 1;
2025-07-29 13:52:01 [INFO    ] SQLAgent: Final SQL Query: SELECT * FROM users WHERE name = 'Arun Pandey' LIMIT 1;
2025-07-29 13:52:01 [INFO    ] SQLAgent: Final Answer: Answer: The details of Arun Pandey are as follows:
- User ID: 1
- Name: Arun Pandey
- Email: arun@example.com
- Password: pass
- Phone: 9801111111
- Address: Kathmandu
- Created at: 2025-07-28 17:03:54
2025-07-29 13:52:01 [INFO    ] SQLAgent: ===  Query Execution Completed ===
2025-07-29 13:52:51 [INFO    ] SQLAgent: === Starting SQL Agent  ===
2025-07-29 13:52:51 [INFO    ] SQLAgent: Initializing SQLAgent...
2025-07-29 13:52:51 [DEBUG   ] SQLAgent: Input - db_path: D:\ML(ExtraClass Project)\AGENT AI\SQL-Sage-Intelligent-DB-Agent-with-Gemini-LangGraph\database\final_ecommerce.db, model_name: llama-3.1-8b-instant
2025-07-29 13:52:51 [DEBUG   ] SQLAgent: Connection string created: sqlite:///D:\ML(ExtraClass Project)\AGENT AI\SQL-Sage-Intelligent-DB-Agent-with-Gemini-LangGraph\database\final_ecommerce.db
2025-07-29 13:52:51 [INFO    ] SQLAgent: Connected to SQLite database.
2025-07-29 13:52:51 [DEBUG   ] SQLAgent: Database usable tables: ['cart', 'cart_items', 'categories', 'coupons', 'order_coupons', 'order_items', 'orders', 'payments', 'product_images', 'products', 'reviews', 'shipping', 'users', 'wishlist']
2025-07-29 13:52:52 [INFO    ] SQLAgent: Groq LLM initialized with model: llama-3.1-8b-instant
2025-07-29 13:52:52 [INFO    ] SQLAgent: Starting _setup_tools...
2025-07-29 13:52:52 [DEBUG   ] SQLAgent: Fetched 4 tools from toolkit: ['sql_db_query', 'sql_db_schema', 'sql_db_list_tables', 'sql_db_query_checker']
2025-07-29 13:52:52 [DEBUG   ] SQLAgent: Tool 'sql_db_list_tables' loaded.
2025-07-29 13:52:52 [DEBUG   ] SQLAgent: Tool 'sql_db_schema' loaded.
2025-07-29 13:52:52 [INFO    ] SQLAgent: All tools setup completed.
2025-07-29 13:52:52 [INFO    ] SQLAgent: Setting up prompts...
2025-07-29 13:52:52 [DEBUG   ] SQLAgent: Query generation prompt created.
2025-07-29 13:52:52 [DEBUG   ] SQLAgent: Interpretation prompt created.
2025-07-29 13:52:52 [INFO    ] SQLAgent: Prompts setup completed.
2025-07-29 13:52:52 [INFO    ] SQLAgent: Building LangGraph workflow...
2025-07-29 13:52:52 [DEBUG   ] SQLAgent: Node 'first_tool_call' added to graph.
2025-07-29 13:52:52 [DEBUG   ] SQLAgent: Creating tool node with fallback for tools: ['sql_db_list_tables']
2025-07-29 13:52:52 [DEBUG   ] SQLAgent: Tool node with fallback created.
2025-07-29 13:52:52 [DEBUG   ] SQLAgent: Node 'list_tables_tool' added to graph.
2025-07-29 13:52:52 [DEBUG   ] SQLAgent: Node 'model_get_schema' added to graph.
2025-07-29 13:52:52 [DEBUG   ] SQLAgent: Creating tool node with fallback for tools: ['sql_db_schema']
2025-07-29 13:52:52 [DEBUG   ] SQLAgent: Tool node with fallback created.
2025-07-29 13:52:52 [DEBUG   ] SQLAgent: Node 'get_schema_tool' added to graph.
2025-07-29 13:52:52 [DEBUG   ] SQLAgent: Node 'query_gen' added to graph.
2025-07-29 13:52:52 [DEBUG   ] SQLAgent: Node 'execute_query' added to graph.
2025-07-29 13:52:52 [DEBUG   ] SQLAgent: Node 'interpret_results' added to graph.
2025-07-29 13:52:52 [DEBUG   ] SQLAgent: Edge: START → first_tool_call
2025-07-29 13:52:52 [DEBUG   ] SQLAgent: Edge: first_tool_call → list_tables_tool
2025-07-29 13:52:52 [DEBUG   ] SQLAgent: Edge: list_tables_tool → model_get_schema
2025-07-29 13:52:52 [DEBUG   ] SQLAgent: Edge: model_get_schema → get_schema_tool
2025-07-29 13:52:52 [DEBUG   ] SQLAgent: Edge: get_schema_tool → query_gen
2025-07-29 13:52:52 [DEBUG   ] SQLAgent: Conditional edges added from 'query_gen'
2025-07-29 13:52:52 [DEBUG   ] SQLAgent: Conditional edges added from 'execute_query'
2025-07-29 13:52:52 [DEBUG   ] SQLAgent: Conditional edges added from 'interpret_results'
2025-07-29 13:52:52 [INFO    ] SQLAgent: LangGraph workflow compiled successfully.
2025-07-29 13:52:52 [INFO    ] SQLAgent: SQLAgent initialization completed.
2025-07-29 13:52:52 [INFO    ] SQLAgent: SQLAgent instance created.
2025-07-29 13:52:52 [INFO    ] SQLAgent: === Query Execution ===
2025-07-29 13:52:52 [INFO    ] SQLAgent: Received query: 'can you show me the details of 	Arun Pandey ?'
2025-07-29 13:52:52 [INFO    ] SQLAgent: Setting recursion limit: 15
2025-07-29 13:52:52 [INFO    ] SQLAgent: Invoking agent workflow...
2025-07-29 13:52:52 [INFO    ] SQLAgent: Executing first_tool_call: requesting list of tables.
2025-07-29 13:52:52 [DEBUG   ] SQLAgent: first_tool_call response prepared.
2025-07-29 13:52:52 [INFO    ] SQLAgent: Calling model_get_schema to fetch schema.
2025-07-29 13:52:52 [DEBUG   ] SQLAgent: Current message history: [('HumanMessage', 'can you show me the details of \tArun Pandey ?'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist')]
2025-07-29 13:52:54 [INFO    ] SQLAgent: LLM schema request took 1.99 seconds.
2025-07-29 13:52:54 [DEBUG   ] SQLAgent: Schema response: content='' additional_kwargs={'tool_calls': [{'id': '31vz5sv6x', 'function': {'arguments': '{"table_names":"cart,cart_items,categories,coupons,order_coupons,order_items,orders,payments,product_images,products,reviews,shipping,users,wishlist"}', 'name': 'sql_db_schema'}, 'type': 'function'}]} response_metadata={'token_usage': {'completion_tokens': 50, 'prompt_tokens': 400, 'total_tokens': 450, 'completion_time': 0.071468791, 'prompt_time': 0.14186177, 'queue_time': 0.051584890999999994, 'total_time': 0.213330561}, 'model_name': 'llama-3.1-8b-instant', 'system_fingerprint': 'fp_c523237e5d', 'service_tier': 'on_demand', 'finish_reason': 'tool_calls', 'logprobs': None} id='run--0ff16f7a-1675-49b9-a93e-f04e83c0cdda-0' tool_calls=[{'name': 'sql_db_schema', 'args': {'table_names': 'cart,cart_items,categories,coupons,order_coupons,order_items,orders,payments,product_images,products,reviews,shipping,users,wishlist'}, 'id': '31vz5sv6x', 'type': 'tool_call'}] usage_metadata={'input_tokens': 400, 'output_tokens': 50, 'total_tokens': 450}
2025-07-29 13:52:54 [INFO    ] SQLAgent: Entering query_gen_node to generate SQL query.
2025-07-29 13:52:54 [DEBUG   ] SQLAgent: Message history: [('HumanMessage', 'can you show me the details of \tArun Pandey ?'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist'), ('AIMessage', ''), ('ToolMessage', "\nCREATE TABLE cart (\n\tcart_id INTEGER, \n\tuser_id INTEGER, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (cart_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from cart table:\ncart_id\tuser_id\tcreated_at\n1\t1\t2025-07-28 17:03:54\n2\t2\t2025-07-28 17:03:54\n3\t3\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE cart_items (\n\tcart_item_id INTEGER, \n\tcart_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tPRIMARY KEY (cart_item_id), \n\tFOREIGN KEY(cart_id) REFERENCES cart (cart_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from cart_items table:\ncart_item_id\tcart_id\tproduct_id\tquantity\n1\t1\t3\t1\n2\t2\t4\t2\n3\t3\t2\t1\n*/\n\n\nCREATE TABLE categories (\n\tcategory_id INTEGER, \n\tcategory_name TEXT NOT NULL, \n\tdescription TEXT, \n\tPRIMARY KEY (category_id)\n)\n\n/*\n3 rows from categories table:\ncategory_id\tcategory_name\tdescription\n1\tMobiles\tSmartphones and accessories\n2\tClothing\tMen and Women fashion\n3\tComputers\tLaptops and peripherals\n*/\n\n\nCREATE TABLE coupons (\n\tcoupon_id INTEGER, \n\tcode TEXT, \n\tdiscount_percent INTEGER, \n\tvalid_from DATE, \n\tvalid_to DATE, \n\tPRIMARY KEY (coupon_id), \n\tUNIQUE (code), \n\tCHECK (discount_percent BETWEEN 1 AND 100)\n)\n\n/*\n3 rows from coupons table:\ncoupon_id\tcode\tdiscount_percent\tvalid_from\tvalid_to\n1\tNEPAL10\t10\t2025-07-01\t2025-12-31\n2\tFEST20\t20\t2025-07-01\t2025-12-31\n3\tWELCOME5\t5\t2025-07-01\t2025-12-31\n*/\n\n\nCREATE TABLE order_coupons (\n\tid INTEGER, \n\torder_id INTEGER, \n\tcoupon_id INTEGER, \n\tPRIMARY KEY (id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(coupon_id) REFERENCES coupons (coupon_id)\n)\n\n/*\n3 rows from order_coupons table:\nid\torder_id\tcoupon_id\n1\t1\t1\n2\t2\t2\n3\t3\t3\n*/\n\n\nCREATE TABLE order_items (\n\torder_item_id INTEGER, \n\torder_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tprice REAL NOT NULL, \n\tPRIMARY KEY (order_item_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from order_items table:\norder_item_id\torder_id\tproduct_id\tquantity\tprice\n1\t1\t1\t1\t550.0\n2\t2\t3\t1\t120.0\n3\t3\t4\t1\t1300.0\n*/\n\n\nCREATE TABLE orders (\n\torder_id INTEGER, \n\tuser_id INTEGER, \n\torder_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tstatus TEXT DEFAULT 'Pending', \n\ttotal_amount REAL, \n\tPRIMARY KEY (order_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from orders table:\norder_id\tuser_id\torder_date\tstatus\ttotal_amount\n1\t1\t2025-07-28 17:03:54\tPending\t550.0\n2\t2\t2025-07-28 17:03:54\tPending\t120.0\n3\t3\t2025-07-28 17:03:54\tPending\t1300.0\n*/\n\n\nCREATE TABLE payments (\n\tpayment_id INTEGER, \n\torder_id INTEGER, \n\tpayment_method TEXT, \n\tamount REAL, \n\tpayment_status TEXT DEFAULT 'Pending', \n\tpaid_at TIMESTAMP, \n\tPRIMARY KEY (payment_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from payments table:\npayment_id\torder_id\tpayment_method\tamount\tpayment_status\tpaid_at\n1\t1\tEsewa\t550.0\tCompleted\tNone\n2\t2\tKhalti\t120.0\tCompleted\tNone\n3\t3\tCash\t1300.0\tPending\tNone\n*/\n\n\nCREATE TABLE product_images (\n\timage_id INTEGER, \n\tproduct_id INTEGER, \n\timage_url TEXT NOT NULL, \n\tPRIMARY KEY (image_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from product_images table:\nimage_id\tproduct_id\timage_url\n1\t1\tsamsung.jpg\n2\t2\tiphone.jpg\n3\t3\tcoat.jpg\n*/\n\n\nCREATE TABLE products (\n\tproduct_id INTEGER, \n\tcategory_id INTEGER, \n\tname TEXT NOT NULL, \n\tdescription TEXT, \n\tprice REAL NOT NULL, \n\tstock INTEGER DEFAULT 0, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (product_id), \n\tFOREIGN KEY(category_id) REFERENCES categories (category_id)\n)\n\n/*\n3 rows from products table:\nproduct_id\tcategory_id\tname\tdescription\tprice\tstock\tcreated_at\n1\t1\tSamsung Galaxy A55\t5G smartphone with AMOLED display\t550.0\t50\t2025-07-28 17:03:54\n2\t1\tiPhone 15\tLatest Apple flagship smartphone\t999.0\t30\t2025-07-28 17:03:54\n3\t2\tWinter Coat\tStylish warm coat for winter\t120.0\t25\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE reviews (\n\treview_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\trating INTEGER, \n\tcomment TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (review_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id), \n\tCHECK (rating BETWEEN 1 AND 5)\n)\n\n/*\n3 rows from reviews table:\nreview_id\tuser_id\tproduct_id\trating\tcomment\tcreated_at\n1\t1\t1\t5\tExcellent smartphone!\t2025-07-28 17:03:54\n2\t2\t3\t4\tCoat is warm and stylish.\t2025-07-28 17:03:54\n3\t3\t4\t5\tLaptop is powerful.\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE shipping (\n\tshipping_id INTEGER, \n\torder_id INTEGER, \n\ttracking_number TEXT, \n\tshipping_address TEXT, \n\tshipping_date TIMESTAMP, \n\tdelivery_date TIMESTAMP, \n\tstatus TEXT DEFAULT 'Preparing', \n\tPRIMARY KEY (shipping_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from shipping table:\nshipping_id\torder_id\ttracking_number\tshipping_address\tshipping_date\tdelivery_date\tstatus\n1\t1\tTRK001\tKathmandu\t2025-07-01 00:00:00\t2025-07-05 00:00:00\tDelivered\n2\t2\tTRK002\tPokhara\t2025-07-02 00:00:00\t2025-07-06 00:00:00\tDelivered\n3\t3\tTRK003\tButwal\t2025-07-03 00:00:00\t2025-07-08 00:00:00\tShipped\n*/\n\n\nCREATE TABLE users (\n\tuser_id INTEGER, \n\tname TEXT, \n\temail TEXT, \n\tpassword TEXT, \n\tphone TEXT, \n\taddress TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (user_id), \n\tUNIQUE (email)\n)\n\n/*\n3 rows from users table:\nuser_id\tname\temail\tpassword\tphone\taddress\tcreated_at\n1\tArun Pandey\tarun@example.com\tpass\t9801111111\tKathmandu\t2025-07-28 17:03:54\n2\tSita Sharma\tsita@example.com\tpass\t9802222222\tPokhara\t2025-07-28 17:03:54\n3\tRam Thapa\tram@example.com\tpass\t9803333333\tButwal\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE wishlist (\n\twishlist_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\tadded_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (wishlist_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from wishlist table:\nwishlist_id\tuser_id\tproduct_id\tadded_at\n1\t1\t2\t2025-07-28 17:03:54\n2\t2\t3\t2025-07-28 17:03:54\n3\t3\t1\t2025-07-28 17:03:54\n*/")]
2025-07-29 13:52:54 [DEBUG   ] SQLAgent: Query attempt #1
2025-07-29 13:52:54 [INFO    ] SQLAgent: Invoking LLM for SQL generation...
2025-07-29 13:52:55 [INFO    ] SQLAgent: LLM generated SQL in 0.62 seconds.
2025-07-29 13:52:55 [DEBUG   ] SQLAgent: LLM response content: SELECT * FROM users WHERE name = 'Arun Pandey' LIMIT 1;
2025-07-29 13:52:55 [INFO    ] SQLAgent: Valid SELECT query detected. Proceeding to execute_query.
2025-07-29 13:52:55 [INFO    ] SQLAgent: Executing SQL query from last message.
2025-07-29 13:52:55 [DEBUG   ] SQLAgent: Last message type: AIMessage, content: SELECT * FROM users WHERE name = 'Arun Pandey' LIMIT 1;
2025-07-29 13:52:55 [DEBUG   ] SQLAgent: Raw SQL content: SELECT * FROM users WHERE name = 'Arun Pandey' LIMIT 1;
2025-07-29 13:52:55 [INFO    ] SQLAgent: Extracted SQL query: SELECT * FROM users WHERE name = 'Arun Pandey' LIMIT 1;
2025-07-29 13:52:55 [INFO    ] SQLAgent: Query executed in 0.00 seconds.
2025-07-29 13:52:55 [INFO    ] SQLAgent: Query result: [(1, 'Arun Pandey', 'arun@example.com', 'pass', '9801111111', 'Kathmandu', '2025-07-28 17:03:54')]
2025-07-29 13:52:55 [INFO    ] SQLAgent: Query executed successfully. Proceeding to interpretation.
2025-07-29 13:52:55 [INFO    ] SQLAgent: Interpreting query results into natural language answer.
2025-07-29 13:52:55 [DEBUG   ] SQLAgent: Message history for interpretation: [('HumanMessage', 'can you show me the details of \tArun Pandey ?'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist'), ('AIMessage', ''), ('ToolMessage', "\nCREATE TABLE cart (\n\tcart_id INTEGER, \n\tuser_id INTEGER, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (cart_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from cart table:\ncart_id\tuser_id\tcreated_at\n1\t1\t2025-07-28 17:03:54\n2\t2\t2025-07-28 17:03:54\n3\t3\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE cart_items (\n\tcart_item_id INTEGER, \n\tcart_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tPRIMARY KEY (cart_item_id), \n\tFOREIGN KEY(cart_id) REFERENCES cart (cart_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from cart_items table:\ncart_item_id\tcart_id\tproduct_id\tquantity\n1\t1\t3\t1\n2\t2\t4\t2\n3\t3\t2\t1\n*/\n\n\nCREATE TABLE categories (\n\tcategory_id INTEGER, \n\tcategory_name TEXT NOT NULL, \n\tdescription TEXT, \n\tPRIMARY KEY (category_id)\n)\n\n/*\n3 rows from categories table:\ncategory_id\tcategory_name\tdescription\n1\tMobiles\tSmartphones and accessories\n2\tClothing\tMen and Women fashion\n3\tComputers\tLaptops and peripherals\n*/\n\n\nCREATE TABLE coupons (\n\tcoupon_id INTEGER, \n\tcode TEXT, \n\tdiscount_percent INTEGER, \n\tvalid_from DATE, \n\tvalid_to DATE, \n\tPRIMARY KEY (coupon_id), \n\tUNIQUE (code), \n\tCHECK (discount_percent BETWEEN 1 AND 100)\n)\n\n/*\n3 rows from coupons table:\ncoupon_id\tcode\tdiscount_percent\tvalid_from\tvalid_to\n1\tNEPAL10\t10\t2025-07-01\t2025-12-31\n2\tFEST20\t20\t2025-07-01\t2025-12-31\n3\tWELCOME5\t5\t2025-07-01\t2025-12-31\n*/\n\n\nCREATE TABLE order_coupons (\n\tid INTEGER, \n\torder_id INTEGER, \n\tcoupon_id INTEGER, \n\tPRIMARY KEY (id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(coupon_id) REFERENCES coupons (coupon_id)\n)\n\n/*\n3 rows from order_coupons table:\nid\torder_id\tcoupon_id\n1\t1\t1\n2\t2\t2\n3\t3\t3\n*/\n\n\nCREATE TABLE order_items (\n\torder_item_id INTEGER, \n\torder_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tprice REAL NOT NULL, \n\tPRIMARY KEY (order_item_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from order_items table:\norder_item_id\torder_id\tproduct_id\tquantity\tprice\n1\t1\t1\t1\t550.0\n2\t2\t3\t1\t120.0\n3\t3\t4\t1\t1300.0\n*/\n\n\nCREATE TABLE orders (\n\torder_id INTEGER, \n\tuser_id INTEGER, \n\torder_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tstatus TEXT DEFAULT 'Pending', \n\ttotal_amount REAL, \n\tPRIMARY KEY (order_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from orders table:\norder_id\tuser_id\torder_date\tstatus\ttotal_amount\n1\t1\t2025-07-28 17:03:54\tPending\t550.0\n2\t2\t2025-07-28 17:03:54\tPending\t120.0\n3\t3\t2025-07-28 17:03:54\tPending\t1300.0\n*/\n\n\nCREATE TABLE payments (\n\tpayment_id INTEGER, \n\torder_id INTEGER, \n\tpayment_method TEXT, \n\tamount REAL, \n\tpayment_status TEXT DEFAULT 'Pending', \n\tpaid_at TIMESTAMP, \n\tPRIMARY KEY (payment_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from payments table:\npayment_id\torder_id\tpayment_method\tamount\tpayment_status\tpaid_at\n1\t1\tEsewa\t550.0\tCompleted\tNone\n2\t2\tKhalti\t120.0\tCompleted\tNone\n3\t3\tCash\t1300.0\tPending\tNone\n*/\n\n\nCREATE TABLE product_images (\n\timage_id INTEGER, \n\tproduct_id INTEGER, \n\timage_url TEXT NOT NULL, \n\tPRIMARY KEY (image_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from product_images table:\nimage_id\tproduct_id\timage_url\n1\t1\tsamsung.jpg\n2\t2\tiphone.jpg\n3\t3\tcoat.jpg\n*/\n\n\nCREATE TABLE products (\n\tproduct_id INTEGER, \n\tcategory_id INTEGER, \n\tname TEXT NOT NULL, \n\tdescription TEXT, \n\tprice REAL NOT NULL, \n\tstock INTEGER DEFAULT 0, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (product_id), \n\tFOREIGN KEY(category_id) REFERENCES categories (category_id)\n)\n\n/*\n3 rows from products table:\nproduct_id\tcategory_id\tname\tdescription\tprice\tstock\tcreated_at\n1\t1\tSamsung Galaxy A55\t5G smartphone with AMOLED display\t550.0\t50\t2025-07-28 17:03:54\n2\t1\tiPhone 15\tLatest Apple flagship smartphone\t999.0\t30\t2025-07-28 17:03:54\n3\t2\tWinter Coat\tStylish warm coat for winter\t120.0\t25\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE reviews (\n\treview_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\trating INTEGER, \n\tcomment TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (review_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id), \n\tCHECK (rating BETWEEN 1 AND 5)\n)\n\n/*\n3 rows from reviews table:\nreview_id\tuser_id\tproduct_id\trating\tcomment\tcreated_at\n1\t1\t1\t5\tExcellent smartphone!\t2025-07-28 17:03:54\n2\t2\t3\t4\tCoat is warm and stylish.\t2025-07-28 17:03:54\n3\t3\t4\t5\tLaptop is powerful.\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE shipping (\n\tshipping_id INTEGER, \n\torder_id INTEGER, \n\ttracking_number TEXT, \n\tshipping_address TEXT, \n\tshipping_date TIMESTAMP, \n\tdelivery_date TIMESTAMP, \n\tstatus TEXT DEFAULT 'Preparing', \n\tPRIMARY KEY (shipping_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from shipping table:\nshipping_id\torder_id\ttracking_number\tshipping_address\tshipping_date\tdelivery_date\tstatus\n1\t1\tTRK001\tKathmandu\t2025-07-01 00:00:00\t2025-07-05 00:00:00\tDelivered\n2\t2\tTRK002\tPokhara\t2025-07-02 00:00:00\t2025-07-06 00:00:00\tDelivered\n3\t3\tTRK003\tButwal\t2025-07-03 00:00:00\t2025-07-08 00:00:00\tShipped\n*/\n\n\nCREATE TABLE users (\n\tuser_id INTEGER, \n\tname TEXT, \n\temail TEXT, \n\tpassword TEXT, \n\tphone TEXT, \n\taddress TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (user_id), \n\tUNIQUE (email)\n)\n\n/*\n3 rows from users table:\nuser_id\tname\temail\tpassword\tphone\taddress\tcreated_at\n1\tArun Pandey\tarun@example.com\tpass\t9801111111\tKathmandu\t2025-07-28 17:03:54\n2\tSita Sharma\tsita@example.com\tpass\t9802222222\tPokhara\t2025-07-28 17:03:54\n3\tRam Thapa\tram@example.com\tpass\t9803333333\tButwal\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE wishlist (\n\twishlist_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\tadded_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (wishlist_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from wishlist table:\nwishlist_id\tuser_id\tproduct_id\tadded_at\n1\t1\t2\t2025-07-28 17:03:54\n2\t2\t3\t2025-07-28 17:03:54\n3\t3\t1\t2025-07-28 17:03:54\n*/"), ('AIMessage', "SELECT * FROM users WHERE name = 'Arun Pandey' LIMIT 1;"), ('ToolMessage', "[(1, 'Arun Pandey', 'arun@example.com', 'pass', '9801111111', 'Kathmandu', '2025-07-28 17:03:54')]")]
2025-07-29 13:52:55 [INFO    ] SQLAgent: Invoking LLM for result interpretation...
2025-07-29 13:52:56 [INFO    ] SQLAgent: LLM interpretation completed in 1.32 seconds.
2025-07-29 13:52:56 [DEBUG   ] SQLAgent: Interpretation result: Answer: The details of Arun Pandey are as follows:
- User ID: 1
- Name: Arun Pandey
- Email: arun@example.com
- Password: pass
- Phone: 9801111111
- Address: Kathmandu
- Created at: 2025-07-28 17:03:54
2025-07-29 13:52:56 [INFO    ] SQLAgent: Final answer generated. Ending workflow.
2025-07-29 13:52:56 [INFO    ] SQLAgent: Agent workflow completed in 3.97 seconds.
2025-07-29 13:52:56 [DEBUG   ] SQLAgent: Extracting final SQL query from message history.
2025-07-29 13:52:56 [DEBUG   ] SQLAgent: Extracted SQL query: SELECT * FROM users WHERE name = 'Arun Pandey' LIMIT 1;
2025-07-29 13:52:56 [INFO    ] SQLAgent: Final SQL Query: SELECT * FROM users WHERE name = 'Arun Pandey' LIMIT 1;
2025-07-29 13:52:56 [INFO    ] SQLAgent: Final Answer: Answer: The details of Arun Pandey are as follows:
- User ID: 1
- Name: Arun Pandey
- Email: arun@example.com
- Password: pass
- Phone: 9801111111
- Address: Kathmandu
- Created at: 2025-07-28 17:03:54
2025-07-29 13:52:56 [INFO    ] SQLAgent: ===  Query Execution Completed ===
2025-07-29 13:53:14 [INFO    ] SQLAgent: === Starting SQL Agent  ===
2025-07-29 13:53:14 [INFO    ] SQLAgent: Initializing SQLAgent...
2025-07-29 13:53:14 [DEBUG   ] SQLAgent: Input - db_path: D:\ML(ExtraClass Project)\AGENT AI\SQL-Sage-Intelligent-DB-Agent-with-Gemini-LangGraph\database\final_ecommerce.db, model_name: llama-3.1-8b-instant
2025-07-29 13:53:14 [DEBUG   ] SQLAgent: Connection string created: sqlite:///D:\ML(ExtraClass Project)\AGENT AI\SQL-Sage-Intelligent-DB-Agent-with-Gemini-LangGraph\database\final_ecommerce.db
2025-07-29 13:53:14 [INFO    ] SQLAgent: Connected to SQLite database.
2025-07-29 13:53:14 [DEBUG   ] SQLAgent: Database usable tables: ['cart', 'cart_items', 'categories', 'coupons', 'order_coupons', 'order_items', 'orders', 'payments', 'product_images', 'products', 'reviews', 'shipping', 'users', 'wishlist']
2025-07-29 13:53:15 [INFO    ] SQLAgent: Groq LLM initialized with model: llama-3.1-8b-instant
2025-07-29 13:53:15 [INFO    ] SQLAgent: Starting _setup_tools...
2025-07-29 13:53:15 [DEBUG   ] SQLAgent: Fetched 4 tools from toolkit: ['sql_db_query', 'sql_db_schema', 'sql_db_list_tables', 'sql_db_query_checker']
2025-07-29 13:53:15 [DEBUG   ] SQLAgent: Tool 'sql_db_list_tables' loaded.
2025-07-29 13:53:15 [DEBUG   ] SQLAgent: Tool 'sql_db_schema' loaded.
2025-07-29 13:53:15 [INFO    ] SQLAgent: All tools setup completed.
2025-07-29 13:53:15 [INFO    ] SQLAgent: Setting up prompts...
2025-07-29 13:53:15 [DEBUG   ] SQLAgent: Query generation prompt created.
2025-07-29 13:53:15 [DEBUG   ] SQLAgent: Interpretation prompt created.
2025-07-29 13:53:15 [INFO    ] SQLAgent: Prompts setup completed.
2025-07-29 13:53:15 [INFO    ] SQLAgent: Building LangGraph workflow...
2025-07-29 13:53:15 [DEBUG   ] SQLAgent: Node 'first_tool_call' added to graph.
2025-07-29 13:53:15 [DEBUG   ] SQLAgent: Creating tool node with fallback for tools: ['sql_db_list_tables']
2025-07-29 13:53:15 [DEBUG   ] SQLAgent: Tool node with fallback created.
2025-07-29 13:53:15 [DEBUG   ] SQLAgent: Node 'list_tables_tool' added to graph.
2025-07-29 13:53:15 [DEBUG   ] SQLAgent: Node 'model_get_schema' added to graph.
2025-07-29 13:53:15 [DEBUG   ] SQLAgent: Creating tool node with fallback for tools: ['sql_db_schema']
2025-07-29 13:53:15 [DEBUG   ] SQLAgent: Tool node with fallback created.
2025-07-29 13:53:15 [DEBUG   ] SQLAgent: Node 'get_schema_tool' added to graph.
2025-07-29 13:53:15 [DEBUG   ] SQLAgent: Node 'query_gen' added to graph.
2025-07-29 13:53:15 [DEBUG   ] SQLAgent: Node 'execute_query' added to graph.
2025-07-29 13:53:15 [DEBUG   ] SQLAgent: Node 'interpret_results' added to graph.
2025-07-29 13:53:15 [DEBUG   ] SQLAgent: Edge: START → first_tool_call
2025-07-29 13:53:15 [DEBUG   ] SQLAgent: Edge: first_tool_call → list_tables_tool
2025-07-29 13:53:15 [DEBUG   ] SQLAgent: Edge: list_tables_tool → model_get_schema
2025-07-29 13:53:15 [DEBUG   ] SQLAgent: Edge: model_get_schema → get_schema_tool
2025-07-29 13:53:15 [DEBUG   ] SQLAgent: Edge: get_schema_tool → query_gen
2025-07-29 13:53:15 [DEBUG   ] SQLAgent: Conditional edges added from 'query_gen'
2025-07-29 13:53:15 [DEBUG   ] SQLAgent: Conditional edges added from 'execute_query'
2025-07-29 13:53:15 [DEBUG   ] SQLAgent: Conditional edges added from 'interpret_results'
2025-07-29 13:53:15 [INFO    ] SQLAgent: LangGraph workflow compiled successfully.
2025-07-29 13:53:15 [INFO    ] SQLAgent: SQLAgent initialization completed.
2025-07-29 13:53:15 [INFO    ] SQLAgent: SQLAgent instance created.
2025-07-29 13:53:15 [INFO    ] SQLAgent: === Query Execution ===
2025-07-29 13:53:15 [INFO    ] SQLAgent: Received query: 'can you show me the details of 	Arun  ?'
2025-07-29 13:53:15 [INFO    ] SQLAgent: Setting recursion limit: 15
2025-07-29 13:53:15 [INFO    ] SQLAgent: Invoking agent workflow...
2025-07-29 13:53:15 [INFO    ] SQLAgent: Executing first_tool_call: requesting list of tables.
2025-07-29 13:53:15 [DEBUG   ] SQLAgent: first_tool_call response prepared.
2025-07-29 13:53:15 [INFO    ] SQLAgent: Calling model_get_schema to fetch schema.
2025-07-29 13:53:15 [DEBUG   ] SQLAgent: Current message history: [('HumanMessage', 'can you show me the details of \tArun  ?'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist')]
2025-07-29 13:53:16 [INFO    ] SQLAgent: LLM schema request took 0.48 seconds.
2025-07-29 13:53:16 [DEBUG   ] SQLAgent: Schema response: content='' additional_kwargs={'tool_calls': [{'id': 'vq1badwwf', 'function': {'arguments': '{"table_names":"cart,cart_items,categories,coupons,order_coupons,order_items,orders,payments,product_images,products,reviews,shipping,users,wishlist"}', 'name': 'sql_db_schema'}, 'type': 'function'}]} response_metadata={'token_usage': {'completion_tokens': 50, 'prompt_tokens': 399, 'total_tokens': 449, 'completion_time': 0.066666667, 'prompt_time': 0.036415171, 'queue_time': 0.050412929, 'total_time': 0.103081838}, 'model_name': 'llama-3.1-8b-instant', 'system_fingerprint': 'fp_c523237e5d', 'service_tier': 'on_demand', 'finish_reason': 'tool_calls', 'logprobs': None} id='run--fae08a36-b955-4525-b10d-b794e166126e-0' tool_calls=[{'name': 'sql_db_schema', 'args': {'table_names': 'cart,cart_items,categories,coupons,order_coupons,order_items,orders,payments,product_images,products,reviews,shipping,users,wishlist'}, 'id': 'vq1badwwf', 'type': 'tool_call'}] usage_metadata={'input_tokens': 399, 'output_tokens': 50, 'total_tokens': 449}
2025-07-29 13:53:16 [INFO    ] SQLAgent: Entering query_gen_node to generate SQL query.
2025-07-29 13:53:16 [DEBUG   ] SQLAgent: Message history: [('HumanMessage', 'can you show me the details of \tArun  ?'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist'), ('AIMessage', ''), ('ToolMessage', "\nCREATE TABLE cart (\n\tcart_id INTEGER, \n\tuser_id INTEGER, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (cart_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from cart table:\ncart_id\tuser_id\tcreated_at\n1\t1\t2025-07-28 17:03:54\n2\t2\t2025-07-28 17:03:54\n3\t3\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE cart_items (\n\tcart_item_id INTEGER, \n\tcart_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tPRIMARY KEY (cart_item_id), \n\tFOREIGN KEY(cart_id) REFERENCES cart (cart_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from cart_items table:\ncart_item_id\tcart_id\tproduct_id\tquantity\n1\t1\t3\t1\n2\t2\t4\t2\n3\t3\t2\t1\n*/\n\n\nCREATE TABLE categories (\n\tcategory_id INTEGER, \n\tcategory_name TEXT NOT NULL, \n\tdescription TEXT, \n\tPRIMARY KEY (category_id)\n)\n\n/*\n3 rows from categories table:\ncategory_id\tcategory_name\tdescription\n1\tMobiles\tSmartphones and accessories\n2\tClothing\tMen and Women fashion\n3\tComputers\tLaptops and peripherals\n*/\n\n\nCREATE TABLE coupons (\n\tcoupon_id INTEGER, \n\tcode TEXT, \n\tdiscount_percent INTEGER, \n\tvalid_from DATE, \n\tvalid_to DATE, \n\tPRIMARY KEY (coupon_id), \n\tUNIQUE (code), \n\tCHECK (discount_percent BETWEEN 1 AND 100)\n)\n\n/*\n3 rows from coupons table:\ncoupon_id\tcode\tdiscount_percent\tvalid_from\tvalid_to\n1\tNEPAL10\t10\t2025-07-01\t2025-12-31\n2\tFEST20\t20\t2025-07-01\t2025-12-31\n3\tWELCOME5\t5\t2025-07-01\t2025-12-31\n*/\n\n\nCREATE TABLE order_coupons (\n\tid INTEGER, \n\torder_id INTEGER, \n\tcoupon_id INTEGER, \n\tPRIMARY KEY (id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(coupon_id) REFERENCES coupons (coupon_id)\n)\n\n/*\n3 rows from order_coupons table:\nid\torder_id\tcoupon_id\n1\t1\t1\n2\t2\t2\n3\t3\t3\n*/\n\n\nCREATE TABLE order_items (\n\torder_item_id INTEGER, \n\torder_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tprice REAL NOT NULL, \n\tPRIMARY KEY (order_item_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from order_items table:\norder_item_id\torder_id\tproduct_id\tquantity\tprice\n1\t1\t1\t1\t550.0\n2\t2\t3\t1\t120.0\n3\t3\t4\t1\t1300.0\n*/\n\n\nCREATE TABLE orders (\n\torder_id INTEGER, \n\tuser_id INTEGER, \n\torder_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tstatus TEXT DEFAULT 'Pending', \n\ttotal_amount REAL, \n\tPRIMARY KEY (order_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from orders table:\norder_id\tuser_id\torder_date\tstatus\ttotal_amount\n1\t1\t2025-07-28 17:03:54\tPending\t550.0\n2\t2\t2025-07-28 17:03:54\tPending\t120.0\n3\t3\t2025-07-28 17:03:54\tPending\t1300.0\n*/\n\n\nCREATE TABLE payments (\n\tpayment_id INTEGER, \n\torder_id INTEGER, \n\tpayment_method TEXT, \n\tamount REAL, \n\tpayment_status TEXT DEFAULT 'Pending', \n\tpaid_at TIMESTAMP, \n\tPRIMARY KEY (payment_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from payments table:\npayment_id\torder_id\tpayment_method\tamount\tpayment_status\tpaid_at\n1\t1\tEsewa\t550.0\tCompleted\tNone\n2\t2\tKhalti\t120.0\tCompleted\tNone\n3\t3\tCash\t1300.0\tPending\tNone\n*/\n\n\nCREATE TABLE product_images (\n\timage_id INTEGER, \n\tproduct_id INTEGER, \n\timage_url TEXT NOT NULL, \n\tPRIMARY KEY (image_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from product_images table:\nimage_id\tproduct_id\timage_url\n1\t1\tsamsung.jpg\n2\t2\tiphone.jpg\n3\t3\tcoat.jpg\n*/\n\n\nCREATE TABLE products (\n\tproduct_id INTEGER, \n\tcategory_id INTEGER, \n\tname TEXT NOT NULL, \n\tdescription TEXT, \n\tprice REAL NOT NULL, \n\tstock INTEGER DEFAULT 0, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (product_id), \n\tFOREIGN KEY(category_id) REFERENCES categories (category_id)\n)\n\n/*\n3 rows from products table:\nproduct_id\tcategory_id\tname\tdescription\tprice\tstock\tcreated_at\n1\t1\tSamsung Galaxy A55\t5G smartphone with AMOLED display\t550.0\t50\t2025-07-28 17:03:54\n2\t1\tiPhone 15\tLatest Apple flagship smartphone\t999.0\t30\t2025-07-28 17:03:54\n3\t2\tWinter Coat\tStylish warm coat for winter\t120.0\t25\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE reviews (\n\treview_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\trating INTEGER, \n\tcomment TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (review_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id), \n\tCHECK (rating BETWEEN 1 AND 5)\n)\n\n/*\n3 rows from reviews table:\nreview_id\tuser_id\tproduct_id\trating\tcomment\tcreated_at\n1\t1\t1\t5\tExcellent smartphone!\t2025-07-28 17:03:54\n2\t2\t3\t4\tCoat is warm and stylish.\t2025-07-28 17:03:54\n3\t3\t4\t5\tLaptop is powerful.\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE shipping (\n\tshipping_id INTEGER, \n\torder_id INTEGER, \n\ttracking_number TEXT, \n\tshipping_address TEXT, \n\tshipping_date TIMESTAMP, \n\tdelivery_date TIMESTAMP, \n\tstatus TEXT DEFAULT 'Preparing', \n\tPRIMARY KEY (shipping_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from shipping table:\nshipping_id\torder_id\ttracking_number\tshipping_address\tshipping_date\tdelivery_date\tstatus\n1\t1\tTRK001\tKathmandu\t2025-07-01 00:00:00\t2025-07-05 00:00:00\tDelivered\n2\t2\tTRK002\tPokhara\t2025-07-02 00:00:00\t2025-07-06 00:00:00\tDelivered\n3\t3\tTRK003\tButwal\t2025-07-03 00:00:00\t2025-07-08 00:00:00\tShipped\n*/\n\n\nCREATE TABLE users (\n\tuser_id INTEGER, \n\tname TEXT, \n\temail TEXT, \n\tpassword TEXT, \n\tphone TEXT, \n\taddress TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (user_id), \n\tUNIQUE (email)\n)\n\n/*\n3 rows from users table:\nuser_id\tname\temail\tpassword\tphone\taddress\tcreated_at\n1\tArun Pandey\tarun@example.com\tpass\t9801111111\tKathmandu\t2025-07-28 17:03:54\n2\tSita Sharma\tsita@example.com\tpass\t9802222222\tPokhara\t2025-07-28 17:03:54\n3\tRam Thapa\tram@example.com\tpass\t9803333333\tButwal\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE wishlist (\n\twishlist_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\tadded_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (wishlist_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from wishlist table:\nwishlist_id\tuser_id\tproduct_id\tadded_at\n1\t1\t2\t2025-07-28 17:03:54\n2\t2\t3\t2025-07-28 17:03:54\n3\t3\t1\t2025-07-28 17:03:54\n*/")]
2025-07-29 13:53:16 [DEBUG   ] SQLAgent: Query attempt #1
2025-07-29 13:53:16 [INFO    ] SQLAgent: Invoking LLM for SQL generation...
2025-07-29 13:53:16 [INFO    ] SQLAgent: LLM generated SQL in 0.34 seconds.
2025-07-29 13:53:16 [DEBUG   ] SQLAgent: LLM response content: SELECT * FROM users WHERE name = 'Arun';
2025-07-29 13:53:16 [INFO    ] SQLAgent: Valid SELECT query detected. Proceeding to execute_query.
2025-07-29 13:53:16 [INFO    ] SQLAgent: Executing SQL query from last message.
2025-07-29 13:53:16 [DEBUG   ] SQLAgent: Last message type: AIMessage, content: SELECT * FROM users WHERE name = 'Arun';
2025-07-29 13:53:16 [DEBUG   ] SQLAgent: Raw SQL content: SELECT * FROM users WHERE name = 'Arun';
2025-07-29 13:53:16 [INFO    ] SQLAgent: Extracted SQL query: SELECT * FROM users WHERE name = 'Arun';
2025-07-29 13:53:16 [INFO    ] SQLAgent: Query executed in 0.00 seconds.
2025-07-29 13:53:16 [INFO    ] SQLAgent: Query returned no results.
2025-07-29 13:53:16 [INFO    ] SQLAgent: Query executed successfully. Proceeding to interpretation.
2025-07-29 13:53:16 [INFO    ] SQLAgent: Interpreting query results into natural language answer.
2025-07-29 13:53:16 [DEBUG   ] SQLAgent: Message history for interpretation: [('HumanMessage', 'can you show me the details of \tArun  ?'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist'), ('AIMessage', ''), ('ToolMessage', "\nCREATE TABLE cart (\n\tcart_id INTEGER, \n\tuser_id INTEGER, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (cart_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from cart table:\ncart_id\tuser_id\tcreated_at\n1\t1\t2025-07-28 17:03:54\n2\t2\t2025-07-28 17:03:54\n3\t3\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE cart_items (\n\tcart_item_id INTEGER, \n\tcart_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tPRIMARY KEY (cart_item_id), \n\tFOREIGN KEY(cart_id) REFERENCES cart (cart_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from cart_items table:\ncart_item_id\tcart_id\tproduct_id\tquantity\n1\t1\t3\t1\n2\t2\t4\t2\n3\t3\t2\t1\n*/\n\n\nCREATE TABLE categories (\n\tcategory_id INTEGER, \n\tcategory_name TEXT NOT NULL, \n\tdescription TEXT, \n\tPRIMARY KEY (category_id)\n)\n\n/*\n3 rows from categories table:\ncategory_id\tcategory_name\tdescription\n1\tMobiles\tSmartphones and accessories\n2\tClothing\tMen and Women fashion\n3\tComputers\tLaptops and peripherals\n*/\n\n\nCREATE TABLE coupons (\n\tcoupon_id INTEGER, \n\tcode TEXT, \n\tdiscount_percent INTEGER, \n\tvalid_from DATE, \n\tvalid_to DATE, \n\tPRIMARY KEY (coupon_id), \n\tUNIQUE (code), \n\tCHECK (discount_percent BETWEEN 1 AND 100)\n)\n\n/*\n3 rows from coupons table:\ncoupon_id\tcode\tdiscount_percent\tvalid_from\tvalid_to\n1\tNEPAL10\t10\t2025-07-01\t2025-12-31\n2\tFEST20\t20\t2025-07-01\t2025-12-31\n3\tWELCOME5\t5\t2025-07-01\t2025-12-31\n*/\n\n\nCREATE TABLE order_coupons (\n\tid INTEGER, \n\torder_id INTEGER, \n\tcoupon_id INTEGER, \n\tPRIMARY KEY (id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(coupon_id) REFERENCES coupons (coupon_id)\n)\n\n/*\n3 rows from order_coupons table:\nid\torder_id\tcoupon_id\n1\t1\t1\n2\t2\t2\n3\t3\t3\n*/\n\n\nCREATE TABLE order_items (\n\torder_item_id INTEGER, \n\torder_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tprice REAL NOT NULL, \n\tPRIMARY KEY (order_item_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from order_items table:\norder_item_id\torder_id\tproduct_id\tquantity\tprice\n1\t1\t1\t1\t550.0\n2\t2\t3\t1\t120.0\n3\t3\t4\t1\t1300.0\n*/\n\n\nCREATE TABLE orders (\n\torder_id INTEGER, \n\tuser_id INTEGER, \n\torder_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tstatus TEXT DEFAULT 'Pending', \n\ttotal_amount REAL, \n\tPRIMARY KEY (order_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from orders table:\norder_id\tuser_id\torder_date\tstatus\ttotal_amount\n1\t1\t2025-07-28 17:03:54\tPending\t550.0\n2\t2\t2025-07-28 17:03:54\tPending\t120.0\n3\t3\t2025-07-28 17:03:54\tPending\t1300.0\n*/\n\n\nCREATE TABLE payments (\n\tpayment_id INTEGER, \n\torder_id INTEGER, \n\tpayment_method TEXT, \n\tamount REAL, \n\tpayment_status TEXT DEFAULT 'Pending', \n\tpaid_at TIMESTAMP, \n\tPRIMARY KEY (payment_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from payments table:\npayment_id\torder_id\tpayment_method\tamount\tpayment_status\tpaid_at\n1\t1\tEsewa\t550.0\tCompleted\tNone\n2\t2\tKhalti\t120.0\tCompleted\tNone\n3\t3\tCash\t1300.0\tPending\tNone\n*/\n\n\nCREATE TABLE product_images (\n\timage_id INTEGER, \n\tproduct_id INTEGER, \n\timage_url TEXT NOT NULL, \n\tPRIMARY KEY (image_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from product_images table:\nimage_id\tproduct_id\timage_url\n1\t1\tsamsung.jpg\n2\t2\tiphone.jpg\n3\t3\tcoat.jpg\n*/\n\n\nCREATE TABLE products (\n\tproduct_id INTEGER, \n\tcategory_id INTEGER, \n\tname TEXT NOT NULL, \n\tdescription TEXT, \n\tprice REAL NOT NULL, \n\tstock INTEGER DEFAULT 0, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (product_id), \n\tFOREIGN KEY(category_id) REFERENCES categories (category_id)\n)\n\n/*\n3 rows from products table:\nproduct_id\tcategory_id\tname\tdescription\tprice\tstock\tcreated_at\n1\t1\tSamsung Galaxy A55\t5G smartphone with AMOLED display\t550.0\t50\t2025-07-28 17:03:54\n2\t1\tiPhone 15\tLatest Apple flagship smartphone\t999.0\t30\t2025-07-28 17:03:54\n3\t2\tWinter Coat\tStylish warm coat for winter\t120.0\t25\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE reviews (\n\treview_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\trating INTEGER, \n\tcomment TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (review_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id), \n\tCHECK (rating BETWEEN 1 AND 5)\n)\n\n/*\n3 rows from reviews table:\nreview_id\tuser_id\tproduct_id\trating\tcomment\tcreated_at\n1\t1\t1\t5\tExcellent smartphone!\t2025-07-28 17:03:54\n2\t2\t3\t4\tCoat is warm and stylish.\t2025-07-28 17:03:54\n3\t3\t4\t5\tLaptop is powerful.\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE shipping (\n\tshipping_id INTEGER, \n\torder_id INTEGER, \n\ttracking_number TEXT, \n\tshipping_address TEXT, \n\tshipping_date TIMESTAMP, \n\tdelivery_date TIMESTAMP, \n\tstatus TEXT DEFAULT 'Preparing', \n\tPRIMARY KEY (shipping_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from shipping table:\nshipping_id\torder_id\ttracking_number\tshipping_address\tshipping_date\tdelivery_date\tstatus\n1\t1\tTRK001\tKathmandu\t2025-07-01 00:00:00\t2025-07-05 00:00:00\tDelivered\n2\t2\tTRK002\tPokhara\t2025-07-02 00:00:00\t2025-07-06 00:00:00\tDelivered\n3\t3\tTRK003\tButwal\t2025-07-03 00:00:00\t2025-07-08 00:00:00\tShipped\n*/\n\n\nCREATE TABLE users (\n\tuser_id INTEGER, \n\tname TEXT, \n\temail TEXT, \n\tpassword TEXT, \n\tphone TEXT, \n\taddress TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (user_id), \n\tUNIQUE (email)\n)\n\n/*\n3 rows from users table:\nuser_id\tname\temail\tpassword\tphone\taddress\tcreated_at\n1\tArun Pandey\tarun@example.com\tpass\t9801111111\tKathmandu\t2025-07-28 17:03:54\n2\tSita Sharma\tsita@example.com\tpass\t9802222222\tPokhara\t2025-07-28 17:03:54\n3\tRam Thapa\tram@example.com\tpass\t9803333333\tButwal\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE wishlist (\n\twishlist_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\tadded_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (wishlist_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from wishlist table:\nwishlist_id\tuser_id\tproduct_id\tadded_at\n1\t1\t2\t2025-07-28 17:03:54\n2\t2\t3\t2025-07-28 17:03:54\n3\t3\t1\t2025-07-28 17:03:54\n*/"), ('AIMessage', "SELECT * FROM users WHERE name = 'Arun';"), ('ToolMessage', 'Query executed successfully but returned no results.')]
2025-07-29 13:53:16 [INFO    ] SQLAgent: Invoking LLM for result interpretation...
2025-07-29 13:53:30 [INFO    ] SQLAgent: LLM interpretation completed in 14.36 seconds.
2025-07-29 13:53:30 [DEBUG   ] SQLAgent: Interpretation result: Answer: No matching records were found for the user 'Arun'.
2025-07-29 13:53:30 [INFO    ] SQLAgent: Final answer generated. Ending workflow.
2025-07-29 13:53:30 [INFO    ] SQLAgent: Agent workflow completed in 15.22 seconds.
2025-07-29 13:53:30 [DEBUG   ] SQLAgent: Extracting final SQL query from message history.
2025-07-29 13:53:30 [DEBUG   ] SQLAgent: Extracted SQL query: SELECT * FROM users WHERE name = 'Arun';
2025-07-29 13:53:30 [INFO    ] SQLAgent: Final SQL Query: SELECT * FROM users WHERE name = 'Arun';
2025-07-29 13:53:30 [INFO    ] SQLAgent: Final Answer: Answer: No matching records were found for the user 'Arun'.
2025-07-29 13:53:30 [INFO    ] SQLAgent: ===  Query Execution Completed ===
2025-07-29 13:53:50 [INFO    ] SQLAgent: === Starting SQL Agent  ===
2025-07-29 13:53:50 [INFO    ] SQLAgent: Initializing SQLAgent...
2025-07-29 13:53:50 [DEBUG   ] SQLAgent: Input - db_path: D:\ML(ExtraClass Project)\AGENT AI\SQL-Sage-Intelligent-DB-Agent-with-Gemini-LangGraph\database\final_ecommerce.db, model_name: llama-3.1-8b-instant
2025-07-29 13:53:50 [DEBUG   ] SQLAgent: Connection string created: sqlite:///D:\ML(ExtraClass Project)\AGENT AI\SQL-Sage-Intelligent-DB-Agent-with-Gemini-LangGraph\database\final_ecommerce.db
2025-07-29 13:53:50 [INFO    ] SQLAgent: Connected to SQLite database.
2025-07-29 13:53:50 [DEBUG   ] SQLAgent: Database usable tables: ['cart', 'cart_items', 'categories', 'coupons', 'order_coupons', 'order_items', 'orders', 'payments', 'product_images', 'products', 'reviews', 'shipping', 'users', 'wishlist']
2025-07-29 13:53:51 [INFO    ] SQLAgent: Groq LLM initialized with model: llama-3.1-8b-instant
2025-07-29 13:53:51 [INFO    ] SQLAgent: Starting _setup_tools...
2025-07-29 13:53:51 [DEBUG   ] SQLAgent: Fetched 4 tools from toolkit: ['sql_db_query', 'sql_db_schema', 'sql_db_list_tables', 'sql_db_query_checker']
2025-07-29 13:53:51 [DEBUG   ] SQLAgent: Tool 'sql_db_list_tables' loaded.
2025-07-29 13:53:51 [DEBUG   ] SQLAgent: Tool 'sql_db_schema' loaded.
2025-07-29 13:53:51 [INFO    ] SQLAgent: All tools setup completed.
2025-07-29 13:53:51 [INFO    ] SQLAgent: Setting up prompts...
2025-07-29 13:53:51 [DEBUG   ] SQLAgent: Query generation prompt created.
2025-07-29 13:53:51 [DEBUG   ] SQLAgent: Interpretation prompt created.
2025-07-29 13:53:51 [INFO    ] SQLAgent: Prompts setup completed.
2025-07-29 13:53:51 [INFO    ] SQLAgent: Building LangGraph workflow...
2025-07-29 13:53:51 [DEBUG   ] SQLAgent: Node 'first_tool_call' added to graph.
2025-07-29 13:53:51 [DEBUG   ] SQLAgent: Creating tool node with fallback for tools: ['sql_db_list_tables']
2025-07-29 13:53:51 [DEBUG   ] SQLAgent: Tool node with fallback created.
2025-07-29 13:53:51 [DEBUG   ] SQLAgent: Node 'list_tables_tool' added to graph.
2025-07-29 13:53:51 [DEBUG   ] SQLAgent: Node 'model_get_schema' added to graph.
2025-07-29 13:53:51 [DEBUG   ] SQLAgent: Creating tool node with fallback for tools: ['sql_db_schema']
2025-07-29 13:53:51 [DEBUG   ] SQLAgent: Tool node with fallback created.
2025-07-29 13:53:51 [DEBUG   ] SQLAgent: Node 'get_schema_tool' added to graph.
2025-07-29 13:53:51 [DEBUG   ] SQLAgent: Node 'query_gen' added to graph.
2025-07-29 13:53:51 [DEBUG   ] SQLAgent: Node 'execute_query' added to graph.
2025-07-29 13:53:51 [DEBUG   ] SQLAgent: Node 'interpret_results' added to graph.
2025-07-29 13:53:51 [DEBUG   ] SQLAgent: Edge: START → first_tool_call
2025-07-29 13:53:51 [DEBUG   ] SQLAgent: Edge: first_tool_call → list_tables_tool
2025-07-29 13:53:51 [DEBUG   ] SQLAgent: Edge: list_tables_tool → model_get_schema
2025-07-29 13:53:51 [DEBUG   ] SQLAgent: Edge: model_get_schema → get_schema_tool
2025-07-29 13:53:51 [DEBUG   ] SQLAgent: Edge: get_schema_tool → query_gen
2025-07-29 13:53:51 [DEBUG   ] SQLAgent: Conditional edges added from 'query_gen'
2025-07-29 13:53:51 [DEBUG   ] SQLAgent: Conditional edges added from 'execute_query'
2025-07-29 13:53:51 [DEBUG   ] SQLAgent: Conditional edges added from 'interpret_results'
2025-07-29 13:53:51 [INFO    ] SQLAgent: LangGraph workflow compiled successfully.
2025-07-29 13:53:51 [INFO    ] SQLAgent: SQLAgent initialization completed.
2025-07-29 13:53:51 [INFO    ] SQLAgent: SQLAgent instance created.
2025-07-29 13:53:51 [INFO    ] SQLAgent: === Query Execution ===
2025-07-29 13:53:51 [INFO    ] SQLAgent: Received query: 'can you show me the details of 	Arun Pandey?'
2025-07-29 13:53:51 [INFO    ] SQLAgent: Setting recursion limit: 15
2025-07-29 13:53:51 [INFO    ] SQLAgent: Invoking agent workflow...
2025-07-29 13:53:51 [INFO    ] SQLAgent: Executing first_tool_call: requesting list of tables.
2025-07-29 13:53:51 [DEBUG   ] SQLAgent: first_tool_call response prepared.
2025-07-29 13:53:51 [INFO    ] SQLAgent: Calling model_get_schema to fetch schema.
2025-07-29 13:53:51 [DEBUG   ] SQLAgent: Current message history: [('HumanMessage', 'can you show me the details of \tArun Pandey?'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist')]
2025-07-29 13:53:53 [INFO    ] SQLAgent: LLM schema request took 1.87 seconds.
2025-07-29 13:53:53 [DEBUG   ] SQLAgent: Schema response: content='' additional_kwargs={'tool_calls': [{'id': 'aw95dsjdy', 'function': {'arguments': '{"table_names":"cart,cart_items,categories,coupons,order_coupons,order_items,orders,payments,product_images,products,reviews,shipping,users,wishlist"}', 'name': 'sql_db_schema'}, 'type': 'function'}]} response_metadata={'token_usage': {'completion_tokens': 50, 'prompt_tokens': 400, 'total_tokens': 450, 'completion_time': 0.066666667, 'prompt_time': 0.02581989, 'queue_time': 0.051278959, 'total_time': 0.092486557}, 'model_name': 'llama-3.1-8b-instant', 'system_fingerprint': 'fp_c523237e5d', 'service_tier': 'on_demand', 'finish_reason': 'tool_calls', 'logprobs': None} id='run--ebb7ea1f-454c-48de-8426-76ba28e12f83-0' tool_calls=[{'name': 'sql_db_schema', 'args': {'table_names': 'cart,cart_items,categories,coupons,order_coupons,order_items,orders,payments,product_images,products,reviews,shipping,users,wishlist'}, 'id': 'aw95dsjdy', 'type': 'tool_call'}] usage_metadata={'input_tokens': 400, 'output_tokens': 50, 'total_tokens': 450}
2025-07-29 13:53:53 [INFO    ] SQLAgent: Entering query_gen_node to generate SQL query.
2025-07-29 13:53:53 [DEBUG   ] SQLAgent: Message history: [('HumanMessage', 'can you show me the details of \tArun Pandey?'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist'), ('AIMessage', ''), ('ToolMessage', "\nCREATE TABLE cart (\n\tcart_id INTEGER, \n\tuser_id INTEGER, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (cart_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from cart table:\ncart_id\tuser_id\tcreated_at\n1\t1\t2025-07-28 17:03:54\n2\t2\t2025-07-28 17:03:54\n3\t3\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE cart_items (\n\tcart_item_id INTEGER, \n\tcart_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tPRIMARY KEY (cart_item_id), \n\tFOREIGN KEY(cart_id) REFERENCES cart (cart_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from cart_items table:\ncart_item_id\tcart_id\tproduct_id\tquantity\n1\t1\t3\t1\n2\t2\t4\t2\n3\t3\t2\t1\n*/\n\n\nCREATE TABLE categories (\n\tcategory_id INTEGER, \n\tcategory_name TEXT NOT NULL, \n\tdescription TEXT, \n\tPRIMARY KEY (category_id)\n)\n\n/*\n3 rows from categories table:\ncategory_id\tcategory_name\tdescription\n1\tMobiles\tSmartphones and accessories\n2\tClothing\tMen and Women fashion\n3\tComputers\tLaptops and peripherals\n*/\n\n\nCREATE TABLE coupons (\n\tcoupon_id INTEGER, \n\tcode TEXT, \n\tdiscount_percent INTEGER, \n\tvalid_from DATE, \n\tvalid_to DATE, \n\tPRIMARY KEY (coupon_id), \n\tUNIQUE (code), \n\tCHECK (discount_percent BETWEEN 1 AND 100)\n)\n\n/*\n3 rows from coupons table:\ncoupon_id\tcode\tdiscount_percent\tvalid_from\tvalid_to\n1\tNEPAL10\t10\t2025-07-01\t2025-12-31\n2\tFEST20\t20\t2025-07-01\t2025-12-31\n3\tWELCOME5\t5\t2025-07-01\t2025-12-31\n*/\n\n\nCREATE TABLE order_coupons (\n\tid INTEGER, \n\torder_id INTEGER, \n\tcoupon_id INTEGER, \n\tPRIMARY KEY (id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(coupon_id) REFERENCES coupons (coupon_id)\n)\n\n/*\n3 rows from order_coupons table:\nid\torder_id\tcoupon_id\n1\t1\t1\n2\t2\t2\n3\t3\t3\n*/\n\n\nCREATE TABLE order_items (\n\torder_item_id INTEGER, \n\torder_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tprice REAL NOT NULL, \n\tPRIMARY KEY (order_item_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from order_items table:\norder_item_id\torder_id\tproduct_id\tquantity\tprice\n1\t1\t1\t1\t550.0\n2\t2\t3\t1\t120.0\n3\t3\t4\t1\t1300.0\n*/\n\n\nCREATE TABLE orders (\n\torder_id INTEGER, \n\tuser_id INTEGER, \n\torder_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tstatus TEXT DEFAULT 'Pending', \n\ttotal_amount REAL, \n\tPRIMARY KEY (order_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from orders table:\norder_id\tuser_id\torder_date\tstatus\ttotal_amount\n1\t1\t2025-07-28 17:03:54\tPending\t550.0\n2\t2\t2025-07-28 17:03:54\tPending\t120.0\n3\t3\t2025-07-28 17:03:54\tPending\t1300.0\n*/\n\n\nCREATE TABLE payments (\n\tpayment_id INTEGER, \n\torder_id INTEGER, \n\tpayment_method TEXT, \n\tamount REAL, \n\tpayment_status TEXT DEFAULT 'Pending', \n\tpaid_at TIMESTAMP, \n\tPRIMARY KEY (payment_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from payments table:\npayment_id\torder_id\tpayment_method\tamount\tpayment_status\tpaid_at\n1\t1\tEsewa\t550.0\tCompleted\tNone\n2\t2\tKhalti\t120.0\tCompleted\tNone\n3\t3\tCash\t1300.0\tPending\tNone\n*/\n\n\nCREATE TABLE product_images (\n\timage_id INTEGER, \n\tproduct_id INTEGER, \n\timage_url TEXT NOT NULL, \n\tPRIMARY KEY (image_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from product_images table:\nimage_id\tproduct_id\timage_url\n1\t1\tsamsung.jpg\n2\t2\tiphone.jpg\n3\t3\tcoat.jpg\n*/\n\n\nCREATE TABLE products (\n\tproduct_id INTEGER, \n\tcategory_id INTEGER, \n\tname TEXT NOT NULL, \n\tdescription TEXT, \n\tprice REAL NOT NULL, \n\tstock INTEGER DEFAULT 0, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (product_id), \n\tFOREIGN KEY(category_id) REFERENCES categories (category_id)\n)\n\n/*\n3 rows from products table:\nproduct_id\tcategory_id\tname\tdescription\tprice\tstock\tcreated_at\n1\t1\tSamsung Galaxy A55\t5G smartphone with AMOLED display\t550.0\t50\t2025-07-28 17:03:54\n2\t1\tiPhone 15\tLatest Apple flagship smartphone\t999.0\t30\t2025-07-28 17:03:54\n3\t2\tWinter Coat\tStylish warm coat for winter\t120.0\t25\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE reviews (\n\treview_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\trating INTEGER, \n\tcomment TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (review_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id), \n\tCHECK (rating BETWEEN 1 AND 5)\n)\n\n/*\n3 rows from reviews table:\nreview_id\tuser_id\tproduct_id\trating\tcomment\tcreated_at\n1\t1\t1\t5\tExcellent smartphone!\t2025-07-28 17:03:54\n2\t2\t3\t4\tCoat is warm and stylish.\t2025-07-28 17:03:54\n3\t3\t4\t5\tLaptop is powerful.\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE shipping (\n\tshipping_id INTEGER, \n\torder_id INTEGER, \n\ttracking_number TEXT, \n\tshipping_address TEXT, \n\tshipping_date TIMESTAMP, \n\tdelivery_date TIMESTAMP, \n\tstatus TEXT DEFAULT 'Preparing', \n\tPRIMARY KEY (shipping_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from shipping table:\nshipping_id\torder_id\ttracking_number\tshipping_address\tshipping_date\tdelivery_date\tstatus\n1\t1\tTRK001\tKathmandu\t2025-07-01 00:00:00\t2025-07-05 00:00:00\tDelivered\n2\t2\tTRK002\tPokhara\t2025-07-02 00:00:00\t2025-07-06 00:00:00\tDelivered\n3\t3\tTRK003\tButwal\t2025-07-03 00:00:00\t2025-07-08 00:00:00\tShipped\n*/\n\n\nCREATE TABLE users (\n\tuser_id INTEGER, \n\tname TEXT, \n\temail TEXT, \n\tpassword TEXT, \n\tphone TEXT, \n\taddress TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (user_id), \n\tUNIQUE (email)\n)\n\n/*\n3 rows from users table:\nuser_id\tname\temail\tpassword\tphone\taddress\tcreated_at\n1\tArun Pandey\tarun@example.com\tpass\t9801111111\tKathmandu\t2025-07-28 17:03:54\n2\tSita Sharma\tsita@example.com\tpass\t9802222222\tPokhara\t2025-07-28 17:03:54\n3\tRam Thapa\tram@example.com\tpass\t9803333333\tButwal\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE wishlist (\n\twishlist_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\tadded_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (wishlist_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from wishlist table:\nwishlist_id\tuser_id\tproduct_id\tadded_at\n1\t1\t2\t2025-07-28 17:03:54\n2\t2\t3\t2025-07-28 17:03:54\n3\t3\t1\t2025-07-28 17:03:54\n*/")]
2025-07-29 13:53:53 [DEBUG   ] SQLAgent: Query attempt #1
2025-07-29 13:53:53 [INFO    ] SQLAgent: Invoking LLM for SQL generation...
2025-07-29 13:53:58 [INFO    ] SQLAgent: LLM generated SQL in 5.61 seconds.
2025-07-29 13:53:58 [DEBUG   ] SQLAgent: LLM response content: SELECT * FROM users WHERE name = 'Arun Pandey' LIMIT 1;
2025-07-29 13:53:58 [INFO    ] SQLAgent: Valid SELECT query detected. Proceeding to execute_query.
2025-07-29 13:53:58 [INFO    ] SQLAgent: Executing SQL query from last message.
2025-07-29 13:53:58 [DEBUG   ] SQLAgent: Last message type: AIMessage, content: SELECT * FROM users WHERE name = 'Arun Pandey' LIMIT 1;
2025-07-29 13:53:58 [DEBUG   ] SQLAgent: Raw SQL content: SELECT * FROM users WHERE name = 'Arun Pandey' LIMIT 1;
2025-07-29 13:53:58 [INFO    ] SQLAgent: Extracted SQL query: SELECT * FROM users WHERE name = 'Arun Pandey' LIMIT 1;
2025-07-29 13:53:58 [INFO    ] SQLAgent: Query executed in 0.00 seconds.
2025-07-29 13:53:58 [INFO    ] SQLAgent: Query result: [(1, 'Arun Pandey', 'arun@example.com', 'pass', '9801111111', 'Kathmandu', '2025-07-28 17:03:54')]
2025-07-29 13:53:58 [INFO    ] SQLAgent: Query executed successfully. Proceeding to interpretation.
2025-07-29 13:53:58 [INFO    ] SQLAgent: Interpreting query results into natural language answer.
2025-07-29 13:53:58 [DEBUG   ] SQLAgent: Message history for interpretation: [('HumanMessage', 'can you show me the details of \tArun Pandey?'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist'), ('AIMessage', ''), ('ToolMessage', "\nCREATE TABLE cart (\n\tcart_id INTEGER, \n\tuser_id INTEGER, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (cart_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from cart table:\ncart_id\tuser_id\tcreated_at\n1\t1\t2025-07-28 17:03:54\n2\t2\t2025-07-28 17:03:54\n3\t3\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE cart_items (\n\tcart_item_id INTEGER, \n\tcart_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tPRIMARY KEY (cart_item_id), \n\tFOREIGN KEY(cart_id) REFERENCES cart (cart_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from cart_items table:\ncart_item_id\tcart_id\tproduct_id\tquantity\n1\t1\t3\t1\n2\t2\t4\t2\n3\t3\t2\t1\n*/\n\n\nCREATE TABLE categories (\n\tcategory_id INTEGER, \n\tcategory_name TEXT NOT NULL, \n\tdescription TEXT, \n\tPRIMARY KEY (category_id)\n)\n\n/*\n3 rows from categories table:\ncategory_id\tcategory_name\tdescription\n1\tMobiles\tSmartphones and accessories\n2\tClothing\tMen and Women fashion\n3\tComputers\tLaptops and peripherals\n*/\n\n\nCREATE TABLE coupons (\n\tcoupon_id INTEGER, \n\tcode TEXT, \n\tdiscount_percent INTEGER, \n\tvalid_from DATE, \n\tvalid_to DATE, \n\tPRIMARY KEY (coupon_id), \n\tUNIQUE (code), \n\tCHECK (discount_percent BETWEEN 1 AND 100)\n)\n\n/*\n3 rows from coupons table:\ncoupon_id\tcode\tdiscount_percent\tvalid_from\tvalid_to\n1\tNEPAL10\t10\t2025-07-01\t2025-12-31\n2\tFEST20\t20\t2025-07-01\t2025-12-31\n3\tWELCOME5\t5\t2025-07-01\t2025-12-31\n*/\n\n\nCREATE TABLE order_coupons (\n\tid INTEGER, \n\torder_id INTEGER, \n\tcoupon_id INTEGER, \n\tPRIMARY KEY (id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(coupon_id) REFERENCES coupons (coupon_id)\n)\n\n/*\n3 rows from order_coupons table:\nid\torder_id\tcoupon_id\n1\t1\t1\n2\t2\t2\n3\t3\t3\n*/\n\n\nCREATE TABLE order_items (\n\torder_item_id INTEGER, \n\torder_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tprice REAL NOT NULL, \n\tPRIMARY KEY (order_item_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from order_items table:\norder_item_id\torder_id\tproduct_id\tquantity\tprice\n1\t1\t1\t1\t550.0\n2\t2\t3\t1\t120.0\n3\t3\t4\t1\t1300.0\n*/\n\n\nCREATE TABLE orders (\n\torder_id INTEGER, \n\tuser_id INTEGER, \n\torder_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tstatus TEXT DEFAULT 'Pending', \n\ttotal_amount REAL, \n\tPRIMARY KEY (order_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from orders table:\norder_id\tuser_id\torder_date\tstatus\ttotal_amount\n1\t1\t2025-07-28 17:03:54\tPending\t550.0\n2\t2\t2025-07-28 17:03:54\tPending\t120.0\n3\t3\t2025-07-28 17:03:54\tPending\t1300.0\n*/\n\n\nCREATE TABLE payments (\n\tpayment_id INTEGER, \n\torder_id INTEGER, \n\tpayment_method TEXT, \n\tamount REAL, \n\tpayment_status TEXT DEFAULT 'Pending', \n\tpaid_at TIMESTAMP, \n\tPRIMARY KEY (payment_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from payments table:\npayment_id\torder_id\tpayment_method\tamount\tpayment_status\tpaid_at\n1\t1\tEsewa\t550.0\tCompleted\tNone\n2\t2\tKhalti\t120.0\tCompleted\tNone\n3\t3\tCash\t1300.0\tPending\tNone\n*/\n\n\nCREATE TABLE product_images (\n\timage_id INTEGER, \n\tproduct_id INTEGER, \n\timage_url TEXT NOT NULL, \n\tPRIMARY KEY (image_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from product_images table:\nimage_id\tproduct_id\timage_url\n1\t1\tsamsung.jpg\n2\t2\tiphone.jpg\n3\t3\tcoat.jpg\n*/\n\n\nCREATE TABLE products (\n\tproduct_id INTEGER, \n\tcategory_id INTEGER, \n\tname TEXT NOT NULL, \n\tdescription TEXT, \n\tprice REAL NOT NULL, \n\tstock INTEGER DEFAULT 0, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (product_id), \n\tFOREIGN KEY(category_id) REFERENCES categories (category_id)\n)\n\n/*\n3 rows from products table:\nproduct_id\tcategory_id\tname\tdescription\tprice\tstock\tcreated_at\n1\t1\tSamsung Galaxy A55\t5G smartphone with AMOLED display\t550.0\t50\t2025-07-28 17:03:54\n2\t1\tiPhone 15\tLatest Apple flagship smartphone\t999.0\t30\t2025-07-28 17:03:54\n3\t2\tWinter Coat\tStylish warm coat for winter\t120.0\t25\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE reviews (\n\treview_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\trating INTEGER, \n\tcomment TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (review_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id), \n\tCHECK (rating BETWEEN 1 AND 5)\n)\n\n/*\n3 rows from reviews table:\nreview_id\tuser_id\tproduct_id\trating\tcomment\tcreated_at\n1\t1\t1\t5\tExcellent smartphone!\t2025-07-28 17:03:54\n2\t2\t3\t4\tCoat is warm and stylish.\t2025-07-28 17:03:54\n3\t3\t4\t5\tLaptop is powerful.\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE shipping (\n\tshipping_id INTEGER, \n\torder_id INTEGER, \n\ttracking_number TEXT, \n\tshipping_address TEXT, \n\tshipping_date TIMESTAMP, \n\tdelivery_date TIMESTAMP, \n\tstatus TEXT DEFAULT 'Preparing', \n\tPRIMARY KEY (shipping_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from shipping table:\nshipping_id\torder_id\ttracking_number\tshipping_address\tshipping_date\tdelivery_date\tstatus\n1\t1\tTRK001\tKathmandu\t2025-07-01 00:00:00\t2025-07-05 00:00:00\tDelivered\n2\t2\tTRK002\tPokhara\t2025-07-02 00:00:00\t2025-07-06 00:00:00\tDelivered\n3\t3\tTRK003\tButwal\t2025-07-03 00:00:00\t2025-07-08 00:00:00\tShipped\n*/\n\n\nCREATE TABLE users (\n\tuser_id INTEGER, \n\tname TEXT, \n\temail TEXT, \n\tpassword TEXT, \n\tphone TEXT, \n\taddress TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (user_id), \n\tUNIQUE (email)\n)\n\n/*\n3 rows from users table:\nuser_id\tname\temail\tpassword\tphone\taddress\tcreated_at\n1\tArun Pandey\tarun@example.com\tpass\t9801111111\tKathmandu\t2025-07-28 17:03:54\n2\tSita Sharma\tsita@example.com\tpass\t9802222222\tPokhara\t2025-07-28 17:03:54\n3\tRam Thapa\tram@example.com\tpass\t9803333333\tButwal\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE wishlist (\n\twishlist_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\tadded_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (wishlist_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from wishlist table:\nwishlist_id\tuser_id\tproduct_id\tadded_at\n1\t1\t2\t2025-07-28 17:03:54\n2\t2\t3\t2025-07-28 17:03:54\n3\t3\t1\t2025-07-28 17:03:54\n*/"), ('AIMessage', "SELECT * FROM users WHERE name = 'Arun Pandey' LIMIT 1;"), ('ToolMessage', "[(1, 'Arun Pandey', 'arun@example.com', 'pass', '9801111111', 'Kathmandu', '2025-07-28 17:03:54')]")]
2025-07-29 13:53:58 [INFO    ] SQLAgent: Invoking LLM for result interpretation...
2025-07-29 13:54:19 [INFO    ] SQLAgent: LLM interpretation completed in 20.66 seconds.
2025-07-29 13:54:19 [DEBUG   ] SQLAgent: Interpretation result: Answer: The details of Arun Pandey are as follows:
- User ID: 1
- Name: Arun Pandey
- Email: arun@example.com
- Password: pass
- Phone: 9801111111
- Address: Kathmandu
- Created at: 2025-07-28 17:03:54
2025-07-29 13:54:19 [INFO    ] SQLAgent: Final answer generated. Ending workflow.
2025-07-29 13:54:19 [INFO    ] SQLAgent: Agent workflow completed in 28.18 seconds.
2025-07-29 13:54:19 [DEBUG   ] SQLAgent: Extracting final SQL query from message history.
2025-07-29 13:54:19 [DEBUG   ] SQLAgent: Extracted SQL query: SELECT * FROM users WHERE name = 'Arun Pandey' LIMIT 1;
2025-07-29 13:54:19 [INFO    ] SQLAgent: Final SQL Query: SELECT * FROM users WHERE name = 'Arun Pandey' LIMIT 1;
2025-07-29 13:54:19 [INFO    ] SQLAgent: Final Answer: Answer: The details of Arun Pandey are as follows:
- User ID: 1
- Name: Arun Pandey
- Email: arun@example.com
- Password: pass
- Phone: 9801111111
- Address: Kathmandu
- Created at: 2025-07-28 17:03:54
2025-07-29 13:54:19 [INFO    ] SQLAgent: ===  Query Execution Completed ===
2025-07-29 13:56:45 [INFO    ] SQLAgent: === Starting SQL Agent  ===
2025-07-29 13:56:45 [INFO    ] SQLAgent: Initializing SQLAgent...
2025-07-29 13:56:45 [DEBUG   ] SQLAgent: Input - db_path: D:\ML(ExtraClass Project)\AGENT AI\SQL-Sage-Intelligent-DB-Agent-with-Gemini-LangGraph\database\final_ecommerce.db, model_name: llama-3.1-8b-instant
2025-07-29 13:56:45 [DEBUG   ] SQLAgent: Connection string created: sqlite:///D:\ML(ExtraClass Project)\AGENT AI\SQL-Sage-Intelligent-DB-Agent-with-Gemini-LangGraph\database\final_ecommerce.db
2025-07-29 13:56:45 [INFO    ] SQLAgent: Connected to SQLite database.
2025-07-29 13:56:45 [DEBUG   ] SQLAgent: Database usable tables: ['cart', 'cart_items', 'categories', 'coupons', 'order_coupons', 'order_items', 'orders', 'payments', 'product_images', 'products', 'reviews', 'shipping', 'users', 'wishlist']
2025-07-29 13:56:46 [INFO    ] SQLAgent: Groq LLM initialized with model: llama-3.1-8b-instant
2025-07-29 13:56:46 [INFO    ] SQLAgent: Starting _setup_tools...
2025-07-29 13:56:46 [DEBUG   ] SQLAgent: Fetched 4 tools from toolkit: ['sql_db_query', 'sql_db_schema', 'sql_db_list_tables', 'sql_db_query_checker']
2025-07-29 13:56:46 [DEBUG   ] SQLAgent: Tool 'sql_db_list_tables' loaded.
2025-07-29 13:56:46 [DEBUG   ] SQLAgent: Tool 'sql_db_schema' loaded.
2025-07-29 13:56:46 [INFO    ] SQLAgent: All tools setup completed.
2025-07-29 13:56:46 [INFO    ] SQLAgent: Setting up prompts...
2025-07-29 13:56:46 [DEBUG   ] SQLAgent: Query generation prompt created.
2025-07-29 13:56:46 [DEBUG   ] SQLAgent: Interpretation prompt created.
2025-07-29 13:56:46 [INFO    ] SQLAgent: Prompts setup completed.
2025-07-29 13:56:46 [INFO    ] SQLAgent: Building LangGraph workflow...
2025-07-29 13:56:46 [DEBUG   ] SQLAgent: Node 'first_tool_call' added to graph.
2025-07-29 13:56:46 [DEBUG   ] SQLAgent: Creating tool node with fallback for tools: ['sql_db_list_tables']
2025-07-29 13:56:46 [DEBUG   ] SQLAgent: Tool node with fallback created.
2025-07-29 13:56:46 [DEBUG   ] SQLAgent: Node 'list_tables_tool' added to graph.
2025-07-29 13:56:46 [DEBUG   ] SQLAgent: Node 'model_get_schema' added to graph.
2025-07-29 13:56:46 [DEBUG   ] SQLAgent: Creating tool node with fallback for tools: ['sql_db_schema']
2025-07-29 13:56:46 [DEBUG   ] SQLAgent: Tool node with fallback created.
2025-07-29 13:56:46 [DEBUG   ] SQLAgent: Node 'get_schema_tool' added to graph.
2025-07-29 13:56:46 [DEBUG   ] SQLAgent: Node 'query_gen' added to graph.
2025-07-29 13:56:46 [DEBUG   ] SQLAgent: Node 'execute_query' added to graph.
2025-07-29 13:56:46 [DEBUG   ] SQLAgent: Node 'interpret_results' added to graph.
2025-07-29 13:56:46 [DEBUG   ] SQLAgent: Edge: START → first_tool_call
2025-07-29 13:56:46 [DEBUG   ] SQLAgent: Edge: first_tool_call → list_tables_tool
2025-07-29 13:56:46 [DEBUG   ] SQLAgent: Edge: list_tables_tool → model_get_schema
2025-07-29 13:56:46 [DEBUG   ] SQLAgent: Edge: model_get_schema → get_schema_tool
2025-07-29 13:56:46 [DEBUG   ] SQLAgent: Edge: get_schema_tool → query_gen
2025-07-29 13:56:46 [DEBUG   ] SQLAgent: Conditional edges added from 'query_gen'
2025-07-29 13:56:46 [DEBUG   ] SQLAgent: Conditional edges added from 'execute_query'
2025-07-29 13:56:46 [DEBUG   ] SQLAgent: Conditional edges added from 'interpret_results'
2025-07-29 13:56:46 [INFO    ] SQLAgent: LangGraph workflow compiled successfully.
2025-07-29 13:56:46 [INFO    ] SQLAgent: SQLAgent initialization completed.
2025-07-29 13:56:46 [INFO    ] SQLAgent: SQLAgent instance created.
2025-07-29 13:56:46 [INFO    ] SQLAgent: === Query Execution ===
2025-07-29 13:56:46 [INFO    ] SQLAgent: Received query: 'Hi Good Morning?'
2025-07-29 13:56:46 [INFO    ] SQLAgent: Setting recursion limit: 15
2025-07-29 13:56:46 [INFO    ] SQLAgent: Invoking agent workflow...
2025-07-29 13:56:46 [INFO    ] SQLAgent: Executing first_tool_call: requesting list of tables.
2025-07-29 13:56:46 [DEBUG   ] SQLAgent: first_tool_call response prepared.
2025-07-29 13:56:46 [INFO    ] SQLAgent: Calling model_get_schema to fetch schema.
2025-07-29 13:56:46 [DEBUG   ] SQLAgent: Current message history: [('HumanMessage', 'Hi Good Morning?'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist')]
2025-07-29 13:56:47 [INFO    ] SQLAgent: LLM schema request took 0.84 seconds.
2025-07-29 13:56:47 [DEBUG   ] SQLAgent: Schema response: content='' additional_kwargs={'tool_calls': [{'id': 'gxrdcea8a', 'function': {'arguments': '{"table_names":"cart,cart_items,categories,coupons,order_coupons,order_items,orders,payments,product_images,products,reviews,shipping,users,wishlist"}', 'name': 'sql_db_schema'}, 'type': 'function'}]} response_metadata={'token_usage': {'completion_tokens': 50, 'prompt_tokens': 391, 'total_tokens': 441, 'completion_time': 0.177156503, 'prompt_time': 0.45129242, 'queue_time': 0.055038798, 'total_time': 0.628448923}, 'model_name': 'llama-3.1-8b-instant', 'system_fingerprint': 'fp_c523237e5d', 'service_tier': 'on_demand', 'finish_reason': 'tool_calls', 'logprobs': None} id='run--86801d1c-85ac-492e-8769-ab4f064a5238-0' tool_calls=[{'name': 'sql_db_schema', 'args': {'table_names': 'cart,cart_items,categories,coupons,order_coupons,order_items,orders,payments,product_images,products,reviews,shipping,users,wishlist'}, 'id': 'gxrdcea8a', 'type': 'tool_call'}] usage_metadata={'input_tokens': 391, 'output_tokens': 50, 'total_tokens': 441}
2025-07-29 13:56:47 [INFO    ] SQLAgent: Entering query_gen_node to generate SQL query.
2025-07-29 13:56:47 [DEBUG   ] SQLAgent: Message history: [('HumanMessage', 'Hi Good Morning?'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist'), ('AIMessage', ''), ('ToolMessage', "\nCREATE TABLE cart (\n\tcart_id INTEGER, \n\tuser_id INTEGER, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (cart_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from cart table:\ncart_id\tuser_id\tcreated_at\n1\t1\t2025-07-28 17:03:54\n2\t2\t2025-07-28 17:03:54\n3\t3\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE cart_items (\n\tcart_item_id INTEGER, \n\tcart_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tPRIMARY KEY (cart_item_id), \n\tFOREIGN KEY(cart_id) REFERENCES cart (cart_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from cart_items table:\ncart_item_id\tcart_id\tproduct_id\tquantity\n1\t1\t3\t1\n2\t2\t4\t2\n3\t3\t2\t1\n*/\n\n\nCREATE TABLE categories (\n\tcategory_id INTEGER, \n\tcategory_name TEXT NOT NULL, \n\tdescription TEXT, \n\tPRIMARY KEY (category_id)\n)\n\n/*\n3 rows from categories table:\ncategory_id\tcategory_name\tdescription\n1\tMobiles\tSmartphones and accessories\n2\tClothing\tMen and Women fashion\n3\tComputers\tLaptops and peripherals\n*/\n\n\nCREATE TABLE coupons (\n\tcoupon_id INTEGER, \n\tcode TEXT, \n\tdiscount_percent INTEGER, \n\tvalid_from DATE, \n\tvalid_to DATE, \n\tPRIMARY KEY (coupon_id), \n\tUNIQUE (code), \n\tCHECK (discount_percent BETWEEN 1 AND 100)\n)\n\n/*\n3 rows from coupons table:\ncoupon_id\tcode\tdiscount_percent\tvalid_from\tvalid_to\n1\tNEPAL10\t10\t2025-07-01\t2025-12-31\n2\tFEST20\t20\t2025-07-01\t2025-12-31\n3\tWELCOME5\t5\t2025-07-01\t2025-12-31\n*/\n\n\nCREATE TABLE order_coupons (\n\tid INTEGER, \n\torder_id INTEGER, \n\tcoupon_id INTEGER, \n\tPRIMARY KEY (id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(coupon_id) REFERENCES coupons (coupon_id)\n)\n\n/*\n3 rows from order_coupons table:\nid\torder_id\tcoupon_id\n1\t1\t1\n2\t2\t2\n3\t3\t3\n*/\n\n\nCREATE TABLE order_items (\n\torder_item_id INTEGER, \n\torder_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tprice REAL NOT NULL, \n\tPRIMARY KEY (order_item_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from order_items table:\norder_item_id\torder_id\tproduct_id\tquantity\tprice\n1\t1\t1\t1\t550.0\n2\t2\t3\t1\t120.0\n3\t3\t4\t1\t1300.0\n*/\n\n\nCREATE TABLE orders (\n\torder_id INTEGER, \n\tuser_id INTEGER, \n\torder_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tstatus TEXT DEFAULT 'Pending', \n\ttotal_amount REAL, \n\tPRIMARY KEY (order_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from orders table:\norder_id\tuser_id\torder_date\tstatus\ttotal_amount\n1\t1\t2025-07-28 17:03:54\tPending\t550.0\n2\t2\t2025-07-28 17:03:54\tPending\t120.0\n3\t3\t2025-07-28 17:03:54\tPending\t1300.0\n*/\n\n\nCREATE TABLE payments (\n\tpayment_id INTEGER, \n\torder_id INTEGER, \n\tpayment_method TEXT, \n\tamount REAL, \n\tpayment_status TEXT DEFAULT 'Pending', \n\tpaid_at TIMESTAMP, \n\tPRIMARY KEY (payment_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from payments table:\npayment_id\torder_id\tpayment_method\tamount\tpayment_status\tpaid_at\n1\t1\tEsewa\t550.0\tCompleted\tNone\n2\t2\tKhalti\t120.0\tCompleted\tNone\n3\t3\tCash\t1300.0\tPending\tNone\n*/\n\n\nCREATE TABLE product_images (\n\timage_id INTEGER, \n\tproduct_id INTEGER, \n\timage_url TEXT NOT NULL, \n\tPRIMARY KEY (image_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from product_images table:\nimage_id\tproduct_id\timage_url\n1\t1\tsamsung.jpg\n2\t2\tiphone.jpg\n3\t3\tcoat.jpg\n*/\n\n\nCREATE TABLE products (\n\tproduct_id INTEGER, \n\tcategory_id INTEGER, \n\tname TEXT NOT NULL, \n\tdescription TEXT, \n\tprice REAL NOT NULL, \n\tstock INTEGER DEFAULT 0, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (product_id), \n\tFOREIGN KEY(category_id) REFERENCES categories (category_id)\n)\n\n/*\n3 rows from products table:\nproduct_id\tcategory_id\tname\tdescription\tprice\tstock\tcreated_at\n1\t1\tSamsung Galaxy A55\t5G smartphone with AMOLED display\t550.0\t50\t2025-07-28 17:03:54\n2\t1\tiPhone 15\tLatest Apple flagship smartphone\t999.0\t30\t2025-07-28 17:03:54\n3\t2\tWinter Coat\tStylish warm coat for winter\t120.0\t25\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE reviews (\n\treview_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\trating INTEGER, \n\tcomment TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (review_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id), \n\tCHECK (rating BETWEEN 1 AND 5)\n)\n\n/*\n3 rows from reviews table:\nreview_id\tuser_id\tproduct_id\trating\tcomment\tcreated_at\n1\t1\t1\t5\tExcellent smartphone!\t2025-07-28 17:03:54\n2\t2\t3\t4\tCoat is warm and stylish.\t2025-07-28 17:03:54\n3\t3\t4\t5\tLaptop is powerful.\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE shipping (\n\tshipping_id INTEGER, \n\torder_id INTEGER, \n\ttracking_number TEXT, \n\tshipping_address TEXT, \n\tshipping_date TIMESTAMP, \n\tdelivery_date TIMESTAMP, \n\tstatus TEXT DEFAULT 'Preparing', \n\tPRIMARY KEY (shipping_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from shipping table:\nshipping_id\torder_id\ttracking_number\tshipping_address\tshipping_date\tdelivery_date\tstatus\n1\t1\tTRK001\tKathmandu\t2025-07-01 00:00:00\t2025-07-05 00:00:00\tDelivered\n2\t2\tTRK002\tPokhara\t2025-07-02 00:00:00\t2025-07-06 00:00:00\tDelivered\n3\t3\tTRK003\tButwal\t2025-07-03 00:00:00\t2025-07-08 00:00:00\tShipped\n*/\n\n\nCREATE TABLE users (\n\tuser_id INTEGER, \n\tname TEXT, \n\temail TEXT, \n\tpassword TEXT, \n\tphone TEXT, \n\taddress TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (user_id), \n\tUNIQUE (email)\n)\n\n/*\n3 rows from users table:\nuser_id\tname\temail\tpassword\tphone\taddress\tcreated_at\n1\tArun Pandey\tarun@example.com\tpass\t9801111111\tKathmandu\t2025-07-28 17:03:54\n2\tSita Sharma\tsita@example.com\tpass\t9802222222\tPokhara\t2025-07-28 17:03:54\n3\tRam Thapa\tram@example.com\tpass\t9803333333\tButwal\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE wishlist (\n\twishlist_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\tadded_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (wishlist_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from wishlist table:\nwishlist_id\tuser_id\tproduct_id\tadded_at\n1\t1\t2\t2025-07-28 17:03:54\n2\t2\t3\t2025-07-28 17:03:54\n3\t3\t1\t2025-07-28 17:03:54\n*/")]
2025-07-29 13:56:47 [DEBUG   ] SQLAgent: Query attempt #1
2025-07-29 13:56:47 [INFO    ] SQLAgent: Invoking LLM for SQL generation...
2025-07-29 13:56:48 [INFO    ] SQLAgent: LLM generated SQL in 0.70 seconds.
2025-07-29 13:56:48 [DEBUG   ] SQLAgent: LLM response content: SELECT * FROM orders LIMIT 10;
2025-07-29 13:56:48 [INFO    ] SQLAgent: Valid SELECT query detected. Proceeding to execute_query.
2025-07-29 13:56:48 [INFO    ] SQLAgent: Executing SQL query from last message.
2025-07-29 13:56:48 [DEBUG   ] SQLAgent: Last message type: AIMessage, content: SELECT * FROM orders LIMIT 10;
2025-07-29 13:56:48 [DEBUG   ] SQLAgent: Raw SQL content: SELECT * FROM orders LIMIT 10;
2025-07-29 13:56:48 [INFO    ] SQLAgent: Extracted SQL query: SELECT * FROM orders LIMIT 10;
2025-07-29 13:56:48 [INFO    ] SQLAgent: Query executed in 0.00 seconds.
2025-07-29 13:56:48 [INFO    ] SQLAgent: Query result: [(1, 1, '2025-07-28 17:03:54', 'Pending', 550.0), (2, 2, '2025-07-28 17:03:54', 'Pending', 120.0), (3, 3, '2025-07-28 17:03:54', 'Pending', 1300.0), (4, 4, '2025-07-28 17:03:54', 'Pending', 12.0), (5,...
2025-07-29 13:56:48 [INFO    ] SQLAgent: Query executed successfully. Proceeding to interpretation.
2025-07-29 13:56:48 [INFO    ] SQLAgent: Interpreting query results into natural language answer.
2025-07-29 13:56:48 [DEBUG   ] SQLAgent: Message history for interpretation: [('HumanMessage', 'Hi Good Morning?'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist'), ('AIMessage', ''), ('ToolMessage', "\nCREATE TABLE cart (\n\tcart_id INTEGER, \n\tuser_id INTEGER, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (cart_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from cart table:\ncart_id\tuser_id\tcreated_at\n1\t1\t2025-07-28 17:03:54\n2\t2\t2025-07-28 17:03:54\n3\t3\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE cart_items (\n\tcart_item_id INTEGER, \n\tcart_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tPRIMARY KEY (cart_item_id), \n\tFOREIGN KEY(cart_id) REFERENCES cart (cart_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from cart_items table:\ncart_item_id\tcart_id\tproduct_id\tquantity\n1\t1\t3\t1\n2\t2\t4\t2\n3\t3\t2\t1\n*/\n\n\nCREATE TABLE categories (\n\tcategory_id INTEGER, \n\tcategory_name TEXT NOT NULL, \n\tdescription TEXT, \n\tPRIMARY KEY (category_id)\n)\n\n/*\n3 rows from categories table:\ncategory_id\tcategory_name\tdescription\n1\tMobiles\tSmartphones and accessories\n2\tClothing\tMen and Women fashion\n3\tComputers\tLaptops and peripherals\n*/\n\n\nCREATE TABLE coupons (\n\tcoupon_id INTEGER, \n\tcode TEXT, \n\tdiscount_percent INTEGER, \n\tvalid_from DATE, \n\tvalid_to DATE, \n\tPRIMARY KEY (coupon_id), \n\tUNIQUE (code), \n\tCHECK (discount_percent BETWEEN 1 AND 100)\n)\n\n/*\n3 rows from coupons table:\ncoupon_id\tcode\tdiscount_percent\tvalid_from\tvalid_to\n1\tNEPAL10\t10\t2025-07-01\t2025-12-31\n2\tFEST20\t20\t2025-07-01\t2025-12-31\n3\tWELCOME5\t5\t2025-07-01\t2025-12-31\n*/\n\n\nCREATE TABLE order_coupons (\n\tid INTEGER, \n\torder_id INTEGER, \n\tcoupon_id INTEGER, \n\tPRIMARY KEY (id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(coupon_id) REFERENCES coupons (coupon_id)\n)\n\n/*\n3 rows from order_coupons table:\nid\torder_id\tcoupon_id\n1\t1\t1\n2\t2\t2\n3\t3\t3\n*/\n\n\nCREATE TABLE order_items (\n\torder_item_id INTEGER, \n\torder_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tprice REAL NOT NULL, \n\tPRIMARY KEY (order_item_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from order_items table:\norder_item_id\torder_id\tproduct_id\tquantity\tprice\n1\t1\t1\t1\t550.0\n2\t2\t3\t1\t120.0\n3\t3\t4\t1\t1300.0\n*/\n\n\nCREATE TABLE orders (\n\torder_id INTEGER, \n\tuser_id INTEGER, \n\torder_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tstatus TEXT DEFAULT 'Pending', \n\ttotal_amount REAL, \n\tPRIMARY KEY (order_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from orders table:\norder_id\tuser_id\torder_date\tstatus\ttotal_amount\n1\t1\t2025-07-28 17:03:54\tPending\t550.0\n2\t2\t2025-07-28 17:03:54\tPending\t120.0\n3\t3\t2025-07-28 17:03:54\tPending\t1300.0\n*/\n\n\nCREATE TABLE payments (\n\tpayment_id INTEGER, \n\torder_id INTEGER, \n\tpayment_method TEXT, \n\tamount REAL, \n\tpayment_status TEXT DEFAULT 'Pending', \n\tpaid_at TIMESTAMP, \n\tPRIMARY KEY (payment_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from payments table:\npayment_id\torder_id\tpayment_method\tamount\tpayment_status\tpaid_at\n1\t1\tEsewa\t550.0\tCompleted\tNone\n2\t2\tKhalti\t120.0\tCompleted\tNone\n3\t3\tCash\t1300.0\tPending\tNone\n*/\n\n\nCREATE TABLE product_images (\n\timage_id INTEGER, \n\tproduct_id INTEGER, \n\timage_url TEXT NOT NULL, \n\tPRIMARY KEY (image_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from product_images table:\nimage_id\tproduct_id\timage_url\n1\t1\tsamsung.jpg\n2\t2\tiphone.jpg\n3\t3\tcoat.jpg\n*/\n\n\nCREATE TABLE products (\n\tproduct_id INTEGER, \n\tcategory_id INTEGER, \n\tname TEXT NOT NULL, \n\tdescription TEXT, \n\tprice REAL NOT NULL, \n\tstock INTEGER DEFAULT 0, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (product_id), \n\tFOREIGN KEY(category_id) REFERENCES categories (category_id)\n)\n\n/*\n3 rows from products table:\nproduct_id\tcategory_id\tname\tdescription\tprice\tstock\tcreated_at\n1\t1\tSamsung Galaxy A55\t5G smartphone with AMOLED display\t550.0\t50\t2025-07-28 17:03:54\n2\t1\tiPhone 15\tLatest Apple flagship smartphone\t999.0\t30\t2025-07-28 17:03:54\n3\t2\tWinter Coat\tStylish warm coat for winter\t120.0\t25\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE reviews (\n\treview_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\trating INTEGER, \n\tcomment TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (review_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id), \n\tCHECK (rating BETWEEN 1 AND 5)\n)\n\n/*\n3 rows from reviews table:\nreview_id\tuser_id\tproduct_id\trating\tcomment\tcreated_at\n1\t1\t1\t5\tExcellent smartphone!\t2025-07-28 17:03:54\n2\t2\t3\t4\tCoat is warm and stylish.\t2025-07-28 17:03:54\n3\t3\t4\t5\tLaptop is powerful.\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE shipping (\n\tshipping_id INTEGER, \n\torder_id INTEGER, \n\ttracking_number TEXT, \n\tshipping_address TEXT, \n\tshipping_date TIMESTAMP, \n\tdelivery_date TIMESTAMP, \n\tstatus TEXT DEFAULT 'Preparing', \n\tPRIMARY KEY (shipping_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from shipping table:\nshipping_id\torder_id\ttracking_number\tshipping_address\tshipping_date\tdelivery_date\tstatus\n1\t1\tTRK001\tKathmandu\t2025-07-01 00:00:00\t2025-07-05 00:00:00\tDelivered\n2\t2\tTRK002\tPokhara\t2025-07-02 00:00:00\t2025-07-06 00:00:00\tDelivered\n3\t3\tTRK003\tButwal\t2025-07-03 00:00:00\t2025-07-08 00:00:00\tShipped\n*/\n\n\nCREATE TABLE users (\n\tuser_id INTEGER, \n\tname TEXT, \n\temail TEXT, \n\tpassword TEXT, \n\tphone TEXT, \n\taddress TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (user_id), \n\tUNIQUE (email)\n)\n\n/*\n3 rows from users table:\nuser_id\tname\temail\tpassword\tphone\taddress\tcreated_at\n1\tArun Pandey\tarun@example.com\tpass\t9801111111\tKathmandu\t2025-07-28 17:03:54\n2\tSita Sharma\tsita@example.com\tpass\t9802222222\tPokhara\t2025-07-28 17:03:54\n3\tRam Thapa\tram@example.com\tpass\t9803333333\tButwal\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE wishlist (\n\twishlist_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\tadded_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (wishlist_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from wishlist table:\nwishlist_id\tuser_id\tproduct_id\tadded_at\n1\t1\t2\t2025-07-28 17:03:54\n2\t2\t3\t2025-07-28 17:03:54\n3\t3\t1\t2025-07-28 17:03:54\n*/"), ('AIMessage', 'SELECT * FROM orders LIMIT 10;'), ('ToolMessage', "[(1, 1, '2025-07-28 17:03:54', 'Pending', 550.0), (2, 2, '2025-07-28 17:03:54', 'Pending', 120.0), (3, 3, '2025-07-28 17:03:54', 'Pending', 1300.0), (4, 4, '2025-07-28 17:03:54', 'Pending', 12.0), (5, 5, '2025-07-28 17:03:54', 'Pending', 45.0), (6, 6, '2025-07-28 17:03:54', 'Pending', 300.0)]")]
2025-07-29 13:56:48 [INFO    ] SQLAgent: Invoking LLM for result interpretation...
2025-07-29 13:56:49 [INFO    ] SQLAgent: LLM interpretation completed in 1.14 seconds.
2025-07-29 13:56:49 [DEBUG   ] SQLAgent: Interpretation result: Answer: The first 10 orders in the database are from users 1, 2, 3, 4, 5, 6, with order IDs 1, 2, 3, 4, 5, 6 respectively. The orders were placed on '2025-07-28 17:03:54' and are all in the 'Pending' status. The total amounts of the orders are 550.0, 120.0, 1300.0, 12.0, 45.0, 300.0 respectively.
2025-07-29 13:56:49 [INFO    ] SQLAgent: Final answer generated. Ending workflow.
2025-07-29 13:56:49 [INFO    ] SQLAgent: Agent workflow completed in 2.72 seconds.
2025-07-29 13:56:49 [DEBUG   ] SQLAgent: Extracting final SQL query from message history.
2025-07-29 13:56:49 [DEBUG   ] SQLAgent: Extracted SQL query: SELECT * FROM orders LIMIT 10;
2025-07-29 13:56:49 [INFO    ] SQLAgent: Final SQL Query: SELECT * FROM orders LIMIT 10;
2025-07-29 13:56:49 [INFO    ] SQLAgent: Final Answer: Answer: The first 10 orders in the database are from users 1, 2, 3, 4, 5, 6, with order IDs 1, 2, 3, 4, 5, 6 respectively. The orders were placed on '2025-07-28 17:03:54' and are all in the 'Pending' status. The total amounts of the orders are 550.0, 120.0, 1300.0, 12.0, 45.0, 300.0 respectively.
2025-07-29 13:56:49 [INFO    ] SQLAgent: ===  Query Execution Completed ===
2025-07-29 14:07:26 [INFO    ] SQLAgent: === SQL Agent Logger Initialized (Console Output Disabled, ALL Log Levels Captured) ===
2025-07-29 14:07:26 [DEBUG   ] SQLAgent: DEBUG level logging enabled - all detailed information will be captured
2025-07-29 14:07:26 [WARNING ] SQLAgent: WARNING level logging enabled - all warnings will be captured
2025-07-29 14:07:26 [ERROR   ] SQLAgent: ERROR level logging enabled - all errors will be captured
2025-07-29 14:07:26 [CRITICAL] SQLAgent: CRITICAL level logging enabled - all critical issues will be captured
2025-07-29 14:07:26 [INFO    ] SQLAgent: === Starting SQL Agent  ===
2025-07-29 14:07:26 [INFO    ] SQLAgent: Initializing SQLAgent...
2025-07-29 14:07:26 [DEBUG   ] SQLAgent: Input - db_path: D:\ML(ExtraClass Project)\AGENT AI\SQL-Sage-Intelligent-DB-Agent-with-Gemini-LangGraph\database\final_ecommerce.db, model_name: llama-3.1-8b-instant
2025-07-29 14:07:26 [DEBUG   ] SQLAgent: Connection string created: sqlite:///D:\ML(ExtraClass Project)\AGENT AI\SQL-Sage-Intelligent-DB-Agent-with-Gemini-LangGraph\database\final_ecommerce.db
2025-07-29 14:07:26 [INFO    ] SQLAgent: Connected to SQLite database.
2025-07-29 14:07:26 [DEBUG   ] SQLAgent: Database usable tables: ['cart', 'cart_items', 'categories', 'coupons', 'order_coupons', 'order_items', 'orders', 'payments', 'product_images', 'products', 'reviews', 'shipping', 'users', 'wishlist']
2025-07-29 14:07:27 [INFO    ] SQLAgent: Groq LLM initialized with model: llama-3.1-8b-instant
2025-07-29 14:07:27 [INFO    ] SQLAgent: Starting _setup_tools...
2025-07-29 14:07:27 [DEBUG   ] SQLAgent: Fetched 4 tools from toolkit: ['sql_db_query', 'sql_db_schema', 'sql_db_list_tables', 'sql_db_query_checker']
2025-07-29 14:07:27 [DEBUG   ] SQLAgent: Tool 'sql_db_list_tables' loaded.
2025-07-29 14:07:27 [DEBUG   ] SQLAgent: Tool 'sql_db_schema' loaded.
2025-07-29 14:07:27 [INFO    ] SQLAgent: All tools setup completed.
2025-07-29 14:07:27 [INFO    ] SQLAgent: Setting up prompts...
2025-07-29 14:07:27 [DEBUG   ] SQLAgent: Query generation prompt created.
2025-07-29 14:07:27 [DEBUG   ] SQLAgent: Interpretation prompt created.
2025-07-29 14:07:27 [INFO    ] SQLAgent: Prompts setup completed.
2025-07-29 14:07:27 [INFO    ] SQLAgent: Building LangGraph workflow...
2025-07-29 14:07:27 [DEBUG   ] SQLAgent: Node 'first_tool_call' added to graph.
2025-07-29 14:07:27 [DEBUG   ] SQLAgent: Creating tool node with fallback for tools: ['sql_db_list_tables']
2025-07-29 14:07:27 [DEBUG   ] SQLAgent: Tool node with fallback created.
2025-07-29 14:07:27 [DEBUG   ] SQLAgent: Node 'list_tables_tool' added to graph.
2025-07-29 14:07:27 [DEBUG   ] SQLAgent: Node 'model_get_schema' added to graph.
2025-07-29 14:07:27 [DEBUG   ] SQLAgent: Creating tool node with fallback for tools: ['sql_db_schema']
2025-07-29 14:07:27 [DEBUG   ] SQLAgent: Tool node with fallback created.
2025-07-29 14:07:27 [DEBUG   ] SQLAgent: Node 'get_schema_tool' added to graph.
2025-07-29 14:07:27 [DEBUG   ] SQLAgent: Node 'query_gen' added to graph.
2025-07-29 14:07:27 [DEBUG   ] SQLAgent: Node 'execute_query' added to graph.
2025-07-29 14:07:27 [DEBUG   ] SQLAgent: Node 'interpret_results' added to graph.
2025-07-29 14:07:27 [DEBUG   ] SQLAgent: Edge: START → first_tool_call
2025-07-29 14:07:27 [DEBUG   ] SQLAgent: Edge: first_tool_call → list_tables_tool
2025-07-29 14:07:27 [DEBUG   ] SQLAgent: Edge: list_tables_tool → model_get_schema
2025-07-29 14:07:27 [DEBUG   ] SQLAgent: Edge: model_get_schema → get_schema_tool
2025-07-29 14:07:27 [DEBUG   ] SQLAgent: Edge: get_schema_tool → query_gen
2025-07-29 14:07:27 [DEBUG   ] SQLAgent: Conditional edges added from 'query_gen'
2025-07-29 14:07:27 [DEBUG   ] SQLAgent: Conditional edges added from 'execute_query'
2025-07-29 14:07:27 [DEBUG   ] SQLAgent: Conditional edges added from 'interpret_results'
2025-07-29 14:07:27 [INFO    ] SQLAgent: LangGraph workflow compiled successfully.
2025-07-29 14:07:27 [INFO    ] SQLAgent: SQLAgent initialization completed.
2025-07-29 14:07:27 [INFO    ] SQLAgent: SQLAgent instance created.
2025-07-29 14:07:27 [INFO    ] SQLAgent: === Query Execution ===
2025-07-29 14:07:27 [INFO    ] SQLAgent: Received query: 'Hi Good Morning?'
2025-07-29 14:07:27 [INFO    ] SQLAgent: Setting recursion limit: 15
2025-07-29 14:07:27 [INFO    ] SQLAgent: Greeting detected. Responding directly.
2025-07-29 14:07:27 [INFO    ] SQLAgent: ===  Query Execution Completed ===
2025-07-29 14:07:45 [INFO    ] SQLAgent: === Starting SQL Agent  ===
2025-07-29 14:07:45 [INFO    ] SQLAgent: Initializing SQLAgent...
2025-07-29 14:07:45 [DEBUG   ] SQLAgent: Input - db_path: D:\ML(ExtraClass Project)\AGENT AI\SQL-Sage-Intelligent-DB-Agent-with-Gemini-LangGraph\database\final_ecommerce.db, model_name: llama-3.1-8b-instant
2025-07-29 14:07:45 [DEBUG   ] SQLAgent: Connection string created: sqlite:///D:\ML(ExtraClass Project)\AGENT AI\SQL-Sage-Intelligent-DB-Agent-with-Gemini-LangGraph\database\final_ecommerce.db
2025-07-29 14:07:45 [INFO    ] SQLAgent: Connected to SQLite database.
2025-07-29 14:07:45 [DEBUG   ] SQLAgent: Database usable tables: ['cart', 'cart_items', 'categories', 'coupons', 'order_coupons', 'order_items', 'orders', 'payments', 'product_images', 'products', 'reviews', 'shipping', 'users', 'wishlist']
2025-07-29 14:07:46 [INFO    ] SQLAgent: Groq LLM initialized with model: llama-3.1-8b-instant
2025-07-29 14:07:46 [INFO    ] SQLAgent: Starting _setup_tools...
2025-07-29 14:07:46 [DEBUG   ] SQLAgent: Fetched 4 tools from toolkit: ['sql_db_query', 'sql_db_schema', 'sql_db_list_tables', 'sql_db_query_checker']
2025-07-29 14:07:46 [DEBUG   ] SQLAgent: Tool 'sql_db_list_tables' loaded.
2025-07-29 14:07:46 [DEBUG   ] SQLAgent: Tool 'sql_db_schema' loaded.
2025-07-29 14:07:46 [INFO    ] SQLAgent: All tools setup completed.
2025-07-29 14:07:46 [INFO    ] SQLAgent: Setting up prompts...
2025-07-29 14:07:46 [DEBUG   ] SQLAgent: Query generation prompt created.
2025-07-29 14:07:46 [DEBUG   ] SQLAgent: Interpretation prompt created.
2025-07-29 14:07:46 [INFO    ] SQLAgent: Prompts setup completed.
2025-07-29 14:07:46 [INFO    ] SQLAgent: Building LangGraph workflow...
2025-07-29 14:07:46 [DEBUG   ] SQLAgent: Node 'first_tool_call' added to graph.
2025-07-29 14:07:46 [DEBUG   ] SQLAgent: Creating tool node with fallback for tools: ['sql_db_list_tables']
2025-07-29 14:07:46 [DEBUG   ] SQLAgent: Tool node with fallback created.
2025-07-29 14:07:46 [DEBUG   ] SQLAgent: Node 'list_tables_tool' added to graph.
2025-07-29 14:07:46 [DEBUG   ] SQLAgent: Node 'model_get_schema' added to graph.
2025-07-29 14:07:46 [DEBUG   ] SQLAgent: Creating tool node with fallback for tools: ['sql_db_schema']
2025-07-29 14:07:46 [DEBUG   ] SQLAgent: Tool node with fallback created.
2025-07-29 14:07:46 [DEBUG   ] SQLAgent: Node 'get_schema_tool' added to graph.
2025-07-29 14:07:46 [DEBUG   ] SQLAgent: Node 'query_gen' added to graph.
2025-07-29 14:07:46 [DEBUG   ] SQLAgent: Node 'execute_query' added to graph.
2025-07-29 14:07:46 [DEBUG   ] SQLAgent: Node 'interpret_results' added to graph.
2025-07-29 14:07:46 [DEBUG   ] SQLAgent: Edge: START → first_tool_call
2025-07-29 14:07:46 [DEBUG   ] SQLAgent: Edge: first_tool_call → list_tables_tool
2025-07-29 14:07:46 [DEBUG   ] SQLAgent: Edge: list_tables_tool → model_get_schema
2025-07-29 14:07:46 [DEBUG   ] SQLAgent: Edge: model_get_schema → get_schema_tool
2025-07-29 14:07:46 [DEBUG   ] SQLAgent: Edge: get_schema_tool → query_gen
2025-07-29 14:07:46 [DEBUG   ] SQLAgent: Conditional edges added from 'query_gen'
2025-07-29 14:07:46 [DEBUG   ] SQLAgent: Conditional edges added from 'execute_query'
2025-07-29 14:07:46 [DEBUG   ] SQLAgent: Conditional edges added from 'interpret_results'
2025-07-29 14:07:46 [INFO    ] SQLAgent: LangGraph workflow compiled successfully.
2025-07-29 14:07:46 [INFO    ] SQLAgent: SQLAgent initialization completed.
2025-07-29 14:07:46 [INFO    ] SQLAgent: SQLAgent instance created.
2025-07-29 14:07:46 [INFO    ] SQLAgent: === Query Execution ===
2025-07-29 14:07:46 [INFO    ] SQLAgent: Received query: 'Hi Good Morning show mw the email of Arun Pandey user?'
2025-07-29 14:07:46 [INFO    ] SQLAgent: Setting recursion limit: 15
2025-07-29 14:07:46 [INFO    ] SQLAgent: Greeting detected. Responding directly.
2025-07-29 14:07:46 [INFO    ] SQLAgent: ===  Query Execution Completed ===
2025-07-29 14:17:39 [INFO    ] SQLAgent: === SQL Agent Logger Initialized (Console Output Disabled, ALL Log Levels Captured) ===
2025-07-29 14:17:39 [DEBUG   ] SQLAgent: DEBUG level logging enabled - all detailed information will be captured
2025-07-29 14:17:39 [WARNING ] SQLAgent: WARNING level logging enabled - all warnings will be captured
2025-07-29 14:17:39 [ERROR   ] SQLAgent: ERROR level logging enabled - all errors will be captured
2025-07-29 14:17:39 [CRITICAL] SQLAgent: CRITICAL level logging enabled - all critical issues will be captured
2025-07-29 14:17:39 [INFO    ] SQLAgent: === Starting SQL Agent  ===
2025-07-29 14:17:39 [INFO    ] SQLAgent: Initializing SQLAgent...
2025-07-29 14:17:39 [DEBUG   ] SQLAgent: Input - db_path: D:\ML(ExtraClass Project)\AGENT AI\SQL-Sage-Intelligent-DB-Agent-with-Gemini-LangGraph\database\final_ecommerce.db, model_name: llama-3.1-8b-instant
2025-07-29 14:17:39 [DEBUG   ] SQLAgent: Connection string created: sqlite:///D:\ML(ExtraClass Project)\AGENT AI\SQL-Sage-Intelligent-DB-Agent-with-Gemini-LangGraph\database\final_ecommerce.db
2025-07-29 14:17:39 [INFO    ] SQLAgent: Connected to SQLite database.
2025-07-29 14:17:39 [DEBUG   ] SQLAgent: Database usable tables: ['cart', 'cart_items', 'categories', 'coupons', 'order_coupons', 'order_items', 'orders', 'payments', 'product_images', 'products', 'reviews', 'shipping', 'users', 'wishlist']
2025-07-29 14:17:40 [INFO    ] SQLAgent: Groq LLM initialized with model: llama-3.1-8b-instant
2025-07-29 14:17:40 [INFO    ] SQLAgent: Starting _setup_tools...
2025-07-29 14:17:40 [DEBUG   ] SQLAgent: Fetched 4 tools from toolkit: ['sql_db_query', 'sql_db_schema', 'sql_db_list_tables', 'sql_db_query_checker']
2025-07-29 14:17:40 [DEBUG   ] SQLAgent: Tool 'sql_db_list_tables' loaded.
2025-07-29 14:17:40 [DEBUG   ] SQLAgent: Tool 'sql_db_schema' loaded.
2025-07-29 14:17:40 [INFO    ] SQLAgent: All tools setup completed.
2025-07-29 14:17:40 [INFO    ] SQLAgent: Setting up prompts...
2025-07-29 14:17:40 [DEBUG   ] SQLAgent: Query generation prompt created.
2025-07-29 14:17:40 [DEBUG   ] SQLAgent: Interpretation prompt created.
2025-07-29 14:17:40 [INFO    ] SQLAgent: Prompts setup completed.
2025-07-29 14:17:40 [DEBUG   ] SQLAgent: Intent classification prompt added.
2025-07-29 14:17:40 [INFO    ] SQLAgent: Building LangGraph workflow...
2025-07-29 14:17:40 [DEBUG   ] SQLAgent: Node 'first_tool_call' added to graph.
2025-07-29 14:17:40 [DEBUG   ] SQLAgent: Creating tool node with fallback for tools: ['sql_db_list_tables']
2025-07-29 14:17:40 [DEBUG   ] SQLAgent: Tool node with fallback created.
2025-07-29 14:17:40 [DEBUG   ] SQLAgent: Node 'list_tables_tool' added to graph.
2025-07-29 14:17:40 [DEBUG   ] SQLAgent: Node 'model_get_schema' added to graph.
2025-07-29 14:17:40 [DEBUG   ] SQLAgent: Creating tool node with fallback for tools: ['sql_db_schema']
2025-07-29 14:17:40 [DEBUG   ] SQLAgent: Tool node with fallback created.
2025-07-29 14:17:40 [DEBUG   ] SQLAgent: Node 'get_schema_tool' added to graph.
2025-07-29 14:17:40 [DEBUG   ] SQLAgent: Node 'query_gen' added to graph.
2025-07-29 14:17:40 [DEBUG   ] SQLAgent: Node 'execute_query' added to graph.
2025-07-29 14:17:40 [DEBUG   ] SQLAgent: Node 'interpret_results' added to graph.
2025-07-29 14:17:40 [DEBUG   ] SQLAgent: Edge: START → first_tool_call
2025-07-29 14:17:40 [DEBUG   ] SQLAgent: Edge: first_tool_call → list_tables_tool
2025-07-29 14:17:40 [DEBUG   ] SQLAgent: Edge: list_tables_tool → model_get_schema
2025-07-29 14:17:40 [DEBUG   ] SQLAgent: Edge: model_get_schema → get_schema_tool
2025-07-29 14:17:40 [DEBUG   ] SQLAgent: Edge: get_schema_tool → query_gen
2025-07-29 14:17:40 [DEBUG   ] SQLAgent: Conditional edges added from 'query_gen'
2025-07-29 14:17:40 [DEBUG   ] SQLAgent: Conditional edges added from 'execute_query'
2025-07-29 14:17:40 [DEBUG   ] SQLAgent: Conditional edges added from 'interpret_results'
2025-07-29 14:17:40 [INFO    ] SQLAgent: LangGraph workflow compiled successfully.
2025-07-29 14:17:40 [INFO    ] SQLAgent: SQLAgent initialization completed.
2025-07-29 14:17:40 [INFO    ] SQLAgent: SQLAgent instance created.
2025-07-29 14:17:40 [INFO    ] SQLAgent: === Query Execution ===
2025-07-29 14:17:40 [INFO    ] SQLAgent: Received query: 'Hi Good Morning show mw the email of Arun Pandey user?'
2025-07-29 14:17:41 [INFO    ] SQLAgent: Intent classification result: 'query'
2025-07-29 14:17:41 [INFO    ] SQLAgent: Setting recursion limit: 15
2025-07-29 14:17:41 [INFO    ] SQLAgent: Invoking agent workflow...
2025-07-29 14:17:41 [INFO    ] SQLAgent: Executing first_tool_call: requesting list of tables.
2025-07-29 14:17:41 [DEBUG   ] SQLAgent: first_tool_call response prepared.
2025-07-29 14:17:41 [INFO    ] SQLAgent: Calling model_get_schema to fetch schema.
2025-07-29 14:17:41 [DEBUG   ] SQLAgent: Current message history: [('HumanMessage', 'Hi Good Morning show mw the email of Arun Pandey user?'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist')]
2025-07-29 14:19:22 [INFO    ] SQLAgent: LLM schema request took 100.96 seconds.
2025-07-29 14:19:22 [DEBUG   ] SQLAgent: Schema response: content='' additional_kwargs={'tool_calls': [{'id': 'jcspxc3ss', 'function': {'arguments': '{"table_names":"users,cart,products,cart_items,orders,order_items,payments,shipping,product_images,product,category,coupons,order_coupons,wishlist,review,categories"}', 'name': 'sql_db_schema'}, 'type': 'function'}]} response_metadata={'token_usage': {'completion_tokens': 54, 'prompt_tokens': 401, 'total_tokens': 455, 'completion_time': 0.09887802, 'prompt_time': 0.023983864, 'queue_time': 0.051849926, 'total_time': 0.122861884}, 'model_name': 'llama-3.1-8b-instant', 'system_fingerprint': 'fp_c523237e5d', 'service_tier': 'on_demand', 'finish_reason': 'tool_calls', 'logprobs': None} id='run--6803ff4a-b551-46c2-b428-f24de8f4b0c7-0' tool_calls=[{'name': 'sql_db_schema', 'args': {'table_names': 'users,cart,products,cart_items,orders,order_items,payments,shipping,product_images,product,category,coupons,order_coupons,wishlist,review,categories'}, 'id': 'jcspxc3ss', 'type': 'tool_call'}] usage_metadata={'input_tokens': 401, 'output_tokens': 54, 'total_tokens': 455}
2025-07-29 14:19:22 [INFO    ] SQLAgent: Entering query_gen_node to generate SQL query.
2025-07-29 14:19:22 [DEBUG   ] SQLAgent: Message history: [('HumanMessage', 'Hi Good Morning show mw the email of Arun Pandey user?'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist'), ('AIMessage', ''), ('ToolMessage', "Error: table_names {'product', 'review', 'category'} not found in database")]
2025-07-29 14:19:22 [DEBUG   ] SQLAgent: Query attempt #1
2025-07-29 14:19:22 [INFO    ] SQLAgent: Invoking LLM for SQL generation...
2025-07-29 14:19:24 [INFO    ] SQLAgent: LLM generated SQL in 1.86 seconds.
2025-07-29 14:19:24 [DEBUG   ] SQLAgent: LLM response content: SELECT email FROM users WHERE name = 'Arun Pandey' LIMIT 1;
2025-07-29 14:19:24 [INFO    ] SQLAgent: Valid SELECT query detected. Proceeding to execute_query.
2025-07-29 14:19:24 [INFO    ] SQLAgent: Executing SQL query from last message.
2025-07-29 14:19:24 [DEBUG   ] SQLAgent: Last message type: AIMessage, content: SELECT email FROM users WHERE name = 'Arun Pandey' LIMIT 1;
2025-07-29 14:19:24 [DEBUG   ] SQLAgent: Raw SQL content: SELECT email FROM users WHERE name = 'Arun Pandey' LIMIT 1;
2025-07-29 14:19:24 [INFO    ] SQLAgent: Extracted SQL query: SELECT email FROM users WHERE name = 'Arun Pandey' LIMIT 1;
2025-07-29 14:19:24 [INFO    ] SQLAgent: Query executed in 0.00 seconds.
2025-07-29 14:19:24 [INFO    ] SQLAgent: Query result: [('arun@example.com',)]
2025-07-29 14:19:24 [INFO    ] SQLAgent: Query executed successfully. Proceeding to interpretation.
2025-07-29 14:19:24 [INFO    ] SQLAgent: Interpreting query results into natural language answer.
2025-07-29 14:19:24 [DEBUG   ] SQLAgent: Message history for interpretation: [('HumanMessage', 'Hi Good Morning show mw the email of Arun Pandey user?'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist'), ('AIMessage', ''), ('ToolMessage', "Error: table_names {'product', 'review', 'category'} not found in database"), ('AIMessage', "SELECT email FROM users WHERE name = 'Arun Pandey' LIMIT 1;"), ('ToolMessage', "[('arun@example.com',)]")]
2025-07-29 14:19:24 [INFO    ] SQLAgent: Invoking LLM for result interpretation...
2025-07-29 14:19:24 [INFO    ] SQLAgent: LLM interpretation completed in 0.21 seconds.
2025-07-29 14:19:24 [DEBUG   ] SQLAgent: Interpretation result: Answer: The email of Arun Pandey is arun@example.com.
2025-07-29 14:19:24 [INFO    ] SQLAgent: Final answer generated. Ending workflow.
2025-07-29 14:19:24 [INFO    ] SQLAgent: Agent workflow completed in 103.04 seconds.
2025-07-29 14:19:24 [DEBUG   ] SQLAgent: Extracting final SQL query from message history.
2025-07-29 14:19:24 [DEBUG   ] SQLAgent: Extracted SQL query: SELECT email FROM users WHERE name = 'Arun Pandey' LIMIT 1;
2025-07-29 14:19:24 [INFO    ] SQLAgent: Final SQL Query: SELECT email FROM users WHERE name = 'Arun Pandey' LIMIT 1;
2025-07-29 14:19:24 [INFO    ] SQLAgent: Final Answer: Answer: The email of Arun Pandey is arun@example.com.
2025-07-29 14:19:24 [INFO    ] SQLAgent: ===  Query Execution Completed ===
2025-07-29 14:20:14 [INFO    ] SQLAgent: === Starting SQL Agent  ===
2025-07-29 14:20:14 [INFO    ] SQLAgent: Initializing SQLAgent...
2025-07-29 14:20:14 [DEBUG   ] SQLAgent: Input - db_path: D:\ML(ExtraClass Project)\AGENT AI\SQL-Sage-Intelligent-DB-Agent-with-Gemini-LangGraph\database\final_ecommerce.db, model_name: llama-3.1-8b-instant
2025-07-29 14:20:14 [DEBUG   ] SQLAgent: Connection string created: sqlite:///D:\ML(ExtraClass Project)\AGENT AI\SQL-Sage-Intelligent-DB-Agent-with-Gemini-LangGraph\database\final_ecommerce.db
2025-07-29 14:20:14 [INFO    ] SQLAgent: Connected to SQLite database.
2025-07-29 14:20:14 [DEBUG   ] SQLAgent: Database usable tables: ['cart', 'cart_items', 'categories', 'coupons', 'order_coupons', 'order_items', 'orders', 'payments', 'product_images', 'products', 'reviews', 'shipping', 'users', 'wishlist']
2025-07-29 14:20:15 [INFO    ] SQLAgent: Groq LLM initialized with model: llama-3.1-8b-instant
2025-07-29 14:20:15 [INFO    ] SQLAgent: Starting _setup_tools...
2025-07-29 14:20:15 [DEBUG   ] SQLAgent: Fetched 4 tools from toolkit: ['sql_db_query', 'sql_db_schema', 'sql_db_list_tables', 'sql_db_query_checker']
2025-07-29 14:20:15 [DEBUG   ] SQLAgent: Tool 'sql_db_list_tables' loaded.
2025-07-29 14:20:15 [DEBUG   ] SQLAgent: Tool 'sql_db_schema' loaded.
2025-07-29 14:20:15 [INFO    ] SQLAgent: All tools setup completed.
2025-07-29 14:20:15 [INFO    ] SQLAgent: Setting up prompts...
2025-07-29 14:20:15 [DEBUG   ] SQLAgent: Query generation prompt created.
2025-07-29 14:20:15 [DEBUG   ] SQLAgent: Interpretation prompt created.
2025-07-29 14:20:15 [INFO    ] SQLAgent: Prompts setup completed.
2025-07-29 14:20:15 [DEBUG   ] SQLAgent: Intent classification prompt added.
2025-07-29 14:20:15 [INFO    ] SQLAgent: Building LangGraph workflow...
2025-07-29 14:20:15 [DEBUG   ] SQLAgent: Node 'first_tool_call' added to graph.
2025-07-29 14:20:15 [DEBUG   ] SQLAgent: Creating tool node with fallback for tools: ['sql_db_list_tables']
2025-07-29 14:20:15 [DEBUG   ] SQLAgent: Tool node with fallback created.
2025-07-29 14:20:15 [DEBUG   ] SQLAgent: Node 'list_tables_tool' added to graph.
2025-07-29 14:20:15 [DEBUG   ] SQLAgent: Node 'model_get_schema' added to graph.
2025-07-29 14:20:15 [DEBUG   ] SQLAgent: Creating tool node with fallback for tools: ['sql_db_schema']
2025-07-29 14:20:15 [DEBUG   ] SQLAgent: Tool node with fallback created.
2025-07-29 14:20:15 [DEBUG   ] SQLAgent: Node 'get_schema_tool' added to graph.
2025-07-29 14:20:15 [DEBUG   ] SQLAgent: Node 'query_gen' added to graph.
2025-07-29 14:20:15 [DEBUG   ] SQLAgent: Node 'execute_query' added to graph.
2025-07-29 14:20:15 [DEBUG   ] SQLAgent: Node 'interpret_results' added to graph.
2025-07-29 14:20:15 [DEBUG   ] SQLAgent: Edge: START → first_tool_call
2025-07-29 14:20:15 [DEBUG   ] SQLAgent: Edge: first_tool_call → list_tables_tool
2025-07-29 14:20:15 [DEBUG   ] SQLAgent: Edge: list_tables_tool → model_get_schema
2025-07-29 14:20:15 [DEBUG   ] SQLAgent: Edge: model_get_schema → get_schema_tool
2025-07-29 14:20:15 [DEBUG   ] SQLAgent: Edge: get_schema_tool → query_gen
2025-07-29 14:20:15 [DEBUG   ] SQLAgent: Conditional edges added from 'query_gen'
2025-07-29 14:20:15 [DEBUG   ] SQLAgent: Conditional edges added from 'execute_query'
2025-07-29 14:20:15 [DEBUG   ] SQLAgent: Conditional edges added from 'interpret_results'
2025-07-29 14:20:15 [INFO    ] SQLAgent: LangGraph workflow compiled successfully.
2025-07-29 14:20:15 [INFO    ] SQLAgent: SQLAgent initialization completed.
2025-07-29 14:20:15 [INFO    ] SQLAgent: SQLAgent instance created.
2025-07-29 14:20:15 [INFO    ] SQLAgent: === Query Execution ===
2025-07-29 14:20:15 [INFO    ] SQLAgent: Received query: 'Hi Good Morning show mw the email of Arun Pandey user?'
2025-07-29 14:20:16 [INFO    ] SQLAgent: Intent classification result: 'query'
2025-07-29 14:20:16 [INFO    ] SQLAgent: Setting recursion limit: 15
2025-07-29 14:20:16 [INFO    ] SQLAgent: Invoking agent workflow...
2025-07-29 14:20:16 [INFO    ] SQLAgent: Executing first_tool_call: requesting list of tables.
2025-07-29 14:20:16 [DEBUG   ] SQLAgent: first_tool_call response prepared.
2025-07-29 14:20:16 [INFO    ] SQLAgent: Calling model_get_schema to fetch schema.
2025-07-29 14:20:16 [DEBUG   ] SQLAgent: Current message history: [('HumanMessage', 'Hi Good Morning show mw the email of Arun Pandey user?'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist')]
2025-07-29 14:23:09 [INFO    ] SQLAgent: === SQL Agent Logger Initialized (Console Output Disabled, ALL Log Levels Captured) ===
2025-07-29 14:23:09 [DEBUG   ] SQLAgent: DEBUG level logging enabled - all detailed information will be captured
2025-07-29 14:23:09 [WARNING ] SQLAgent: WARNING level logging enabled - all warnings will be captured
2025-07-29 14:23:09 [ERROR   ] SQLAgent: ERROR level logging enabled - all errors will be captured
2025-07-29 14:23:09 [CRITICAL] SQLAgent: CRITICAL level logging enabled - all critical issues will be captured
2025-07-29 14:23:09 [INFO    ] SQLAgent: === Starting SQL Agent  ===
2025-07-29 14:23:09 [INFO    ] SQLAgent: Initializing SQLAgent...
2025-07-29 14:23:09 [DEBUG   ] SQLAgent: Input - db_path: D:\ML(ExtraClass Project)\AGENT AI\SQL-Sage-Intelligent-DB-Agent-with-Gemini-LangGraph\database\final_ecommerce.db, model_name: llama-3.1-8b-instant
2025-07-29 14:23:09 [DEBUG   ] SQLAgent: Connection string created: sqlite:///D:\ML(ExtraClass Project)\AGENT AI\SQL-Sage-Intelligent-DB-Agent-with-Gemini-LangGraph\database\final_ecommerce.db
2025-07-29 14:23:09 [INFO    ] SQLAgent: Connected to SQLite database.
2025-07-29 14:23:09 [DEBUG   ] SQLAgent: Database usable tables: ['cart', 'cart_items', 'categories', 'coupons', 'order_coupons', 'order_items', 'orders', 'payments', 'product_images', 'products', 'reviews', 'shipping', 'users', 'wishlist']
2025-07-29 14:23:10 [INFO    ] SQLAgent: Groq LLM initialized with model: llama-3.1-8b-instant
2025-07-29 14:23:10 [INFO    ] SQLAgent: Starting _setup_tools...
2025-07-29 14:23:10 [DEBUG   ] SQLAgent: Fetched 4 tools from toolkit: ['sql_db_query', 'sql_db_schema', 'sql_db_list_tables', 'sql_db_query_checker']
2025-07-29 14:23:10 [DEBUG   ] SQLAgent: Tool 'sql_db_list_tables' loaded.
2025-07-29 14:23:10 [DEBUG   ] SQLAgent: Tool 'sql_db_schema' loaded.
2025-07-29 14:23:10 [INFO    ] SQLAgent: All tools setup completed.
2025-07-29 14:23:10 [INFO    ] SQLAgent: Setting up prompts...
2025-07-29 14:23:10 [DEBUG   ] SQLAgent: Query generation prompt created.
2025-07-29 14:23:10 [DEBUG   ] SQLAgent: Interpretation prompt created.
2025-07-29 14:23:10 [INFO    ] SQLAgent: Prompts setup completed.
2025-07-29 14:23:10 [DEBUG   ] SQLAgent: Intent classification prompt added.
2025-07-29 14:23:10 [INFO    ] SQLAgent: Building LangGraph workflow...
2025-07-29 14:23:10 [DEBUG   ] SQLAgent: Node 'first_tool_call' added to graph.
2025-07-29 14:23:10 [DEBUG   ] SQLAgent: Creating tool node with fallback for tools: ['sql_db_list_tables']
2025-07-29 14:23:10 [DEBUG   ] SQLAgent: Tool node with fallback created.
2025-07-29 14:23:10 [DEBUG   ] SQLAgent: Node 'list_tables_tool' added to graph.
2025-07-29 14:23:10 [DEBUG   ] SQLAgent: Node 'model_get_schema' added to graph.
2025-07-29 14:23:10 [DEBUG   ] SQLAgent: Creating tool node with fallback for tools: ['sql_db_schema']
2025-07-29 14:23:10 [DEBUG   ] SQLAgent: Tool node with fallback created.
2025-07-29 14:23:10 [DEBUG   ] SQLAgent: Node 'get_schema_tool' added to graph.
2025-07-29 14:23:10 [DEBUG   ] SQLAgent: Node 'query_gen' added to graph.
2025-07-29 14:23:10 [DEBUG   ] SQLAgent: Node 'execute_query' added to graph.
2025-07-29 14:23:10 [DEBUG   ] SQLAgent: Node 'interpret_results' added to graph.
2025-07-29 14:23:10 [DEBUG   ] SQLAgent: Edge: START → first_tool_call
2025-07-29 14:23:10 [DEBUG   ] SQLAgent: Edge: first_tool_call → list_tables_tool
2025-07-29 14:23:10 [DEBUG   ] SQLAgent: Edge: list_tables_tool → model_get_schema
2025-07-29 14:23:10 [DEBUG   ] SQLAgent: Edge: model_get_schema → get_schema_tool
2025-07-29 14:23:10 [DEBUG   ] SQLAgent: Edge: get_schema_tool → query_gen
2025-07-29 14:23:10 [DEBUG   ] SQLAgent: Conditional edges added from 'query_gen'
2025-07-29 14:23:10 [DEBUG   ] SQLAgent: Conditional edges added from 'execute_query'
2025-07-29 14:23:10 [DEBUG   ] SQLAgent: Conditional edges added from 'interpret_results'
2025-07-29 14:23:10 [INFO    ] SQLAgent: LangGraph workflow compiled successfully.
2025-07-29 14:23:10 [INFO    ] SQLAgent: SQLAgent initialization completed.
2025-07-29 14:23:10 [INFO    ] SQLAgent: SQLAgent instance created.
2025-07-29 14:23:10 [INFO    ] SQLAgent: === Query Execution ===
2025-07-29 14:23:10 [INFO    ] SQLAgent: Received query: 'Hi Good Morning show mw the email of Arun Pandey user?'
2025-07-29 14:23:10 [INFO    ] SQLAgent: Intent classification result: 'query'
2025-07-29 14:23:10 [INFO    ] SQLAgent: Setting recursion limit: 15
2025-07-29 14:23:10 [INFO    ] SQLAgent: Invoking agent workflow...
2025-07-29 14:23:10 [INFO    ] SQLAgent: Executing first_tool_call: requesting list of tables.
2025-07-29 14:23:10 [DEBUG   ] SQLAgent: first_tool_call response prepared.
2025-07-29 14:23:11 [INFO    ] SQLAgent: Calling model_get_schema to fetch schema.
2025-07-29 14:23:11 [DEBUG   ] SQLAgent: Current message history: [('HumanMessage', 'Hi Good Morning show mw the email of Arun Pandey user?'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist')]
2025-07-29 14:23:11 [INFO    ] SQLAgent: LLM schema request took 0.26 seconds.
2025-07-29 14:23:11 [DEBUG   ] SQLAgent: Schema response: content='' additional_kwargs={'tool_calls': [{'id': 'kh1b5rsn5', 'function': {'arguments': '{"table_names":"users,cart,products,cart_items,orders,order_items,payments,shipping,product_images,product,category,coupons,order_coupons,wishlist,review,categories"}', 'name': 'sql_db_schema'}, 'type': 'function'}]} response_metadata={'token_usage': {'completion_tokens': 54, 'prompt_tokens': 401, 'total_tokens': 455, 'completion_time': 0.110296081, 'prompt_time': 0.030197813, 'queue_time': 0.051577214999999996, 'total_time': 0.140493894}, 'model_name': 'llama-3.1-8b-instant', 'system_fingerprint': 'fp_c523237e5d', 'service_tier': 'on_demand', 'finish_reason': 'tool_calls', 'logprobs': None} id='run--66c65610-eca1-4da3-9ca6-000a65bd0df2-0' tool_calls=[{'name': 'sql_db_schema', 'args': {'table_names': 'users,cart,products,cart_items,orders,order_items,payments,shipping,product_images,product,category,coupons,order_coupons,wishlist,review,categories'}, 'id': 'kh1b5rsn5', 'type': 'tool_call'}] usage_metadata={'input_tokens': 401, 'output_tokens': 54, 'total_tokens': 455}
2025-07-29 14:23:11 [INFO    ] SQLAgent: Entering query_gen_node to generate SQL query.
2025-07-29 14:23:11 [DEBUG   ] SQLAgent: Message history: [('HumanMessage', 'Hi Good Morning show mw the email of Arun Pandey user?'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist'), ('AIMessage', ''), ('ToolMessage', "Error: table_names {'product', 'category', 'review'} not found in database")]
2025-07-29 14:23:11 [DEBUG   ] SQLAgent: Query attempt #1
2025-07-29 14:23:11 [INFO    ] SQLAgent: Invoking LLM for SQL generation...
2025-07-29 14:23:11 [INFO    ] SQLAgent: LLM generated SQL in 0.17 seconds.
2025-07-29 14:23:11 [DEBUG   ] SQLAgent: LLM response content: SELECT email FROM users WHERE name = 'Arun Pandey' LIMIT 1;
2025-07-29 14:23:11 [INFO    ] SQLAgent: Valid SELECT query detected. Proceeding to execute_query.
2025-07-29 14:23:11 [INFO    ] SQLAgent: Executing SQL query from last message.
2025-07-29 14:23:11 [DEBUG   ] SQLAgent: Last message type: AIMessage, content: SELECT email FROM users WHERE name = 'Arun Pandey' LIMIT 1;
2025-07-29 14:23:11 [DEBUG   ] SQLAgent: Raw SQL content: SELECT email FROM users WHERE name = 'Arun Pandey' LIMIT 1;
2025-07-29 14:23:11 [INFO    ] SQLAgent: Extracted SQL query: SELECT email FROM users WHERE name = 'Arun Pandey' LIMIT 1;
2025-07-29 14:23:11 [INFO    ] SQLAgent: Query executed in 0.00 seconds.
2025-07-29 14:23:11 [INFO    ] SQLAgent: Query result: [('arun@example.com',)]
2025-07-29 14:23:11 [INFO    ] SQLAgent: Query executed successfully. Proceeding to interpretation.
2025-07-29 14:23:11 [INFO    ] SQLAgent: Interpreting query results into natural language answer.
2025-07-29 14:23:11 [DEBUG   ] SQLAgent: Message history for interpretation: [('HumanMessage', 'Hi Good Morning show mw the email of Arun Pandey user?'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist'), ('AIMessage', ''), ('ToolMessage', "Error: table_names {'product', 'category', 'review'} not found in database"), ('AIMessage', "SELECT email FROM users WHERE name = 'Arun Pandey' LIMIT 1;"), ('ToolMessage', "[('arun@example.com',)]")]
2025-07-29 14:23:11 [INFO    ] SQLAgent: Invoking LLM for result interpretation...
2025-07-29 14:23:12 [INFO    ] SQLAgent: LLM interpretation completed in 0.83 seconds.
2025-07-29 14:23:12 [DEBUG   ] SQLAgent: Interpretation result: Answer: The email of Arun Pandey is arun@example.com.
2025-07-29 14:23:12 [INFO    ] SQLAgent: Final answer generated. Ending workflow.
2025-07-29 14:23:12 [INFO    ] SQLAgent: Agent workflow completed in 1.35 seconds.
2025-07-29 14:23:12 [DEBUG   ] SQLAgent: Extracting final SQL query from message history.
2025-07-29 14:23:12 [DEBUG   ] SQLAgent: Extracted SQL query: SELECT email FROM users WHERE name = 'Arun Pandey' LIMIT 1;
2025-07-29 14:23:12 [INFO    ] SQLAgent: Final SQL Query: SELECT email FROM users WHERE name = 'Arun Pandey' LIMIT 1;
2025-07-29 14:23:12 [INFO    ] SQLAgent: Final Answer: Answer: The email of Arun Pandey is arun@example.com.
2025-07-29 14:23:12 [INFO    ] SQLAgent: ===  Query Execution Completed ===
2025-07-29 14:23:21 [INFO    ] SQLAgent: === Starting SQL Agent  ===
2025-07-29 14:23:21 [INFO    ] SQLAgent: Initializing SQLAgent...
2025-07-29 14:23:21 [DEBUG   ] SQLAgent: Input - db_path: D:\ML(ExtraClass Project)\AGENT AI\SQL-Sage-Intelligent-DB-Agent-with-Gemini-LangGraph\database\final_ecommerce.db, model_name: llama-3.1-8b-instant
2025-07-29 14:23:21 [DEBUG   ] SQLAgent: Connection string created: sqlite:///D:\ML(ExtraClass Project)\AGENT AI\SQL-Sage-Intelligent-DB-Agent-with-Gemini-LangGraph\database\final_ecommerce.db
2025-07-29 14:23:21 [INFO    ] SQLAgent: Connected to SQLite database.
2025-07-29 14:23:21 [DEBUG   ] SQLAgent: Database usable tables: ['cart', 'cart_items', 'categories', 'coupons', 'order_coupons', 'order_items', 'orders', 'payments', 'product_images', 'products', 'reviews', 'shipping', 'users', 'wishlist']
2025-07-29 14:23:22 [INFO    ] SQLAgent: Groq LLM initialized with model: llama-3.1-8b-instant
2025-07-29 14:23:22 [INFO    ] SQLAgent: Starting _setup_tools...
2025-07-29 14:23:22 [DEBUG   ] SQLAgent: Fetched 4 tools from toolkit: ['sql_db_query', 'sql_db_schema', 'sql_db_list_tables', 'sql_db_query_checker']
2025-07-29 14:23:22 [DEBUG   ] SQLAgent: Tool 'sql_db_list_tables' loaded.
2025-07-29 14:23:22 [DEBUG   ] SQLAgent: Tool 'sql_db_schema' loaded.
2025-07-29 14:23:22 [INFO    ] SQLAgent: All tools setup completed.
2025-07-29 14:23:22 [INFO    ] SQLAgent: Setting up prompts...
2025-07-29 14:23:22 [DEBUG   ] SQLAgent: Query generation prompt created.
2025-07-29 14:23:22 [DEBUG   ] SQLAgent: Interpretation prompt created.
2025-07-29 14:23:22 [INFO    ] SQLAgent: Prompts setup completed.
2025-07-29 14:23:22 [DEBUG   ] SQLAgent: Intent classification prompt added.
2025-07-29 14:23:22 [INFO    ] SQLAgent: Building LangGraph workflow...
2025-07-29 14:23:22 [DEBUG   ] SQLAgent: Node 'first_tool_call' added to graph.
2025-07-29 14:23:22 [DEBUG   ] SQLAgent: Creating tool node with fallback for tools: ['sql_db_list_tables']
2025-07-29 14:23:22 [DEBUG   ] SQLAgent: Tool node with fallback created.
2025-07-29 14:23:22 [DEBUG   ] SQLAgent: Node 'list_tables_tool' added to graph.
2025-07-29 14:23:22 [DEBUG   ] SQLAgent: Node 'model_get_schema' added to graph.
2025-07-29 14:23:22 [DEBUG   ] SQLAgent: Creating tool node with fallback for tools: ['sql_db_schema']
2025-07-29 14:23:22 [DEBUG   ] SQLAgent: Tool node with fallback created.
2025-07-29 14:23:22 [DEBUG   ] SQLAgent: Node 'get_schema_tool' added to graph.
2025-07-29 14:23:22 [DEBUG   ] SQLAgent: Node 'query_gen' added to graph.
2025-07-29 14:23:22 [DEBUG   ] SQLAgent: Node 'execute_query' added to graph.
2025-07-29 14:23:22 [DEBUG   ] SQLAgent: Node 'interpret_results' added to graph.
2025-07-29 14:23:22 [DEBUG   ] SQLAgent: Edge: START → first_tool_call
2025-07-29 14:23:22 [DEBUG   ] SQLAgent: Edge: first_tool_call → list_tables_tool
2025-07-29 14:23:22 [DEBUG   ] SQLAgent: Edge: list_tables_tool → model_get_schema
2025-07-29 14:23:22 [DEBUG   ] SQLAgent: Edge: model_get_schema → get_schema_tool
2025-07-29 14:23:22 [DEBUG   ] SQLAgent: Edge: get_schema_tool → query_gen
2025-07-29 14:23:22 [DEBUG   ] SQLAgent: Conditional edges added from 'query_gen'
2025-07-29 14:23:22 [DEBUG   ] SQLAgent: Conditional edges added from 'execute_query'
2025-07-29 14:23:22 [DEBUG   ] SQLAgent: Conditional edges added from 'interpret_results'
2025-07-29 14:23:22 [INFO    ] SQLAgent: LangGraph workflow compiled successfully.
2025-07-29 14:23:22 [INFO    ] SQLAgent: SQLAgent initialization completed.
2025-07-29 14:23:22 [INFO    ] SQLAgent: SQLAgent instance created.
2025-07-29 14:23:22 [INFO    ] SQLAgent: === Query Execution ===
2025-07-29 14:23:22 [INFO    ] SQLAgent: Received query: 'Hi Good Morning ?'
2025-07-29 14:23:22 [INFO    ] SQLAgent: Intent classification result: 'greeting'
2025-07-29 14:23:22 [INFO    ] SQLAgent: Pure greeting detected via LLM. Responding directly.
2025-07-29 14:23:22 [INFO    ] SQLAgent: ===  Query Execution Completed ===
2025-07-29 14:23:34 [INFO    ] SQLAgent: === Starting SQL Agent  ===
2025-07-29 14:23:34 [INFO    ] SQLAgent: Initializing SQLAgent...
2025-07-29 14:23:34 [DEBUG   ] SQLAgent: Input - db_path: D:\ML(ExtraClass Project)\AGENT AI\SQL-Sage-Intelligent-DB-Agent-with-Gemini-LangGraph\database\final_ecommerce.db, model_name: llama-3.1-8b-instant
2025-07-29 14:23:34 [DEBUG   ] SQLAgent: Connection string created: sqlite:///D:\ML(ExtraClass Project)\AGENT AI\SQL-Sage-Intelligent-DB-Agent-with-Gemini-LangGraph\database\final_ecommerce.db
2025-07-29 14:23:34 [INFO    ] SQLAgent: Connected to SQLite database.
2025-07-29 14:23:34 [DEBUG   ] SQLAgent: Database usable tables: ['cart', 'cart_items', 'categories', 'coupons', 'order_coupons', 'order_items', 'orders', 'payments', 'product_images', 'products', 'reviews', 'shipping', 'users', 'wishlist']
2025-07-29 14:23:35 [INFO    ] SQLAgent: Groq LLM initialized with model: llama-3.1-8b-instant
2025-07-29 14:23:35 [INFO    ] SQLAgent: Starting _setup_tools...
2025-07-29 14:23:35 [DEBUG   ] SQLAgent: Fetched 4 tools from toolkit: ['sql_db_query', 'sql_db_schema', 'sql_db_list_tables', 'sql_db_query_checker']
2025-07-29 14:23:35 [DEBUG   ] SQLAgent: Tool 'sql_db_list_tables' loaded.
2025-07-29 14:23:35 [DEBUG   ] SQLAgent: Tool 'sql_db_schema' loaded.
2025-07-29 14:23:35 [INFO    ] SQLAgent: All tools setup completed.
2025-07-29 14:23:35 [INFO    ] SQLAgent: Setting up prompts...
2025-07-29 14:23:35 [DEBUG   ] SQLAgent: Query generation prompt created.
2025-07-29 14:23:35 [DEBUG   ] SQLAgent: Interpretation prompt created.
2025-07-29 14:23:35 [INFO    ] SQLAgent: Prompts setup completed.
2025-07-29 14:23:35 [DEBUG   ] SQLAgent: Intent classification prompt added.
2025-07-29 14:23:35 [INFO    ] SQLAgent: Building LangGraph workflow...
2025-07-29 14:23:35 [DEBUG   ] SQLAgent: Node 'first_tool_call' added to graph.
2025-07-29 14:23:35 [DEBUG   ] SQLAgent: Creating tool node with fallback for tools: ['sql_db_list_tables']
2025-07-29 14:23:35 [DEBUG   ] SQLAgent: Tool node with fallback created.
2025-07-29 14:23:35 [DEBUG   ] SQLAgent: Node 'list_tables_tool' added to graph.
2025-07-29 14:23:35 [DEBUG   ] SQLAgent: Node 'model_get_schema' added to graph.
2025-07-29 14:23:35 [DEBUG   ] SQLAgent: Creating tool node with fallback for tools: ['sql_db_schema']
2025-07-29 14:23:35 [DEBUG   ] SQLAgent: Tool node with fallback created.
2025-07-29 14:23:35 [DEBUG   ] SQLAgent: Node 'get_schema_tool' added to graph.
2025-07-29 14:23:35 [DEBUG   ] SQLAgent: Node 'query_gen' added to graph.
2025-07-29 14:23:35 [DEBUG   ] SQLAgent: Node 'execute_query' added to graph.
2025-07-29 14:23:35 [DEBUG   ] SQLAgent: Node 'interpret_results' added to graph.
2025-07-29 14:23:35 [DEBUG   ] SQLAgent: Edge: START → first_tool_call
2025-07-29 14:23:35 [DEBUG   ] SQLAgent: Edge: first_tool_call → list_tables_tool
2025-07-29 14:23:35 [DEBUG   ] SQLAgent: Edge: list_tables_tool → model_get_schema
2025-07-29 14:23:35 [DEBUG   ] SQLAgent: Edge: model_get_schema → get_schema_tool
2025-07-29 14:23:35 [DEBUG   ] SQLAgent: Edge: get_schema_tool → query_gen
2025-07-29 14:23:35 [DEBUG   ] SQLAgent: Conditional edges added from 'query_gen'
2025-07-29 14:23:35 [DEBUG   ] SQLAgent: Conditional edges added from 'execute_query'
2025-07-29 14:23:35 [DEBUG   ] SQLAgent: Conditional edges added from 'interpret_results'
2025-07-29 14:23:35 [INFO    ] SQLAgent: LangGraph workflow compiled successfully.
2025-07-29 14:23:35 [INFO    ] SQLAgent: SQLAgent initialization completed.
2025-07-29 14:23:35 [INFO    ] SQLAgent: SQLAgent instance created.
2025-07-29 14:23:35 [INFO    ] SQLAgent: === Query Execution ===
2025-07-29 14:23:35 [INFO    ] SQLAgent: Received query: 'what is computer ?'
2025-07-29 14:23:35 [INFO    ] SQLAgent: Intent classification result: 'query'
2025-07-29 14:23:35 [INFO    ] SQLAgent: Setting recursion limit: 15
2025-07-29 14:23:35 [INFO    ] SQLAgent: Invoking agent workflow...
2025-07-29 14:23:35 [INFO    ] SQLAgent: Executing first_tool_call: requesting list of tables.
2025-07-29 14:23:35 [DEBUG   ] SQLAgent: first_tool_call response prepared.
2025-07-29 14:23:35 [INFO    ] SQLAgent: Calling model_get_schema to fetch schema.
2025-07-29 14:23:35 [DEBUG   ] SQLAgent: Current message history: [('HumanMessage', 'what is computer ?'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist')]
2025-07-29 14:23:36 [CRITICAL] SQLAgent: CRITICAL: Unexpected exception in query execution - An error occurred: Error code: 400 - {'error': {'message': "tool call validation failed: attempted to call tool 'brave_search' which was not request.tools", 'type': 'invalid_request_error', 'code': 'tool_use_failed', 'failed_generation': '<function=brave_search>{"query": "what is computer"}</function>'}}
2025-07-29 14:23:36 [INFO    ] SQLAgent: ===  Query Execution Completed ===
2025-07-29 14:25:45 [INFO    ] SQLAgent: === Starting SQL Agent  ===
2025-07-29 14:25:45 [INFO    ] SQLAgent: Initializing SQLAgent...
2025-07-29 14:25:45 [DEBUG   ] SQLAgent: Input - db_path: D:\ML(ExtraClass Project)\AGENT AI\SQL-Sage-Intelligent-DB-Agent-with-Gemini-LangGraph\database\final_ecommerce.db, model_name: llama-3.1-8b-instant
2025-07-29 14:25:45 [DEBUG   ] SQLAgent: Connection string created: sqlite:///D:\ML(ExtraClass Project)\AGENT AI\SQL-Sage-Intelligent-DB-Agent-with-Gemini-LangGraph\database\final_ecommerce.db
2025-07-29 14:25:45 [INFO    ] SQLAgent: Connected to SQLite database.
2025-07-29 14:25:45 [DEBUG   ] SQLAgent: Database usable tables: ['cart', 'cart_items', 'categories', 'coupons', 'order_coupons', 'order_items', 'orders', 'payments', 'product_images', 'products', 'reviews', 'shipping', 'users', 'wishlist']
2025-07-29 14:25:46 [INFO    ] SQLAgent: Groq LLM initialized with model: llama-3.1-8b-instant
2025-07-29 14:25:46 [INFO    ] SQLAgent: Starting _setup_tools...
2025-07-29 14:25:46 [DEBUG   ] SQLAgent: Fetched 4 tools from toolkit: ['sql_db_query', 'sql_db_schema', 'sql_db_list_tables', 'sql_db_query_checker']
2025-07-29 14:25:46 [DEBUG   ] SQLAgent: Tool 'sql_db_list_tables' loaded.
2025-07-29 14:25:46 [DEBUG   ] SQLAgent: Tool 'sql_db_schema' loaded.
2025-07-29 14:25:46 [INFO    ] SQLAgent: All tools setup completed.
2025-07-29 14:25:46 [INFO    ] SQLAgent: Setting up prompts...
2025-07-29 14:25:46 [DEBUG   ] SQLAgent: Query generation prompt created.
2025-07-29 14:25:46 [DEBUG   ] SQLAgent: Interpretation prompt created.
2025-07-29 14:25:46 [INFO    ] SQLAgent: Prompts setup completed.
2025-07-29 14:25:46 [DEBUG   ] SQLAgent: Intent classification prompt added.
2025-07-29 14:25:46 [INFO    ] SQLAgent: Building LangGraph workflow...
2025-07-29 14:25:46 [DEBUG   ] SQLAgent: Node 'first_tool_call' added to graph.
2025-07-29 14:25:46 [DEBUG   ] SQLAgent: Creating tool node with fallback for tools: ['sql_db_list_tables']
2025-07-29 14:25:46 [DEBUG   ] SQLAgent: Tool node with fallback created.
2025-07-29 14:25:46 [DEBUG   ] SQLAgent: Node 'list_tables_tool' added to graph.
2025-07-29 14:25:46 [DEBUG   ] SQLAgent: Node 'model_get_schema' added to graph.
2025-07-29 14:25:46 [DEBUG   ] SQLAgent: Creating tool node with fallback for tools: ['sql_db_schema']
2025-07-29 14:25:46 [DEBUG   ] SQLAgent: Tool node with fallback created.
2025-07-29 14:25:46 [DEBUG   ] SQLAgent: Node 'get_schema_tool' added to graph.
2025-07-29 14:25:46 [DEBUG   ] SQLAgent: Node 'query_gen' added to graph.
2025-07-29 14:25:46 [DEBUG   ] SQLAgent: Node 'execute_query' added to graph.
2025-07-29 14:25:46 [DEBUG   ] SQLAgent: Node 'interpret_results' added to graph.
2025-07-29 14:25:46 [DEBUG   ] SQLAgent: Edge: START → first_tool_call
2025-07-29 14:25:46 [DEBUG   ] SQLAgent: Edge: first_tool_call → list_tables_tool
2025-07-29 14:25:46 [DEBUG   ] SQLAgent: Edge: list_tables_tool → model_get_schema
2025-07-29 14:25:46 [DEBUG   ] SQLAgent: Edge: model_get_schema → get_schema_tool
2025-07-29 14:25:46 [DEBUG   ] SQLAgent: Edge: get_schema_tool → query_gen
2025-07-29 14:25:46 [DEBUG   ] SQLAgent: Conditional edges added from 'query_gen'
2025-07-29 14:25:46 [DEBUG   ] SQLAgent: Conditional edges added from 'execute_query'
2025-07-29 14:25:46 [DEBUG   ] SQLAgent: Conditional edges added from 'interpret_results'
2025-07-29 14:25:46 [INFO    ] SQLAgent: LangGraph workflow compiled successfully.
2025-07-29 14:25:46 [INFO    ] SQLAgent: SQLAgent initialization completed.
2025-07-29 14:25:46 [INFO    ] SQLAgent: SQLAgent instance created.
2025-07-29 14:25:46 [INFO    ] SQLAgent: === Query Execution ===
2025-07-29 14:25:46 [INFO    ] SQLAgent: Received query: 'change the email of Arun Pandey to arunpandey@gmail.com ?'
2025-07-29 14:25:47 [INFO    ] SQLAgent: Intent classification result: 'query'
2025-07-29 14:25:47 [INFO    ] SQLAgent: Setting recursion limit: 15
2025-07-29 14:25:47 [INFO    ] SQLAgent: Invoking agent workflow...
2025-07-29 14:25:47 [INFO    ] SQLAgent: Executing first_tool_call: requesting list of tables.
2025-07-29 14:25:47 [DEBUG   ] SQLAgent: first_tool_call response prepared.
2025-07-29 14:25:47 [INFO    ] SQLAgent: Calling model_get_schema to fetch schema.
2025-07-29 14:25:47 [DEBUG   ] SQLAgent: Current message history: [('HumanMessage', 'change the email of Arun Pandey to arunpandey@gmail.com ?'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist')]
2025-07-29 14:25:47 [CRITICAL] SQLAgent: CRITICAL: Unexpected exception in query execution - An error occurred: Error code: 400 - {'error': {'message': "Failed to call a function. Please adjust your prompt. See 'failed_generation' for more details.", 'type': 'invalid_request_error', 'code': 'tool_use_failed', 'failed_generation': '<function=sql_db_update>{\'table_name\': \'users\', \'where_clause\': "email = \'arunpandey@example.com\'", \'update_clause\': "email = \'arunpandey@gmail.com\'"}</function>'}}
2025-07-29 14:25:47 [INFO    ] SQLAgent: ===  Query Execution Completed ===
2025-07-29 14:26:02 [INFO    ] SQLAgent: === Starting SQL Agent  ===
2025-07-29 14:26:02 [INFO    ] SQLAgent: Initializing SQLAgent...
2025-07-29 14:26:02 [DEBUG   ] SQLAgent: Input - db_path: D:\ML(ExtraClass Project)\AGENT AI\SQL-Sage-Intelligent-DB-Agent-with-Gemini-LangGraph\database\final_ecommerce.db, model_name: llama-3.1-8b-instant
2025-07-29 14:26:02 [DEBUG   ] SQLAgent: Connection string created: sqlite:///D:\ML(ExtraClass Project)\AGENT AI\SQL-Sage-Intelligent-DB-Agent-with-Gemini-LangGraph\database\final_ecommerce.db
2025-07-29 14:26:02 [INFO    ] SQLAgent: Connected to SQLite database.
2025-07-29 14:26:02 [DEBUG   ] SQLAgent: Database usable tables: ['cart', 'cart_items', 'categories', 'coupons', 'order_coupons', 'order_items', 'orders', 'payments', 'product_images', 'products', 'reviews', 'shipping', 'users', 'wishlist']
2025-07-29 14:26:03 [INFO    ] SQLAgent: Groq LLM initialized with model: llama-3.1-8b-instant
2025-07-29 14:26:03 [INFO    ] SQLAgent: Starting _setup_tools...
2025-07-29 14:26:03 [DEBUG   ] SQLAgent: Fetched 4 tools from toolkit: ['sql_db_query', 'sql_db_schema', 'sql_db_list_tables', 'sql_db_query_checker']
2025-07-29 14:26:03 [DEBUG   ] SQLAgent: Tool 'sql_db_list_tables' loaded.
2025-07-29 14:26:03 [DEBUG   ] SQLAgent: Tool 'sql_db_schema' loaded.
2025-07-29 14:26:03 [INFO    ] SQLAgent: All tools setup completed.
2025-07-29 14:26:03 [INFO    ] SQLAgent: Setting up prompts...
2025-07-29 14:26:03 [DEBUG   ] SQLAgent: Query generation prompt created.
2025-07-29 14:26:03 [DEBUG   ] SQLAgent: Interpretation prompt created.
2025-07-29 14:26:03 [INFO    ] SQLAgent: Prompts setup completed.
2025-07-29 14:26:03 [DEBUG   ] SQLAgent: Intent classification prompt added.
2025-07-29 14:26:03 [INFO    ] SQLAgent: Building LangGraph workflow...
2025-07-29 14:26:03 [DEBUG   ] SQLAgent: Node 'first_tool_call' added to graph.
2025-07-29 14:26:03 [DEBUG   ] SQLAgent: Creating tool node with fallback for tools: ['sql_db_list_tables']
2025-07-29 14:26:03 [DEBUG   ] SQLAgent: Tool node with fallback created.
2025-07-29 14:26:03 [DEBUG   ] SQLAgent: Node 'list_tables_tool' added to graph.
2025-07-29 14:26:03 [DEBUG   ] SQLAgent: Node 'model_get_schema' added to graph.
2025-07-29 14:26:03 [DEBUG   ] SQLAgent: Creating tool node with fallback for tools: ['sql_db_schema']
2025-07-29 14:26:03 [DEBUG   ] SQLAgent: Tool node with fallback created.
2025-07-29 14:26:03 [DEBUG   ] SQLAgent: Node 'get_schema_tool' added to graph.
2025-07-29 14:26:03 [DEBUG   ] SQLAgent: Node 'query_gen' added to graph.
2025-07-29 14:26:03 [DEBUG   ] SQLAgent: Node 'execute_query' added to graph.
2025-07-29 14:26:03 [DEBUG   ] SQLAgent: Node 'interpret_results' added to graph.
2025-07-29 14:26:03 [DEBUG   ] SQLAgent: Edge: START → first_tool_call
2025-07-29 14:26:03 [DEBUG   ] SQLAgent: Edge: first_tool_call → list_tables_tool
2025-07-29 14:26:03 [DEBUG   ] SQLAgent: Edge: list_tables_tool → model_get_schema
2025-07-29 14:26:03 [DEBUG   ] SQLAgent: Edge: model_get_schema → get_schema_tool
2025-07-29 14:26:03 [DEBUG   ] SQLAgent: Edge: get_schema_tool → query_gen
2025-07-29 14:26:03 [DEBUG   ] SQLAgent: Conditional edges added from 'query_gen'
2025-07-29 14:26:03 [DEBUG   ] SQLAgent: Conditional edges added from 'execute_query'
2025-07-29 14:26:03 [DEBUG   ] SQLAgent: Conditional edges added from 'interpret_results'
2025-07-29 14:26:03 [INFO    ] SQLAgent: LangGraph workflow compiled successfully.
2025-07-29 14:26:03 [INFO    ] SQLAgent: SQLAgent initialization completed.
2025-07-29 14:26:03 [INFO    ] SQLAgent: SQLAgent instance created.
2025-07-29 14:26:03 [INFO    ] SQLAgent: === Query Execution ===
2025-07-29 14:26:03 [INFO    ] SQLAgent: Received query: 'update} the email of Arun Pandey to arunpandey@gmail.com ?'
2025-07-29 14:26:03 [INFO    ] SQLAgent: Intent classification result: 'query'
2025-07-29 14:26:03 [INFO    ] SQLAgent: Setting recursion limit: 15
2025-07-29 14:26:03 [INFO    ] SQLAgent: Invoking agent workflow...
2025-07-29 14:26:03 [INFO    ] SQLAgent: Executing first_tool_call: requesting list of tables.
2025-07-29 14:26:03 [DEBUG   ] SQLAgent: first_tool_call response prepared.
2025-07-29 14:26:03 [INFO    ] SQLAgent: Calling model_get_schema to fetch schema.
2025-07-29 14:26:03 [DEBUG   ] SQLAgent: Current message history: [('HumanMessage', 'update} the email of Arun Pandey to arunpandey@gmail.com ?'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist')]
2025-07-29 14:26:06 [CRITICAL] SQLAgent: CRITICAL: Unexpected exception in query execution - An error occurred: Error code: 400 - {'error': {'message': "Failed to call a function. Please adjust your prompt. See 'failed_generation' for more details.", 'type': 'invalid_request_error', 'code': 'tool_use_failed', 'failed_generation': '<function=sql_db_update>{\'table_name\': \'users\', \'where_clause\': \'email = "arunpandey@gmail.com"\', \'update_clause\': \'email = "arunpandey@gmail.com"\'};</function>\n\n<function=sql_db_update>{\'table_name\': \'users\', \'where_clause\': \'email = "arunpandey@gmail.com"\', \'update_clause\': \'email = "arunpandey@gmail.com"\'};</function>\n\n<function=sql_db_update>{\'table_name\': \'users\', \'where_clause\': \'email = "arunpandey@gmail.com"\', \'update_clause\': \'email = "arunpandey@gmail.com"\'};</function>\n\n<function=sql_db_update>{\'table_name\': \'users\', \'where_clause\': \'email = "arunpandey@gmail.com"\', \'update_clause\': \'email = "arunpandey@gmail.com"\'};</function>\n\n<function=sql_db_update>{\'table_name\': \'users\', \'where_clause\': \'email = "arunpandey@gmail.com"\', \'update_clause\': \'email = "arunpandey@gmail.com"\'};</function>\n\n<function=sql_db_update>{\'table_name\': \'users\', \'where_clause\': \'email = "arunpandey@gmail.com"\', \'update_clause\': \'email = "arunpandey@gmail.com"\'};</function>\n\n<function=sql_db_update>{\'table_name\': \'users\', \'where_clause\': \'email = "arunpandey@gmail.com"\', \'update_clause\': \'email = "arunpandey@gmail.com"\'};</function>\n\n<function=sql_db_update>{\'table_name\': \'users\', \'where_clause\': \'email = "arunpandey@gmail.com"\', \'update_clause\': \'email = "arunpandey@gmail.com"\'};</function>\n\n<function=sql_db_update>{\'table_name\': \'users\', \'where_clause\': \'email = "arunpandey@gmail.com"\', \'update_clause\': \'email = "arunpandey@gmail.com"\'};</function>\n\n<function=sql_db_update>{\'table_name\': \'users\', \'where_clause\': \'email = "arunpandey@gmail.com"\', \'update_clause\': \'email = "arunpandey@gmail.com"\'};</function>'}}
2025-07-29 14:26:06 [INFO    ] SQLAgent: ===  Query Execution Completed ===
2025-07-29 14:29:53 [INFO    ] SQLAgent: === Starting SQL Agent  ===
2025-07-29 14:29:53 [INFO    ] SQLAgent: Initializing SQLAgent...
2025-07-29 14:29:53 [DEBUG   ] SQLAgent: Input - db_path: D:\ML(ExtraClass Project)\AGENT AI\SQL-Sage-Intelligent-DB-Agent-with-Gemini-LangGraph\database\final_ecommerce.db, model_name: llama-3.1-8b-instant
2025-07-29 14:29:53 [DEBUG   ] SQLAgent: Connection string created: sqlite:///D:\ML(ExtraClass Project)\AGENT AI\SQL-Sage-Intelligent-DB-Agent-with-Gemini-LangGraph\database\final_ecommerce.db
2025-07-29 14:29:53 [INFO    ] SQLAgent: Connected to SQLite database.
2025-07-29 14:29:53 [DEBUG   ] SQLAgent: Database usable tables: ['cart', 'cart_items', 'categories', 'coupons', 'order_coupons', 'order_items', 'orders', 'payments', 'product_images', 'products', 'reviews', 'shipping', 'users', 'wishlist']
2025-07-29 14:29:54 [INFO    ] SQLAgent: Groq LLM initialized with model: llama-3.1-8b-instant
2025-07-29 14:29:54 [INFO    ] SQLAgent: Starting _setup_tools...
2025-07-29 14:29:54 [DEBUG   ] SQLAgent: Fetched 4 tools from toolkit: ['sql_db_query', 'sql_db_schema', 'sql_db_list_tables', 'sql_db_query_checker']
2025-07-29 14:29:54 [DEBUG   ] SQLAgent: Tool 'sql_db_list_tables' loaded.
2025-07-29 14:29:54 [DEBUG   ] SQLAgent: Tool 'sql_db_schema' loaded.
2025-07-29 14:29:54 [INFO    ] SQLAgent: All tools setup completed.
2025-07-29 14:29:54 [INFO    ] SQLAgent: Setting up prompts...
2025-07-29 14:29:54 [DEBUG   ] SQLAgent: Query generation prompt created.
2025-07-29 14:29:54 [DEBUG   ] SQLAgent: Interpretation prompt created.
2025-07-29 14:29:54 [INFO    ] SQLAgent: Prompts setup completed.
2025-07-29 14:29:54 [DEBUG   ] SQLAgent: Intent classification prompt added.
2025-07-29 14:29:54 [INFO    ] SQLAgent: Building LangGraph workflow...
2025-07-29 14:29:54 [DEBUG   ] SQLAgent: Node 'first_tool_call' added to graph.
2025-07-29 14:29:54 [DEBUG   ] SQLAgent: Creating tool node with fallback for tools: ['sql_db_list_tables']
2025-07-29 14:29:54 [DEBUG   ] SQLAgent: Tool node with fallback created.
2025-07-29 14:29:54 [DEBUG   ] SQLAgent: Node 'list_tables_tool' added to graph.
2025-07-29 14:29:54 [DEBUG   ] SQLAgent: Node 'model_get_schema' added to graph.
2025-07-29 14:29:54 [DEBUG   ] SQLAgent: Creating tool node with fallback for tools: ['sql_db_schema']
2025-07-29 14:29:54 [DEBUG   ] SQLAgent: Tool node with fallback created.
2025-07-29 14:29:54 [DEBUG   ] SQLAgent: Node 'get_schema_tool' added to graph.
2025-07-29 14:29:54 [DEBUG   ] SQLAgent: Node 'query_gen' added to graph.
2025-07-29 14:29:54 [DEBUG   ] SQLAgent: Node 'execute_query' added to graph.
2025-07-29 14:29:54 [DEBUG   ] SQLAgent: Node 'interpret_results' added to graph.
2025-07-29 14:29:54 [DEBUG   ] SQLAgent: Edge: START → first_tool_call
2025-07-29 14:29:54 [DEBUG   ] SQLAgent: Edge: first_tool_call → list_tables_tool
2025-07-29 14:29:54 [DEBUG   ] SQLAgent: Edge: list_tables_tool → model_get_schema
2025-07-29 14:29:54 [DEBUG   ] SQLAgent: Edge: model_get_schema → get_schema_tool
2025-07-29 14:29:54 [DEBUG   ] SQLAgent: Edge: get_schema_tool → query_gen
2025-07-29 14:29:54 [DEBUG   ] SQLAgent: Conditional edges added from 'query_gen'
2025-07-29 14:29:54 [DEBUG   ] SQLAgent: Conditional edges added from 'execute_query'
2025-07-29 14:29:54 [DEBUG   ] SQLAgent: Conditional edges added from 'interpret_results'
2025-07-29 14:29:54 [INFO    ] SQLAgent: LangGraph workflow compiled successfully.
2025-07-29 14:29:54 [INFO    ] SQLAgent: SQLAgent initialization completed.
2025-07-29 14:29:54 [INFO    ] SQLAgent: SQLAgent instance created.
2025-07-29 14:29:54 [INFO    ] SQLAgent: === Query Execution ===
2025-07-29 14:29:54 [INFO    ] SQLAgent: Received query: 'drop the payment table ?'
2025-07-29 14:29:54 [INFO    ] SQLAgent: Intent classification result: 'query'
2025-07-29 14:29:54 [INFO    ] SQLAgent: Setting recursion limit: 15
2025-07-29 14:29:54 [INFO    ] SQLAgent: Invoking agent workflow...
2025-07-29 14:29:54 [INFO    ] SQLAgent: Executing first_tool_call: requesting list of tables.
2025-07-29 14:29:54 [DEBUG   ] SQLAgent: first_tool_call response prepared.
2025-07-29 14:29:54 [INFO    ] SQLAgent: Calling model_get_schema to fetch schema.
2025-07-29 14:29:54 [DEBUG   ] SQLAgent: Current message history: [('HumanMessage', 'drop the payment table ?'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist')]
2025-07-29 14:29:54 [CRITICAL] SQLAgent: CRITICAL: Unexpected exception in query execution - An error occurred: Error code: 400 - {'error': {'message': "Failed to call a function. Please adjust your prompt. See 'failed_generation' for more details.", 'type': 'invalid_request_error', 'code': 'tool_use_failed', 'failed_generation': '<function=sql_db_drop_table>{table_names="payments"}</function>'}}
2025-07-29 14:29:54 [INFO    ] SQLAgent: ===  Query Execution Completed ===
2025-07-29 14:36:12 [INFO    ] SQLAgent: === SQL Agent Logger Initialized (Console Output Disabled, ALL Log Levels Captured) ===
2025-07-29 14:36:12 [DEBUG   ] SQLAgent: DEBUG level logging enabled - all detailed information will be captured
2025-07-29 14:36:12 [WARNING ] SQLAgent: WARNING level logging enabled - all warnings will be captured
2025-07-29 14:36:12 [ERROR   ] SQLAgent: ERROR level logging enabled - all errors will be captured
2025-07-29 14:36:12 [CRITICAL] SQLAgent: CRITICAL level logging enabled - all critical issues will be captured
2025-07-29 14:36:12 [INFO    ] SQLAgent: === Starting SQL Agent  ===
2025-07-29 14:36:12 [INFO    ] SQLAgent: Initializing SQLAgent...
2025-07-29 14:36:12 [DEBUG   ] SQLAgent: Input - db_path: D:\ML(ExtraClass Project)\AGENT AI\SQL-Sage-Intelligent-DB-Agent-with-Gemini-LangGraph\database\final_ecommerce.db, model_name: llama-3.1-8b-instant
2025-07-29 14:36:12 [DEBUG   ] SQLAgent: Connection string created: sqlite:///D:\ML(ExtraClass Project)\AGENT AI\SQL-Sage-Intelligent-DB-Agent-with-Gemini-LangGraph\database\final_ecommerce.db
2025-07-29 14:36:12 [INFO    ] SQLAgent: Connected to SQLite database.
2025-07-29 14:36:12 [DEBUG   ] SQLAgent: Database usable tables: ['cart', 'cart_items', 'categories', 'coupons', 'order_coupons', 'order_items', 'orders', 'payments', 'product_images', 'products', 'reviews', 'shipping', 'users', 'wishlist']
2025-07-29 14:36:13 [INFO    ] SQLAgent: Groq LLM initialized with model: llama-3.1-8b-instant
2025-07-29 14:36:13 [INFO    ] SQLAgent: Starting _setup_tools...
2025-07-29 14:36:13 [DEBUG   ] SQLAgent: Fetched 4 tools from toolkit: ['sql_db_query', 'sql_db_schema', 'sql_db_list_tables', 'sql_db_query_checker']
2025-07-29 14:36:13 [DEBUG   ] SQLAgent: Tool 'sql_db_list_tables' loaded.
2025-07-29 14:36:13 [DEBUG   ] SQLAgent: Tool 'sql_db_schema' loaded.
2025-07-29 14:36:13 [INFO    ] SQLAgent: All tools setup completed.
2025-07-29 14:36:13 [INFO    ] SQLAgent: Setting up prompts...
2025-07-29 14:36:13 [DEBUG   ] SQLAgent: Query generation prompt created.
2025-07-29 14:36:13 [DEBUG   ] SQLAgent: Interpretation prompt created.
2025-07-29 14:36:13 [INFO    ] SQLAgent: Prompts setup completed.
2025-07-29 14:36:13 [DEBUG   ] SQLAgent: Intent classification prompt added.
2025-07-29 14:36:13 [INFO    ] SQLAgent: Building LangGraph workflow...
2025-07-29 14:36:13 [DEBUG   ] SQLAgent: Node 'first_tool_call' added to graph.
2025-07-29 14:36:13 [DEBUG   ] SQLAgent: Creating tool node with fallback for tools: ['sql_db_list_tables']
2025-07-29 14:36:13 [DEBUG   ] SQLAgent: Tool node with fallback created.
2025-07-29 14:36:13 [DEBUG   ] SQLAgent: Node 'list_tables_tool' added to graph.
2025-07-29 14:36:13 [DEBUG   ] SQLAgent: Node 'model_get_schema' added to graph.
2025-07-29 14:36:13 [DEBUG   ] SQLAgent: Creating tool node with fallback for tools: ['sql_db_schema']
2025-07-29 14:36:13 [DEBUG   ] SQLAgent: Tool node with fallback created.
2025-07-29 14:36:13 [DEBUG   ] SQLAgent: Node 'get_schema_tool' added to graph.
2025-07-29 14:36:13 [DEBUG   ] SQLAgent: Node 'query_gen' added to graph.
2025-07-29 14:36:13 [DEBUG   ] SQLAgent: Node 'execute_query' added to graph.
2025-07-29 14:36:13 [DEBUG   ] SQLAgent: Node 'interpret_results' added to graph.
2025-07-29 14:36:13 [DEBUG   ] SQLAgent: Edge: START → first_tool_call
2025-07-29 14:36:13 [DEBUG   ] SQLAgent: Edge: first_tool_call → list_tables_tool
2025-07-29 14:36:13 [DEBUG   ] SQLAgent: Edge: list_tables_tool → model_get_schema
2025-07-29 14:36:13 [DEBUG   ] SQLAgent: Edge: model_get_schema → get_schema_tool
2025-07-29 14:36:13 [DEBUG   ] SQLAgent: Edge: get_schema_tool → query_gen
2025-07-29 14:36:13 [DEBUG   ] SQLAgent: Conditional edges added from 'query_gen'
2025-07-29 14:36:13 [DEBUG   ] SQLAgent: Conditional edges added from 'execute_query'
2025-07-29 14:36:13 [DEBUG   ] SQLAgent: Conditional edges added from 'interpret_results'
2025-07-29 14:36:13 [INFO    ] SQLAgent: LangGraph workflow compiled successfully.
2025-07-29 14:36:13 [INFO    ] SQLAgent: SQLAgent initialization completed.
2025-07-29 14:36:13 [INFO    ] SQLAgent: SQLAgent instance created.
2025-07-29 14:36:13 [INFO    ] SQLAgent: === Query Execution ===
2025-07-29 14:36:13 [INFO    ] SQLAgent: Received query: 'drop the payment table ?'
2025-07-29 14:36:13 [INFO    ] SQLAgent: Intent classification result: 'query'
2025-07-29 14:36:13 [INFO    ] SQLAgent: Setting recursion limit: 15
2025-07-29 14:36:13 [INFO    ] SQLAgent: Invoking agent workflow...
2025-07-29 14:36:13 [INFO    ] SQLAgent: Executing first_tool_call: requesting list of tables.
2025-07-29 14:36:13 [DEBUG   ] SQLAgent: first_tool_call response prepared.
2025-07-29 14:36:13 [INFO    ] SQLAgent: Calling model_get_schema to fetch schema.
2025-07-29 14:36:13 [DEBUG   ] SQLAgent: Current message history: [('HumanMessage', 'drop the payment table ?'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist')]
2025-07-29 14:36:13 [CRITICAL] SQLAgent: CRITICAL: Unexpected exception in query execution - Error code: 400 - {'error': {'message': "Failed to call a function. Please adjust your prompt. See 'failed_generation' for more details.", 'type': 'invalid_request_error', 'code': 'tool_use_failed', 'failed_generation': '<function=sql_db_drop_table>{table_names="payments"}</function>'}}
2025-07-29 14:36:13 [INFO    ] SQLAgent: ===  Query Execution Completed ===
2025-07-29 14:40:00 [INFO    ] SQLAgent: === Starting SQL Agent  ===
2025-07-29 14:40:00 [INFO    ] SQLAgent: Initializing SQLAgent...
2025-07-29 14:40:00 [DEBUG   ] SQLAgent: Input - db_path: D:\ML(ExtraClass Project)\AGENT AI\SQL-Sage-Intelligent-DB-Agent-with-Gemini-LangGraph\database\final_ecommerce.db, model_name: llama-3.1-8b-instant
2025-07-29 14:40:00 [DEBUG   ] SQLAgent: Connection string created: sqlite:///D:\ML(ExtraClass Project)\AGENT AI\SQL-Sage-Intelligent-DB-Agent-with-Gemini-LangGraph\database\final_ecommerce.db
2025-07-29 14:40:01 [INFO    ] SQLAgent: Connected to SQLite database.
2025-07-29 14:40:01 [DEBUG   ] SQLAgent: Database usable tables: ['cart', 'cart_items', 'categories', 'coupons', 'order_coupons', 'order_items', 'orders', 'payments', 'product_images', 'products', 'reviews', 'shipping', 'users', 'wishlist']
2025-07-29 14:40:01 [INFO    ] SQLAgent: Groq LLM initialized with model: llama-3.1-8b-instant
2025-07-29 14:40:01 [INFO    ] SQLAgent: Starting _setup_tools...
2025-07-29 14:40:01 [DEBUG   ] SQLAgent: Fetched 4 tools from toolkit: ['sql_db_query', 'sql_db_schema', 'sql_db_list_tables', 'sql_db_query_checker']
2025-07-29 14:40:01 [DEBUG   ] SQLAgent: Tool 'sql_db_list_tables' loaded.
2025-07-29 14:40:01 [DEBUG   ] SQLAgent: Tool 'sql_db_schema' loaded.
2025-07-29 14:40:01 [INFO    ] SQLAgent: All tools setup completed.
2025-07-29 14:40:01 [INFO    ] SQLAgent: Setting up prompts...
2025-07-29 14:40:01 [DEBUG   ] SQLAgent: Query generation prompt created.
2025-07-29 14:40:01 [DEBUG   ] SQLAgent: Interpretation prompt created.
2025-07-29 14:40:01 [INFO    ] SQLAgent: Prompts setup completed.
2025-07-29 14:40:01 [DEBUG   ] SQLAgent: Intent classification prompt added.
2025-07-29 14:40:01 [INFO    ] SQLAgent: Building LangGraph workflow...
2025-07-29 14:40:01 [DEBUG   ] SQLAgent: Node 'first_tool_call' added to graph.
2025-07-29 14:40:01 [DEBUG   ] SQLAgent: Creating tool node with fallback for tools: ['sql_db_list_tables']
2025-07-29 14:40:01 [DEBUG   ] SQLAgent: Tool node with fallback created.
2025-07-29 14:40:01 [DEBUG   ] SQLAgent: Node 'list_tables_tool' added to graph.
2025-07-29 14:40:01 [DEBUG   ] SQLAgent: Node 'model_get_schema' added to graph.
2025-07-29 14:40:01 [DEBUG   ] SQLAgent: Creating tool node with fallback for tools: ['sql_db_schema']
2025-07-29 14:40:01 [DEBUG   ] SQLAgent: Tool node with fallback created.
2025-07-29 14:40:01 [DEBUG   ] SQLAgent: Node 'get_schema_tool' added to graph.
2025-07-29 14:40:01 [DEBUG   ] SQLAgent: Node 'query_gen' added to graph.
2025-07-29 14:40:01 [DEBUG   ] SQLAgent: Node 'execute_query' added to graph.
2025-07-29 14:40:01 [DEBUG   ] SQLAgent: Node 'interpret_results' added to graph.
2025-07-29 14:40:01 [DEBUG   ] SQLAgent: Edge: START → first_tool_call
2025-07-29 14:40:01 [DEBUG   ] SQLAgent: Edge: first_tool_call → list_tables_tool
2025-07-29 14:40:01 [DEBUG   ] SQLAgent: Edge: list_tables_tool → model_get_schema
2025-07-29 14:40:01 [DEBUG   ] SQLAgent: Edge: model_get_schema → get_schema_tool
2025-07-29 14:40:01 [DEBUG   ] SQLAgent: Edge: get_schema_tool → query_gen
2025-07-29 14:40:01 [DEBUG   ] SQLAgent: Conditional edges added from 'query_gen'
2025-07-29 14:40:01 [DEBUG   ] SQLAgent: Conditional edges added from 'execute_query'
2025-07-29 14:40:01 [DEBUG   ] SQLAgent: Conditional edges added from 'interpret_results'
2025-07-29 14:40:01 [INFO    ] SQLAgent: LangGraph workflow compiled successfully.
2025-07-29 14:40:01 [INFO    ] SQLAgent: SQLAgent initialization completed.
2025-07-29 14:40:01 [INFO    ] SQLAgent: SQLAgent instance created.
2025-07-29 14:40:01 [INFO    ] SQLAgent: === Query Execution ===
2025-07-29 14:40:01 [INFO    ] SQLAgent: Received query: 'Truncate all the tables ?'
2025-07-29 14:40:02 [INFO    ] SQLAgent: Intent classification result: 'query'
2025-07-29 14:40:02 [INFO    ] SQLAgent: Setting recursion limit: 15
2025-07-29 14:40:02 [INFO    ] SQLAgent: Invoking agent workflow...
2025-07-29 14:40:02 [INFO    ] SQLAgent: Executing first_tool_call: requesting list of tables.
2025-07-29 14:40:02 [DEBUG   ] SQLAgent: first_tool_call response prepared.
2025-07-29 14:40:02 [INFO    ] SQLAgent: Calling model_get_schema to fetch schema.
2025-07-29 14:40:02 [DEBUG   ] SQLAgent: Current message history: [('HumanMessage', 'Truncate all the tables ?'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist')]
2025-07-29 14:40:03 [CRITICAL] SQLAgent: CRITICAL: Unexpected exception in query execution - Error code: 400 - {'error': {'message': "tool call validation failed: attempted to call tool 'sql_db_truncate_tables' which was not request.tools", 'type': 'invalid_request_error', 'code': 'tool_use_failed', 'failed_generation': '<function=sql_db_truncate_tables>{"table_names": "cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist"}</function>'}}
2025-07-29 14:40:03 [INFO    ] SQLAgent: ===  Query Execution Completed ===
2025-07-29 14:58:12 [INFO    ] SQLAgent: === Starting SQL Agent  ===
2025-07-29 14:58:12 [INFO    ] SQLAgent: Initializing SQLAgent...
2025-07-29 14:58:12 [DEBUG   ] SQLAgent: Input - db_path: D:\ML(ExtraClass Project)\AGENT AI\SQL-Sage-Intelligent-DB-Agent-with-Gemini-LangGraph\database\final_ecommerce.db, model_name: llama-3.1-8b-instant
2025-07-29 14:58:12 [DEBUG   ] SQLAgent: Connection string created: sqlite:///D:\ML(ExtraClass Project)\AGENT AI\SQL-Sage-Intelligent-DB-Agent-with-Gemini-LangGraph\database\final_ecommerce.db
2025-07-29 14:58:12 [INFO    ] SQLAgent: Connected to SQLite database.
2025-07-29 14:58:12 [DEBUG   ] SQLAgent: Database usable tables: ['cart', 'cart_items', 'categories', 'coupons', 'order_coupons', 'order_items', 'orders', 'payments', 'product_images', 'products', 'reviews', 'shipping', 'users', 'wishlist']
2025-07-29 14:58:13 [INFO    ] SQLAgent: Groq LLM initialized with model: llama-3.1-8b-instant
2025-07-29 14:58:13 [INFO    ] SQLAgent: Starting _setup_tools...
2025-07-29 14:58:13 [DEBUG   ] SQLAgent: Fetched 4 tools from toolkit: ['sql_db_query', 'sql_db_schema', 'sql_db_list_tables', 'sql_db_query_checker']
2025-07-29 14:58:13 [DEBUG   ] SQLAgent: Tool 'sql_db_list_tables' loaded.
2025-07-29 14:58:13 [DEBUG   ] SQLAgent: Tool 'sql_db_schema' loaded.
2025-07-29 14:58:13 [INFO    ] SQLAgent: All tools setup completed.
2025-07-29 14:58:13 [INFO    ] SQLAgent: Setting up prompts...
2025-07-29 14:58:13 [DEBUG   ] SQLAgent: Query generation prompt created.
2025-07-29 14:58:13 [DEBUG   ] SQLAgent: Interpretation prompt created.
2025-07-29 14:58:13 [INFO    ] SQLAgent: Prompts setup completed.
2025-07-29 14:58:13 [DEBUG   ] SQLAgent: Intent classification prompt added.
2025-07-29 14:58:13 [INFO    ] SQLAgent: Building LangGraph workflow...
2025-07-29 14:58:13 [DEBUG   ] SQLAgent: Node 'first_tool_call' added to graph.
2025-07-29 14:58:13 [DEBUG   ] SQLAgent: Creating tool node with fallback for tools: ['sql_db_list_tables']
2025-07-29 14:58:13 [DEBUG   ] SQLAgent: Tool node with fallback created.
2025-07-29 14:58:13 [DEBUG   ] SQLAgent: Node 'list_tables_tool' added to graph.
2025-07-29 14:58:13 [DEBUG   ] SQLAgent: Node 'model_get_schema' added to graph.
2025-07-29 14:58:13 [DEBUG   ] SQLAgent: Creating tool node with fallback for tools: ['sql_db_schema']
2025-07-29 14:58:13 [DEBUG   ] SQLAgent: Tool node with fallback created.
2025-07-29 14:58:13 [DEBUG   ] SQLAgent: Node 'get_schema_tool' added to graph.
2025-07-29 14:58:13 [DEBUG   ] SQLAgent: Node 'query_gen' added to graph.
2025-07-29 14:58:13 [DEBUG   ] SQLAgent: Node 'execute_query' added to graph.
2025-07-29 14:58:13 [DEBUG   ] SQLAgent: Node 'interpret_results' added to graph.
2025-07-29 14:58:13 [DEBUG   ] SQLAgent: Edge: START → first_tool_call
2025-07-29 14:58:13 [DEBUG   ] SQLAgent: Edge: first_tool_call → list_tables_tool
2025-07-29 14:58:13 [DEBUG   ] SQLAgent: Edge: list_tables_tool → model_get_schema
2025-07-29 14:58:13 [DEBUG   ] SQLAgent: Edge: model_get_schema → get_schema_tool
2025-07-29 14:58:13 [DEBUG   ] SQLAgent: Edge: get_schema_tool → query_gen
2025-07-29 14:58:13 [DEBUG   ] SQLAgent: Conditional edges added from 'query_gen'
2025-07-29 14:58:13 [DEBUG   ] SQLAgent: Conditional edges added from 'execute_query'
2025-07-29 14:58:13 [DEBUG   ] SQLAgent: Conditional edges added from 'interpret_results'
2025-07-29 14:58:13 [INFO    ] SQLAgent: LangGraph workflow compiled successfully.
2025-07-29 14:58:13 [INFO    ] SQLAgent: SQLAgent initialization completed.
2025-07-29 14:58:13 [INFO    ] SQLAgent: SQLAgent instance created.
2025-07-29 14:58:13 [INFO    ] SQLAgent: === Query Execution ===
2025-07-29 14:58:13 [INFO    ] SQLAgent: Received query: 'Truncate all the tables ?'
2025-07-29 14:58:13 [INFO    ] SQLAgent: Intent classification result: 'query'
2025-07-29 14:58:13 [INFO    ] SQLAgent: Setting recursion limit: 15
2025-07-29 14:58:13 [INFO    ] SQLAgent: Invoking agent workflow...
2025-07-29 14:58:13 [INFO    ] SQLAgent: Executing first_tool_call: requesting list of tables.
2025-07-29 14:58:13 [DEBUG   ] SQLAgent: first_tool_call response prepared.
2025-07-29 14:58:13 [INFO    ] SQLAgent: Calling model_get_schema to fetch schema.
2025-07-29 14:58:13 [DEBUG   ] SQLAgent: Current message history: [('HumanMessage', 'Truncate all the tables ?'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist')]
2025-07-29 14:58:13 [CRITICAL] SQLAgent: CRITICAL: Unexpected exception in query execution - Error code: 400 - {'error': {'message': "tool call validation failed: attempted to call tool 'sql_db_truncate_tables' which was not request.tools", 'type': 'invalid_request_error', 'code': 'tool_use_failed', 'failed_generation': '<function=sql_db_truncate_tables>{"table_names": "cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist"}</function>'}}
2025-07-29 14:58:13 [INFO    ] SQLAgent: ===  Query Execution Completed ===
2025-07-29 14:58:28 [INFO    ] SQLAgent: === Starting SQL Agent  ===
2025-07-29 14:58:28 [INFO    ] SQLAgent: Initializing SQLAgent...
2025-07-29 14:58:28 [DEBUG   ] SQLAgent: Input - db_path: D:\ML(ExtraClass Project)\AGENT AI\SQL-Sage-Intelligent-DB-Agent-with-Gemini-LangGraph\database\final_ecommerce.db, model_name: llama-3.1-8b-instant
2025-07-29 14:58:28 [DEBUG   ] SQLAgent: Connection string created: sqlite:///D:\ML(ExtraClass Project)\AGENT AI\SQL-Sage-Intelligent-DB-Agent-with-Gemini-LangGraph\database\final_ecommerce.db
2025-07-29 14:58:28 [INFO    ] SQLAgent: Connected to SQLite database.
2025-07-29 14:58:28 [DEBUG   ] SQLAgent: Database usable tables: ['cart', 'cart_items', 'categories', 'coupons', 'order_coupons', 'order_items', 'orders', 'payments', 'product_images', 'products', 'reviews', 'shipping', 'users', 'wishlist']
2025-07-29 14:58:29 [INFO    ] SQLAgent: Groq LLM initialized with model: llama-3.1-8b-instant
2025-07-29 14:58:29 [INFO    ] SQLAgent: Starting _setup_tools...
2025-07-29 14:58:29 [DEBUG   ] SQLAgent: Fetched 4 tools from toolkit: ['sql_db_query', 'sql_db_schema', 'sql_db_list_tables', 'sql_db_query_checker']
2025-07-29 14:58:29 [DEBUG   ] SQLAgent: Tool 'sql_db_list_tables' loaded.
2025-07-29 14:58:29 [DEBUG   ] SQLAgent: Tool 'sql_db_schema' loaded.
2025-07-29 14:58:29 [INFO    ] SQLAgent: All tools setup completed.
2025-07-29 14:58:29 [INFO    ] SQLAgent: Setting up prompts...
2025-07-29 14:58:29 [DEBUG   ] SQLAgent: Query generation prompt created.
2025-07-29 14:58:29 [DEBUG   ] SQLAgent: Interpretation prompt created.
2025-07-29 14:58:29 [INFO    ] SQLAgent: Prompts setup completed.
2025-07-29 14:58:29 [DEBUG   ] SQLAgent: Intent classification prompt added.
2025-07-29 14:58:29 [INFO    ] SQLAgent: Building LangGraph workflow...
2025-07-29 14:58:29 [DEBUG   ] SQLAgent: Node 'first_tool_call' added to graph.
2025-07-29 14:58:29 [DEBUG   ] SQLAgent: Creating tool node with fallback for tools: ['sql_db_list_tables']
2025-07-29 14:58:29 [DEBUG   ] SQLAgent: Tool node with fallback created.
2025-07-29 14:58:29 [DEBUG   ] SQLAgent: Node 'list_tables_tool' added to graph.
2025-07-29 14:58:29 [DEBUG   ] SQLAgent: Node 'model_get_schema' added to graph.
2025-07-29 14:58:29 [DEBUG   ] SQLAgent: Creating tool node with fallback for tools: ['sql_db_schema']
2025-07-29 14:58:29 [DEBUG   ] SQLAgent: Tool node with fallback created.
2025-07-29 14:58:29 [DEBUG   ] SQLAgent: Node 'get_schema_tool' added to graph.
2025-07-29 14:58:29 [DEBUG   ] SQLAgent: Node 'query_gen' added to graph.
2025-07-29 14:58:29 [DEBUG   ] SQLAgent: Node 'execute_query' added to graph.
2025-07-29 14:58:29 [DEBUG   ] SQLAgent: Node 'interpret_results' added to graph.
2025-07-29 14:58:29 [DEBUG   ] SQLAgent: Edge: START → first_tool_call
2025-07-29 14:58:29 [DEBUG   ] SQLAgent: Edge: first_tool_call → list_tables_tool
2025-07-29 14:58:29 [DEBUG   ] SQLAgent: Edge: list_tables_tool → model_get_schema
2025-07-29 14:58:29 [DEBUG   ] SQLAgent: Edge: model_get_schema → get_schema_tool
2025-07-29 14:58:29 [DEBUG   ] SQLAgent: Edge: get_schema_tool → query_gen
2025-07-29 14:58:29 [DEBUG   ] SQLAgent: Conditional edges added from 'query_gen'
2025-07-29 14:58:29 [DEBUG   ] SQLAgent: Conditional edges added from 'execute_query'
2025-07-29 14:58:29 [DEBUG   ] SQLAgent: Conditional edges added from 'interpret_results'
2025-07-29 14:58:29 [INFO    ] SQLAgent: LangGraph workflow compiled successfully.
2025-07-29 14:58:29 [INFO    ] SQLAgent: SQLAgent initialization completed.
2025-07-29 14:58:29 [INFO    ] SQLAgent: SQLAgent instance created.
2025-07-29 14:58:29 [INFO    ] SQLAgent: === Query Execution ===
2025-07-29 14:58:29 [INFO    ] SQLAgent: Received query: 'show me all tables ?'
2025-07-29 14:58:29 [INFO    ] SQLAgent: Intent classification result: 'query'
2025-07-29 14:58:29 [INFO    ] SQLAgent: Setting recursion limit: 15
2025-07-29 14:58:29 [INFO    ] SQLAgent: Invoking agent workflow...
2025-07-29 14:58:29 [INFO    ] SQLAgent: Executing first_tool_call: requesting list of tables.
2025-07-29 14:58:29 [DEBUG   ] SQLAgent: first_tool_call response prepared.
2025-07-29 14:58:29 [INFO    ] SQLAgent: Calling model_get_schema to fetch schema.
2025-07-29 14:58:29 [DEBUG   ] SQLAgent: Current message history: [('HumanMessage', 'show me all tables ?'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist')]
2025-07-29 14:58:30 [INFO    ] SQLAgent: LLM schema request took 0.22 seconds.
2025-07-29 14:58:30 [DEBUG   ] SQLAgent: Schema response: content='' additional_kwargs={'tool_calls': [{'id': 'q495k9ygx', 'function': {'arguments': '{"table_names":"cart,cart_items,categories,coupons,order_coupons,order_items,orders,payments,product_images,products,reviews,shipping,users,wishlist"}', 'name': 'sql_db_schema'}, 'type': 'function'}]} response_metadata={'token_usage': {'completion_tokens': 50, 'prompt_tokens': 392, 'total_tokens': 442, 'completion_time': 0.076131728, 'prompt_time': 0.025524027, 'queue_time': 0.054929602999999994, 'total_time': 0.101655755}, 'model_name': 'llama-3.1-8b-instant', 'system_fingerprint': 'fp_c523237e5d', 'service_tier': 'on_demand', 'finish_reason': 'tool_calls', 'logprobs': None} id='run--fae9d32c-0fef-434c-9d1b-ad3549ac36e7-0' tool_calls=[{'name': 'sql_db_schema', 'args': {'table_names': 'cart,cart_items,categories,coupons,order_coupons,order_items,orders,payments,product_images,products,reviews,shipping,users,wishlist'}, 'id': 'q495k9ygx', 'type': 'tool_call'}] usage_metadata={'input_tokens': 392, 'output_tokens': 50, 'total_tokens': 442}
2025-07-29 14:58:30 [INFO    ] SQLAgent: Entering query_gen_node to generate SQL query.
2025-07-29 14:58:30 [DEBUG   ] SQLAgent: Message history: [('HumanMessage', 'show me all tables ?'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist'), ('AIMessage', ''), ('ToolMessage', "\nCREATE TABLE cart (\n\tcart_id INTEGER, \n\tuser_id INTEGER, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (cart_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from cart table:\ncart_id\tuser_id\tcreated_at\n1\t1\t2025-07-28 17:03:54\n2\t2\t2025-07-28 17:03:54\n3\t3\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE cart_items (\n\tcart_item_id INTEGER, \n\tcart_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tPRIMARY KEY (cart_item_id), \n\tFOREIGN KEY(cart_id) REFERENCES cart (cart_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from cart_items table:\ncart_item_id\tcart_id\tproduct_id\tquantity\n1\t1\t3\t1\n2\t2\t4\t2\n3\t3\t2\t1\n*/\n\n\nCREATE TABLE categories (\n\tcategory_id INTEGER, \n\tcategory_name TEXT NOT NULL, \n\tdescription TEXT, \n\tPRIMARY KEY (category_id)\n)\n\n/*\n3 rows from categories table:\ncategory_id\tcategory_name\tdescription\n1\tMobiles\tSmartphones and accessories\n2\tClothing\tMen and Women fashion\n3\tComputers\tLaptops and peripherals\n*/\n\n\nCREATE TABLE coupons (\n\tcoupon_id INTEGER, \n\tcode TEXT, \n\tdiscount_percent INTEGER, \n\tvalid_from DATE, \n\tvalid_to DATE, \n\tPRIMARY KEY (coupon_id), \n\tUNIQUE (code), \n\tCHECK (discount_percent BETWEEN 1 AND 100)\n)\n\n/*\n3 rows from coupons table:\ncoupon_id\tcode\tdiscount_percent\tvalid_from\tvalid_to\n1\tNEPAL10\t10\t2025-07-01\t2025-12-31\n2\tFEST20\t20\t2025-07-01\t2025-12-31\n3\tWELCOME5\t5\t2025-07-01\t2025-12-31\n*/\n\n\nCREATE TABLE order_coupons (\n\tid INTEGER, \n\torder_id INTEGER, \n\tcoupon_id INTEGER, \n\tPRIMARY KEY (id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(coupon_id) REFERENCES coupons (coupon_id)\n)\n\n/*\n3 rows from order_coupons table:\nid\torder_id\tcoupon_id\n1\t1\t1\n2\t2\t2\n3\t3\t3\n*/\n\n\nCREATE TABLE order_items (\n\torder_item_id INTEGER, \n\torder_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tprice REAL NOT NULL, \n\tPRIMARY KEY (order_item_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from order_items table:\norder_item_id\torder_id\tproduct_id\tquantity\tprice\n1\t1\t1\t1\t550.0\n2\t2\t3\t1\t120.0\n3\t3\t4\t1\t1300.0\n*/\n\n\nCREATE TABLE orders (\n\torder_id INTEGER, \n\tuser_id INTEGER, \n\torder_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tstatus TEXT DEFAULT 'Pending', \n\ttotal_amount REAL, \n\tPRIMARY KEY (order_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from orders table:\norder_id\tuser_id\torder_date\tstatus\ttotal_amount\n1\t1\t2025-07-28 17:03:54\tPending\t550.0\n2\t2\t2025-07-28 17:03:54\tPending\t120.0\n3\t3\t2025-07-28 17:03:54\tPending\t1300.0\n*/\n\n\nCREATE TABLE payments (\n\tpayment_id INTEGER, \n\torder_id INTEGER, \n\tpayment_method TEXT, \n\tamount REAL, \n\tpayment_status TEXT DEFAULT 'Pending', \n\tpaid_at TIMESTAMP, \n\tPRIMARY KEY (payment_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from payments table:\npayment_id\torder_id\tpayment_method\tamount\tpayment_status\tpaid_at\n1\t1\tEsewa\t550.0\tCompleted\tNone\n2\t2\tKhalti\t120.0\tCompleted\tNone\n3\t3\tCash\t1300.0\tPending\tNone\n*/\n\n\nCREATE TABLE product_images (\n\timage_id INTEGER, \n\tproduct_id INTEGER, \n\timage_url TEXT NOT NULL, \n\tPRIMARY KEY (image_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from product_images table:\nimage_id\tproduct_id\timage_url\n1\t1\tsamsung.jpg\n2\t2\tiphone.jpg\n3\t3\tcoat.jpg\n*/\n\n\nCREATE TABLE products (\n\tproduct_id INTEGER, \n\tcategory_id INTEGER, \n\tname TEXT NOT NULL, \n\tdescription TEXT, \n\tprice REAL NOT NULL, \n\tstock INTEGER DEFAULT 0, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (product_id), \n\tFOREIGN KEY(category_id) REFERENCES categories (category_id)\n)\n\n/*\n3 rows from products table:\nproduct_id\tcategory_id\tname\tdescription\tprice\tstock\tcreated_at\n1\t1\tSamsung Galaxy A55\t5G smartphone with AMOLED display\t550.0\t50\t2025-07-28 17:03:54\n2\t1\tiPhone 15\tLatest Apple flagship smartphone\t999.0\t30\t2025-07-28 17:03:54\n3\t2\tWinter Coat\tStylish warm coat for winter\t120.0\t25\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE reviews (\n\treview_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\trating INTEGER, \n\tcomment TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (review_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id), \n\tCHECK (rating BETWEEN 1 AND 5)\n)\n\n/*\n3 rows from reviews table:\nreview_id\tuser_id\tproduct_id\trating\tcomment\tcreated_at\n1\t1\t1\t5\tExcellent smartphone!\t2025-07-28 17:03:54\n2\t2\t3\t4\tCoat is warm and stylish.\t2025-07-28 17:03:54\n3\t3\t4\t5\tLaptop is powerful.\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE shipping (\n\tshipping_id INTEGER, \n\torder_id INTEGER, \n\ttracking_number TEXT, \n\tshipping_address TEXT, \n\tshipping_date TIMESTAMP, \n\tdelivery_date TIMESTAMP, \n\tstatus TEXT DEFAULT 'Preparing', \n\tPRIMARY KEY (shipping_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from shipping table:\nshipping_id\torder_id\ttracking_number\tshipping_address\tshipping_date\tdelivery_date\tstatus\n1\t1\tTRK001\tKathmandu\t2025-07-01 00:00:00\t2025-07-05 00:00:00\tDelivered\n2\t2\tTRK002\tPokhara\t2025-07-02 00:00:00\t2025-07-06 00:00:00\tDelivered\n3\t3\tTRK003\tButwal\t2025-07-03 00:00:00\t2025-07-08 00:00:00\tShipped\n*/\n\n\nCREATE TABLE users (\n\tuser_id INTEGER, \n\tname TEXT, \n\temail TEXT, \n\tpassword TEXT, \n\tphone TEXT, \n\taddress TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (user_id), \n\tUNIQUE (email)\n)\n\n/*\n3 rows from users table:\nuser_id\tname\temail\tpassword\tphone\taddress\tcreated_at\n1\tArun Pandey\tarun@example.com\tpass\t9801111111\tKathmandu\t2025-07-28 17:03:54\n2\tSita Sharma\tsita@example.com\tpass\t9802222222\tPokhara\t2025-07-28 17:03:54\n3\tRam Thapa\tram@example.com\tpass\t9803333333\tButwal\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE wishlist (\n\twishlist_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\tadded_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (wishlist_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from wishlist table:\nwishlist_id\tuser_id\tproduct_id\tadded_at\n1\t1\t2\t2025-07-28 17:03:54\n2\t2\t3\t2025-07-28 17:03:54\n3\t3\t1\t2025-07-28 17:03:54\n*/")]
2025-07-29 14:58:30 [DEBUG   ] SQLAgent: Query attempt #1
2025-07-29 14:58:30 [INFO    ] SQLAgent: Invoking LLM for SQL generation...
2025-07-29 14:58:30 [INFO    ] SQLAgent: LLM generated SQL in 0.64 seconds.
2025-07-29 14:58:30 [DEBUG   ] SQLAgent: LLM response content: SELECT name FROM sqlite_master WHERE type='table';
2025-07-29 14:58:30 [INFO    ] SQLAgent: Valid SELECT query detected. Proceeding to execute_query.
2025-07-29 14:58:30 [INFO    ] SQLAgent: Executing SQL query from last message.
2025-07-29 14:58:30 [DEBUG   ] SQLAgent: Last message type: AIMessage, content: SELECT name FROM sqlite_master WHERE type='table';
2025-07-29 14:58:30 [DEBUG   ] SQLAgent: Raw SQL content: SELECT name FROM sqlite_master WHERE type='table';
2025-07-29 14:58:30 [INFO    ] SQLAgent: Extracted SQL query: SELECT name FROM sqlite_master WHERE type='table';
2025-07-29 14:58:30 [INFO    ] SQLAgent: Query executed in 0.00 seconds.
2025-07-29 14:58:30 [INFO    ] SQLAgent: Query result: [('users',), ('sqlite_sequence',), ('categories',), ('products',), ('product_images',), ('orders',), ('order_items',), ('payments',), ('shipping',), ('reviews',), ('wishlist',), ('cart',), ('cart_item...
2025-07-29 14:58:30 [INFO    ] SQLAgent: Query executed successfully. Proceeding to interpretation.
2025-07-29 14:58:30 [INFO    ] SQLAgent: Interpreting query results into natural language answer.
2025-07-29 14:58:30 [DEBUG   ] SQLAgent: Message history for interpretation: [('HumanMessage', 'show me all tables ?'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist'), ('AIMessage', ''), ('ToolMessage', "\nCREATE TABLE cart (\n\tcart_id INTEGER, \n\tuser_id INTEGER, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (cart_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from cart table:\ncart_id\tuser_id\tcreated_at\n1\t1\t2025-07-28 17:03:54\n2\t2\t2025-07-28 17:03:54\n3\t3\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE cart_items (\n\tcart_item_id INTEGER, \n\tcart_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tPRIMARY KEY (cart_item_id), \n\tFOREIGN KEY(cart_id) REFERENCES cart (cart_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from cart_items table:\ncart_item_id\tcart_id\tproduct_id\tquantity\n1\t1\t3\t1\n2\t2\t4\t2\n3\t3\t2\t1\n*/\n\n\nCREATE TABLE categories (\n\tcategory_id INTEGER, \n\tcategory_name TEXT NOT NULL, \n\tdescription TEXT, \n\tPRIMARY KEY (category_id)\n)\n\n/*\n3 rows from categories table:\ncategory_id\tcategory_name\tdescription\n1\tMobiles\tSmartphones and accessories\n2\tClothing\tMen and Women fashion\n3\tComputers\tLaptops and peripherals\n*/\n\n\nCREATE TABLE coupons (\n\tcoupon_id INTEGER, \n\tcode TEXT, \n\tdiscount_percent INTEGER, \n\tvalid_from DATE, \n\tvalid_to DATE, \n\tPRIMARY KEY (coupon_id), \n\tUNIQUE (code), \n\tCHECK (discount_percent BETWEEN 1 AND 100)\n)\n\n/*\n3 rows from coupons table:\ncoupon_id\tcode\tdiscount_percent\tvalid_from\tvalid_to\n1\tNEPAL10\t10\t2025-07-01\t2025-12-31\n2\tFEST20\t20\t2025-07-01\t2025-12-31\n3\tWELCOME5\t5\t2025-07-01\t2025-12-31\n*/\n\n\nCREATE TABLE order_coupons (\n\tid INTEGER, \n\torder_id INTEGER, \n\tcoupon_id INTEGER, \n\tPRIMARY KEY (id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(coupon_id) REFERENCES coupons (coupon_id)\n)\n\n/*\n3 rows from order_coupons table:\nid\torder_id\tcoupon_id\n1\t1\t1\n2\t2\t2\n3\t3\t3\n*/\n\n\nCREATE TABLE order_items (\n\torder_item_id INTEGER, \n\torder_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tprice REAL NOT NULL, \n\tPRIMARY KEY (order_item_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from order_items table:\norder_item_id\torder_id\tproduct_id\tquantity\tprice\n1\t1\t1\t1\t550.0\n2\t2\t3\t1\t120.0\n3\t3\t4\t1\t1300.0\n*/\n\n\nCREATE TABLE orders (\n\torder_id INTEGER, \n\tuser_id INTEGER, \n\torder_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tstatus TEXT DEFAULT 'Pending', \n\ttotal_amount REAL, \n\tPRIMARY KEY (order_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from orders table:\norder_id\tuser_id\torder_date\tstatus\ttotal_amount\n1\t1\t2025-07-28 17:03:54\tPending\t550.0\n2\t2\t2025-07-28 17:03:54\tPending\t120.0\n3\t3\t2025-07-28 17:03:54\tPending\t1300.0\n*/\n\n\nCREATE TABLE payments (\n\tpayment_id INTEGER, \n\torder_id INTEGER, \n\tpayment_method TEXT, \n\tamount REAL, \n\tpayment_status TEXT DEFAULT 'Pending', \n\tpaid_at TIMESTAMP, \n\tPRIMARY KEY (payment_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from payments table:\npayment_id\torder_id\tpayment_method\tamount\tpayment_status\tpaid_at\n1\t1\tEsewa\t550.0\tCompleted\tNone\n2\t2\tKhalti\t120.0\tCompleted\tNone\n3\t3\tCash\t1300.0\tPending\tNone\n*/\n\n\nCREATE TABLE product_images (\n\timage_id INTEGER, \n\tproduct_id INTEGER, \n\timage_url TEXT NOT NULL, \n\tPRIMARY KEY (image_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from product_images table:\nimage_id\tproduct_id\timage_url\n1\t1\tsamsung.jpg\n2\t2\tiphone.jpg\n3\t3\tcoat.jpg\n*/\n\n\nCREATE TABLE products (\n\tproduct_id INTEGER, \n\tcategory_id INTEGER, \n\tname TEXT NOT NULL, \n\tdescription TEXT, \n\tprice REAL NOT NULL, \n\tstock INTEGER DEFAULT 0, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (product_id), \n\tFOREIGN KEY(category_id) REFERENCES categories (category_id)\n)\n\n/*\n3 rows from products table:\nproduct_id\tcategory_id\tname\tdescription\tprice\tstock\tcreated_at\n1\t1\tSamsung Galaxy A55\t5G smartphone with AMOLED display\t550.0\t50\t2025-07-28 17:03:54\n2\t1\tiPhone 15\tLatest Apple flagship smartphone\t999.0\t30\t2025-07-28 17:03:54\n3\t2\tWinter Coat\tStylish warm coat for winter\t120.0\t25\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE reviews (\n\treview_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\trating INTEGER, \n\tcomment TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (review_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id), \n\tCHECK (rating BETWEEN 1 AND 5)\n)\n\n/*\n3 rows from reviews table:\nreview_id\tuser_id\tproduct_id\trating\tcomment\tcreated_at\n1\t1\t1\t5\tExcellent smartphone!\t2025-07-28 17:03:54\n2\t2\t3\t4\tCoat is warm and stylish.\t2025-07-28 17:03:54\n3\t3\t4\t5\tLaptop is powerful.\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE shipping (\n\tshipping_id INTEGER, \n\torder_id INTEGER, \n\ttracking_number TEXT, \n\tshipping_address TEXT, \n\tshipping_date TIMESTAMP, \n\tdelivery_date TIMESTAMP, \n\tstatus TEXT DEFAULT 'Preparing', \n\tPRIMARY KEY (shipping_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from shipping table:\nshipping_id\torder_id\ttracking_number\tshipping_address\tshipping_date\tdelivery_date\tstatus\n1\t1\tTRK001\tKathmandu\t2025-07-01 00:00:00\t2025-07-05 00:00:00\tDelivered\n2\t2\tTRK002\tPokhara\t2025-07-02 00:00:00\t2025-07-06 00:00:00\tDelivered\n3\t3\tTRK003\tButwal\t2025-07-03 00:00:00\t2025-07-08 00:00:00\tShipped\n*/\n\n\nCREATE TABLE users (\n\tuser_id INTEGER, \n\tname TEXT, \n\temail TEXT, \n\tpassword TEXT, \n\tphone TEXT, \n\taddress TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (user_id), \n\tUNIQUE (email)\n)\n\n/*\n3 rows from users table:\nuser_id\tname\temail\tpassword\tphone\taddress\tcreated_at\n1\tArun Pandey\tarun@example.com\tpass\t9801111111\tKathmandu\t2025-07-28 17:03:54\n2\tSita Sharma\tsita@example.com\tpass\t9802222222\tPokhara\t2025-07-28 17:03:54\n3\tRam Thapa\tram@example.com\tpass\t9803333333\tButwal\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE wishlist (\n\twishlist_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\tadded_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (wishlist_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from wishlist table:\nwishlist_id\tuser_id\tproduct_id\tadded_at\n1\t1\t2\t2025-07-28 17:03:54\n2\t2\t3\t2025-07-28 17:03:54\n3\t3\t1\t2025-07-28 17:03:54\n*/"), ('AIMessage', "SELECT name FROM sqlite_master WHERE type='table';"), ('ToolMessage', "[('users',), ('sqlite_sequence',), ('categories',), ('products',), ('product_images',), ('orders',), ('order_items',), ('payments',), ('shipping',), ('reviews',), ('wishlist',), ('cart',), ('cart_items',), ('coupons',), ('order_coupons',)]")]
2025-07-29 14:58:30 [INFO    ] SQLAgent: Invoking LLM for result interpretation...
2025-07-29 14:58:31 [INFO    ] SQLAgent: LLM interpretation completed in 0.61 seconds.
2025-07-29 14:58:31 [DEBUG   ] SQLAgent: Interpretation result: Answer: The database contains the following tables: users, sqlite_sequence, categories, products, product_images, orders, order_items, payments, shipping, reviews, wishlist, cart, cart_items, coupons, and order_coupons.
2025-07-29 14:58:31 [INFO    ] SQLAgent: Final answer generated. Ending workflow.
2025-07-29 14:58:31 [INFO    ] SQLAgent: Agent workflow completed in 1.51 seconds.
2025-07-29 14:58:31 [DEBUG   ] SQLAgent: Extracting final SQL query from message history.
2025-07-29 14:58:31 [DEBUG   ] SQLAgent: Extracted SQL query: SELECT name FROM sqlite_master WHERE type='table';
2025-07-29 14:58:31 [INFO    ] SQLAgent: Final SQL Query: SELECT name FROM sqlite_master WHERE type='table';
2025-07-29 14:58:31 [INFO    ] SQLAgent: Final Answer: Answer: The database contains the following tables: users, sqlite_sequence, categories, products, product_images, orders, order_items, payments, shipping, reviews, wishlist, cart, cart_items, coupons, and order_coupons.
2025-07-29 14:58:31 [INFO    ] SQLAgent: ===  Query Execution Completed ===
2025-07-29 15:21:29 [INFO    ] SQLAgent: === SQL Agent Logger Initialized (Console Output Disabled, ALL Log Levels Captured) ===
2025-07-29 15:21:29 [DEBUG   ] SQLAgent: DEBUG level logging enabled - all detailed information will be captured
2025-07-29 15:21:29 [WARNING ] SQLAgent: WARNING level logging enabled - all warnings will be captured
2025-07-29 15:21:29 [ERROR   ] SQLAgent: ERROR level logging enabled - all errors will be captured
2025-07-29 15:21:29 [CRITICAL] SQLAgent: CRITICAL level logging enabled - all critical issues will be captured
2025-07-29 15:21:29 [INFO    ] SQLAgent: === Starting SQL Agent  ===
2025-07-29 15:21:29 [INFO    ] SQLAgent: Initializing SQLAgent...
2025-07-29 15:21:29 [DEBUG   ] SQLAgent: Input - db_path: D:\ML(ExtraClass Project)\AGENT AI\SQL-Sage-Intelligent-DB-Agent-with-Gemini-LangGraph\database\final_ecommerce.db, model_name: llama-3.1-8b-instant
2025-07-29 15:21:29 [DEBUG   ] SQLAgent: Connection string created: sqlite:///D:\ML(ExtraClass Project)\AGENT AI\SQL-Sage-Intelligent-DB-Agent-with-Gemini-LangGraph\database\final_ecommerce.db
2025-07-29 15:21:29 [INFO    ] SQLAgent: Connected to SQLite database.
2025-07-29 15:21:29 [DEBUG   ] SQLAgent: Database usable tables: ['cart', 'cart_items', 'categories', 'coupons', 'order_coupons', 'order_items', 'orders', 'payments', 'product_images', 'products', 'reviews', 'shipping', 'users', 'wishlist']
2025-07-29 15:21:30 [INFO    ] SQLAgent: Groq LLM initialized with model: llama-3.1-8b-instant
2025-07-29 15:21:30 [INFO    ] SQLAgent: Starting _setup_tools...
2025-07-29 15:21:30 [DEBUG   ] SQLAgent: Fetched 4 tools from toolkit: ['sql_db_query', 'sql_db_schema', 'sql_db_list_tables', 'sql_db_query_checker']
2025-07-29 15:21:30 [DEBUG   ] SQLAgent: Tool 'sql_db_list_tables' loaded.
2025-07-29 15:21:30 [DEBUG   ] SQLAgent: Tool 'sql_db_schema' loaded.
2025-07-29 15:21:30 [INFO    ] SQLAgent: All tools setup completed.
2025-07-29 15:21:30 [INFO    ] SQLAgent: Setting up prompts...
2025-07-29 15:21:30 [DEBUG   ] SQLAgent: Query generation prompt created.
2025-07-29 15:21:30 [DEBUG   ] SQLAgent: Interpretation prompt created.
2025-07-29 15:21:30 [INFO    ] SQLAgent: Prompts setup completed.
2025-07-29 15:21:30 [DEBUG   ] SQLAgent: Intent classification prompt added.
2025-07-29 15:21:30 [INFO    ] SQLAgent: Building LangGraph workflow...
2025-07-29 15:21:30 [DEBUG   ] SQLAgent: Node 'first_tool_call' added to graph.
2025-07-29 15:21:30 [DEBUG   ] SQLAgent: Creating tool node with fallback for tools: ['sql_db_list_tables']
2025-07-29 15:21:30 [DEBUG   ] SQLAgent: Tool node with fallback created.
2025-07-29 15:21:30 [DEBUG   ] SQLAgent: Node 'list_tables_tool' added to graph.
2025-07-29 15:21:30 [DEBUG   ] SQLAgent: Node 'model_get_schema' added to graph.
2025-07-29 15:21:30 [DEBUG   ] SQLAgent: Creating tool node with fallback for tools: ['sql_db_schema']
2025-07-29 15:21:30 [DEBUG   ] SQLAgent: Tool node with fallback created.
2025-07-29 15:21:30 [DEBUG   ] SQLAgent: Node 'get_schema_tool' added to graph.
2025-07-29 15:21:30 [DEBUG   ] SQLAgent: Node 'query_gen' added to graph.
2025-07-29 15:21:30 [DEBUG   ] SQLAgent: Node 'execute_query' added to graph.
2025-07-29 15:21:30 [DEBUG   ] SQLAgent: Node 'interpret_results' added to graph.
2025-07-29 15:21:30 [DEBUG   ] SQLAgent: Edge: START → first_tool_call
2025-07-29 15:21:30 [DEBUG   ] SQLAgent: Edge: first_tool_call → list_tables_tool
2025-07-29 15:21:30 [DEBUG   ] SQLAgent: Edge: list_tables_tool → model_get_schema
2025-07-29 15:21:30 [DEBUG   ] SQLAgent: Edge: model_get_schema → get_schema_tool
2025-07-29 15:21:30 [DEBUG   ] SQLAgent: Edge: get_schema_tool → query_gen
2025-07-29 15:21:30 [DEBUG   ] SQLAgent: Conditional edges added from 'query_gen'
2025-07-29 15:21:30 [DEBUG   ] SQLAgent: Conditional edges added from 'execute_query'
2025-07-29 15:21:30 [DEBUG   ] SQLAgent: Conditional edges added from 'interpret_results'
2025-07-29 15:21:30 [INFO    ] SQLAgent: LangGraph workflow compiled successfully.
2025-07-29 15:21:30 [INFO    ] SQLAgent: SQLAgent initialization completed.
2025-07-29 15:21:30 [INFO    ] SQLAgent: SQLAgent instance created.
2025-07-29 15:21:30 [INFO    ] SQLAgent: === Query Execution ===
2025-07-29 15:21:30 [INFO    ] SQLAgent: Received query: 'show me all tables ?'
2025-07-29 15:21:30 [INFO    ] SQLAgent: Intent classification result: 'query'
2025-07-29 15:21:30 [INFO    ] SQLAgent: Setting recursion limit: 15
2025-07-29 15:21:30 [INFO    ] SQLAgent: Invoking agent workflow...
2025-07-29 15:21:30 [INFO    ] SQLAgent: Executing first_tool_call: requesting list of tables.
2025-07-29 15:21:30 [DEBUG   ] SQLAgent: first_tool_call response prepared.
2025-07-29 15:21:30 [INFO    ] SQLAgent: Calling model_get_schema to fetch schema.
2025-07-29 15:21:30 [DEBUG   ] SQLAgent: Current message history: [('HumanMessage', 'show me all tables ?'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist')]
2025-07-29 15:21:31 [INFO    ] SQLAgent: LLM schema request took 0.70 seconds.
2025-07-29 15:21:31 [DEBUG   ] SQLAgent: Schema response: content='' additional_kwargs={'tool_calls': [{'id': '78r3tyft7', 'function': {'arguments': '{"table_names":"cart,cart_items,categories,coupons,order_coupons,order_items,orders,payments,product_images,products,reviews,shipping,users,wishlist"}', 'name': 'sql_db_schema'}, 'type': 'function'}]} response_metadata={'token_usage': {'completion_tokens': 50, 'prompt_tokens': 392, 'total_tokens': 442, 'completion_time': 0.066666667, 'prompt_time': 0.455002812, 'queue_time': 0.054539255000000064, 'total_time': 0.521669479}, 'model_name': 'llama-3.1-8b-instant', 'system_fingerprint': 'fp_c523237e5d', 'service_tier': 'on_demand', 'finish_reason': 'tool_calls', 'logprobs': None} id='run--2a5f8231-fd8b-41b7-83ea-32f010caf608-0' tool_calls=[{'name': 'sql_db_schema', 'args': {'table_names': 'cart,cart_items,categories,coupons,order_coupons,order_items,orders,payments,product_images,products,reviews,shipping,users,wishlist'}, 'id': '78r3tyft7', 'type': 'tool_call'}] usage_metadata={'input_tokens': 392, 'output_tokens': 50, 'total_tokens': 442}
2025-07-29 15:21:31 [INFO    ] SQLAgent: Entering query_gen_node to generate SQL query.
2025-07-29 15:21:31 [DEBUG   ] SQLAgent: Message history: [('HumanMessage', 'show me all tables ?'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist'), ('AIMessage', ''), ('ToolMessage', "\nCREATE TABLE cart (\n\tcart_id INTEGER, \n\tuser_id INTEGER, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (cart_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from cart table:\ncart_id\tuser_id\tcreated_at\n1\t1\t2025-07-28 17:03:54\n2\t2\t2025-07-28 17:03:54\n3\t3\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE cart_items (\n\tcart_item_id INTEGER, \n\tcart_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tPRIMARY KEY (cart_item_id), \n\tFOREIGN KEY(cart_id) REFERENCES cart (cart_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from cart_items table:\ncart_item_id\tcart_id\tproduct_id\tquantity\n1\t1\t3\t1\n2\t2\t4\t2\n3\t3\t2\t1\n*/\n\n\nCREATE TABLE categories (\n\tcategory_id INTEGER, \n\tcategory_name TEXT NOT NULL, \n\tdescription TEXT, \n\tPRIMARY KEY (category_id)\n)\n\n/*\n3 rows from categories table:\ncategory_id\tcategory_name\tdescription\n1\tMobiles\tSmartphones and accessories\n2\tClothing\tMen and Women fashion\n3\tComputers\tLaptops and peripherals\n*/\n\n\nCREATE TABLE coupons (\n\tcoupon_id INTEGER, \n\tcode TEXT, \n\tdiscount_percent INTEGER, \n\tvalid_from DATE, \n\tvalid_to DATE, \n\tPRIMARY KEY (coupon_id), \n\tUNIQUE (code), \n\tCHECK (discount_percent BETWEEN 1 AND 100)\n)\n\n/*\n3 rows from coupons table:\ncoupon_id\tcode\tdiscount_percent\tvalid_from\tvalid_to\n1\tNEPAL10\t10\t2025-07-01\t2025-12-31\n2\tFEST20\t20\t2025-07-01\t2025-12-31\n3\tWELCOME5\t5\t2025-07-01\t2025-12-31\n*/\n\n\nCREATE TABLE order_coupons (\n\tid INTEGER, \n\torder_id INTEGER, \n\tcoupon_id INTEGER, \n\tPRIMARY KEY (id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(coupon_id) REFERENCES coupons (coupon_id)\n)\n\n/*\n3 rows from order_coupons table:\nid\torder_id\tcoupon_id\n1\t1\t1\n2\t2\t2\n3\t3\t3\n*/\n\n\nCREATE TABLE order_items (\n\torder_item_id INTEGER, \n\torder_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tprice REAL NOT NULL, \n\tPRIMARY KEY (order_item_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from order_items table:\norder_item_id\torder_id\tproduct_id\tquantity\tprice\n1\t1\t1\t1\t550.0\n2\t2\t3\t1\t120.0\n3\t3\t4\t1\t1300.0\n*/\n\n\nCREATE TABLE orders (\n\torder_id INTEGER, \n\tuser_id INTEGER, \n\torder_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tstatus TEXT DEFAULT 'Pending', \n\ttotal_amount REAL, \n\tPRIMARY KEY (order_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from orders table:\norder_id\tuser_id\torder_date\tstatus\ttotal_amount\n1\t1\t2025-07-28 17:03:54\tPending\t550.0\n2\t2\t2025-07-28 17:03:54\tPending\t120.0\n3\t3\t2025-07-28 17:03:54\tPending\t1300.0\n*/\n\n\nCREATE TABLE payments (\n\tpayment_id INTEGER, \n\torder_id INTEGER, \n\tpayment_method TEXT, \n\tamount REAL, \n\tpayment_status TEXT DEFAULT 'Pending', \n\tpaid_at TIMESTAMP, \n\tPRIMARY KEY (payment_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from payments table:\npayment_id\torder_id\tpayment_method\tamount\tpayment_status\tpaid_at\n1\t1\tEsewa\t550.0\tCompleted\tNone\n2\t2\tKhalti\t120.0\tCompleted\tNone\n3\t3\tCash\t1300.0\tPending\tNone\n*/\n\n\nCREATE TABLE product_images (\n\timage_id INTEGER, \n\tproduct_id INTEGER, \n\timage_url TEXT NOT NULL, \n\tPRIMARY KEY (image_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from product_images table:\nimage_id\tproduct_id\timage_url\n1\t1\tsamsung.jpg\n2\t2\tiphone.jpg\n3\t3\tcoat.jpg\n*/\n\n\nCREATE TABLE products (\n\tproduct_id INTEGER, \n\tcategory_id INTEGER, \n\tname TEXT NOT NULL, \n\tdescription TEXT, \n\tprice REAL NOT NULL, \n\tstock INTEGER DEFAULT 0, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (product_id), \n\tFOREIGN KEY(category_id) REFERENCES categories (category_id)\n)\n\n/*\n3 rows from products table:\nproduct_id\tcategory_id\tname\tdescription\tprice\tstock\tcreated_at\n1\t1\tSamsung Galaxy A55\t5G smartphone with AMOLED display\t550.0\t50\t2025-07-28 17:03:54\n2\t1\tiPhone 15\tLatest Apple flagship smartphone\t999.0\t30\t2025-07-28 17:03:54\n3\t2\tWinter Coat\tStylish warm coat for winter\t120.0\t25\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE reviews (\n\treview_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\trating INTEGER, \n\tcomment TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (review_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id), \n\tCHECK (rating BETWEEN 1 AND 5)\n)\n\n/*\n3 rows from reviews table:\nreview_id\tuser_id\tproduct_id\trating\tcomment\tcreated_at\n1\t1\t1\t5\tExcellent smartphone!\t2025-07-28 17:03:54\n2\t2\t3\t4\tCoat is warm and stylish.\t2025-07-28 17:03:54\n3\t3\t4\t5\tLaptop is powerful.\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE shipping (\n\tshipping_id INTEGER, \n\torder_id INTEGER, \n\ttracking_number TEXT, \n\tshipping_address TEXT, \n\tshipping_date TIMESTAMP, \n\tdelivery_date TIMESTAMP, \n\tstatus TEXT DEFAULT 'Preparing', \n\tPRIMARY KEY (shipping_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from shipping table:\nshipping_id\torder_id\ttracking_number\tshipping_address\tshipping_date\tdelivery_date\tstatus\n1\t1\tTRK001\tKathmandu\t2025-07-01 00:00:00\t2025-07-05 00:00:00\tDelivered\n2\t2\tTRK002\tPokhara\t2025-07-02 00:00:00\t2025-07-06 00:00:00\tDelivered\n3\t3\tTRK003\tButwal\t2025-07-03 00:00:00\t2025-07-08 00:00:00\tShipped\n*/\n\n\nCREATE TABLE users (\n\tuser_id INTEGER, \n\tname TEXT, \n\temail TEXT, \n\tpassword TEXT, \n\tphone TEXT, \n\taddress TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (user_id), \n\tUNIQUE (email)\n)\n\n/*\n3 rows from users table:\nuser_id\tname\temail\tpassword\tphone\taddress\tcreated_at\n1\tArun Pandey\tarun@example.com\tpass\t9801111111\tKathmandu\t2025-07-28 17:03:54\n2\tSita Sharma\tsita@example.com\tpass\t9802222222\tPokhara\t2025-07-28 17:03:54\n3\tRam Thapa\tram@example.com\tpass\t9803333333\tButwal\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE wishlist (\n\twishlist_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\tadded_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (wishlist_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from wishlist table:\nwishlist_id\tuser_id\tproduct_id\tadded_at\n1\t1\t2\t2025-07-28 17:03:54\n2\t2\t3\t2025-07-28 17:03:54\n3\t3\t1\t2025-07-28 17:03:54\n*/")]
2025-07-29 15:21:31 [DEBUG   ] SQLAgent: Query attempt #1
2025-07-29 15:21:31 [INFO    ] SQLAgent: Invoking LLM for SQL generation...
2025-07-29 15:21:31 [INFO    ] SQLAgent: LLM generated SQL in 0.34 seconds.
2025-07-29 15:21:31 [DEBUG   ] SQLAgent: LLM response content: SELECT name FROM sqlite_master WHERE type='table';
2025-07-29 15:21:31 [INFO    ] SQLAgent: Valid SELECT query detected. Proceeding to execute_query.
2025-07-29 15:21:31 [INFO    ] SQLAgent: Executing SQL query from last message.
2025-07-29 15:21:31 [DEBUG   ] SQLAgent: Last message type: AIMessage, content: SELECT name FROM sqlite_master WHERE type='table';
2025-07-29 15:21:31 [DEBUG   ] SQLAgent: Raw SQL content: SELECT name FROM sqlite_master WHERE type='table';
2025-07-29 15:21:31 [INFO    ] SQLAgent: Extracted SQL query: SELECT name FROM sqlite_master WHERE type='table';
2025-07-29 15:21:31 [INFO    ] SQLAgent: Query executed in 0.00 seconds.
2025-07-29 15:21:31 [INFO    ] SQLAgent: Query result: [('users',), ('sqlite_sequence',), ('categories',), ('products',), ('product_images',), ('orders',), ('order_items',), ('payments',), ('shipping',), ('reviews',), ('wishlist',), ('cart',), ('cart_item...
2025-07-29 15:21:31 [INFO    ] SQLAgent: Query executed successfully. Proceeding to interpretation.
2025-07-29 15:21:31 [INFO    ] SQLAgent: Interpreting query results into natural language answer.
2025-07-29 15:21:31 [DEBUG   ] SQLAgent: Message history for interpretation: [('HumanMessage', 'show me all tables ?'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist'), ('AIMessage', ''), ('ToolMessage', "\nCREATE TABLE cart (\n\tcart_id INTEGER, \n\tuser_id INTEGER, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (cart_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from cart table:\ncart_id\tuser_id\tcreated_at\n1\t1\t2025-07-28 17:03:54\n2\t2\t2025-07-28 17:03:54\n3\t3\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE cart_items (\n\tcart_item_id INTEGER, \n\tcart_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tPRIMARY KEY (cart_item_id), \n\tFOREIGN KEY(cart_id) REFERENCES cart (cart_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from cart_items table:\ncart_item_id\tcart_id\tproduct_id\tquantity\n1\t1\t3\t1\n2\t2\t4\t2\n3\t3\t2\t1\n*/\n\n\nCREATE TABLE categories (\n\tcategory_id INTEGER, \n\tcategory_name TEXT NOT NULL, \n\tdescription TEXT, \n\tPRIMARY KEY (category_id)\n)\n\n/*\n3 rows from categories table:\ncategory_id\tcategory_name\tdescription\n1\tMobiles\tSmartphones and accessories\n2\tClothing\tMen and Women fashion\n3\tComputers\tLaptops and peripherals\n*/\n\n\nCREATE TABLE coupons (\n\tcoupon_id INTEGER, \n\tcode TEXT, \n\tdiscount_percent INTEGER, \n\tvalid_from DATE, \n\tvalid_to DATE, \n\tPRIMARY KEY (coupon_id), \n\tUNIQUE (code), \n\tCHECK (discount_percent BETWEEN 1 AND 100)\n)\n\n/*\n3 rows from coupons table:\ncoupon_id\tcode\tdiscount_percent\tvalid_from\tvalid_to\n1\tNEPAL10\t10\t2025-07-01\t2025-12-31\n2\tFEST20\t20\t2025-07-01\t2025-12-31\n3\tWELCOME5\t5\t2025-07-01\t2025-12-31\n*/\n\n\nCREATE TABLE order_coupons (\n\tid INTEGER, \n\torder_id INTEGER, \n\tcoupon_id INTEGER, \n\tPRIMARY KEY (id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(coupon_id) REFERENCES coupons (coupon_id)\n)\n\n/*\n3 rows from order_coupons table:\nid\torder_id\tcoupon_id\n1\t1\t1\n2\t2\t2\n3\t3\t3\n*/\n\n\nCREATE TABLE order_items (\n\torder_item_id INTEGER, \n\torder_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tprice REAL NOT NULL, \n\tPRIMARY KEY (order_item_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from order_items table:\norder_item_id\torder_id\tproduct_id\tquantity\tprice\n1\t1\t1\t1\t550.0\n2\t2\t3\t1\t120.0\n3\t3\t4\t1\t1300.0\n*/\n\n\nCREATE TABLE orders (\n\torder_id INTEGER, \n\tuser_id INTEGER, \n\torder_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tstatus TEXT DEFAULT 'Pending', \n\ttotal_amount REAL, \n\tPRIMARY KEY (order_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from orders table:\norder_id\tuser_id\torder_date\tstatus\ttotal_amount\n1\t1\t2025-07-28 17:03:54\tPending\t550.0\n2\t2\t2025-07-28 17:03:54\tPending\t120.0\n3\t3\t2025-07-28 17:03:54\tPending\t1300.0\n*/\n\n\nCREATE TABLE payments (\n\tpayment_id INTEGER, \n\torder_id INTEGER, \n\tpayment_method TEXT, \n\tamount REAL, \n\tpayment_status TEXT DEFAULT 'Pending', \n\tpaid_at TIMESTAMP, \n\tPRIMARY KEY (payment_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from payments table:\npayment_id\torder_id\tpayment_method\tamount\tpayment_status\tpaid_at\n1\t1\tEsewa\t550.0\tCompleted\tNone\n2\t2\tKhalti\t120.0\tCompleted\tNone\n3\t3\tCash\t1300.0\tPending\tNone\n*/\n\n\nCREATE TABLE product_images (\n\timage_id INTEGER, \n\tproduct_id INTEGER, \n\timage_url TEXT NOT NULL, \n\tPRIMARY KEY (image_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from product_images table:\nimage_id\tproduct_id\timage_url\n1\t1\tsamsung.jpg\n2\t2\tiphone.jpg\n3\t3\tcoat.jpg\n*/\n\n\nCREATE TABLE products (\n\tproduct_id INTEGER, \n\tcategory_id INTEGER, \n\tname TEXT NOT NULL, \n\tdescription TEXT, \n\tprice REAL NOT NULL, \n\tstock INTEGER DEFAULT 0, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (product_id), \n\tFOREIGN KEY(category_id) REFERENCES categories (category_id)\n)\n\n/*\n3 rows from products table:\nproduct_id\tcategory_id\tname\tdescription\tprice\tstock\tcreated_at\n1\t1\tSamsung Galaxy A55\t5G smartphone with AMOLED display\t550.0\t50\t2025-07-28 17:03:54\n2\t1\tiPhone 15\tLatest Apple flagship smartphone\t999.0\t30\t2025-07-28 17:03:54\n3\t2\tWinter Coat\tStylish warm coat for winter\t120.0\t25\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE reviews (\n\treview_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\trating INTEGER, \n\tcomment TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (review_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id), \n\tCHECK (rating BETWEEN 1 AND 5)\n)\n\n/*\n3 rows from reviews table:\nreview_id\tuser_id\tproduct_id\trating\tcomment\tcreated_at\n1\t1\t1\t5\tExcellent smartphone!\t2025-07-28 17:03:54\n2\t2\t3\t4\tCoat is warm and stylish.\t2025-07-28 17:03:54\n3\t3\t4\t5\tLaptop is powerful.\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE shipping (\n\tshipping_id INTEGER, \n\torder_id INTEGER, \n\ttracking_number TEXT, \n\tshipping_address TEXT, \n\tshipping_date TIMESTAMP, \n\tdelivery_date TIMESTAMP, \n\tstatus TEXT DEFAULT 'Preparing', \n\tPRIMARY KEY (shipping_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from shipping table:\nshipping_id\torder_id\ttracking_number\tshipping_address\tshipping_date\tdelivery_date\tstatus\n1\t1\tTRK001\tKathmandu\t2025-07-01 00:00:00\t2025-07-05 00:00:00\tDelivered\n2\t2\tTRK002\tPokhara\t2025-07-02 00:00:00\t2025-07-06 00:00:00\tDelivered\n3\t3\tTRK003\tButwal\t2025-07-03 00:00:00\t2025-07-08 00:00:00\tShipped\n*/\n\n\nCREATE TABLE users (\n\tuser_id INTEGER, \n\tname TEXT, \n\temail TEXT, \n\tpassword TEXT, \n\tphone TEXT, \n\taddress TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (user_id), \n\tUNIQUE (email)\n)\n\n/*\n3 rows from users table:\nuser_id\tname\temail\tpassword\tphone\taddress\tcreated_at\n1\tArun Pandey\tarun@example.com\tpass\t9801111111\tKathmandu\t2025-07-28 17:03:54\n2\tSita Sharma\tsita@example.com\tpass\t9802222222\tPokhara\t2025-07-28 17:03:54\n3\tRam Thapa\tram@example.com\tpass\t9803333333\tButwal\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE wishlist (\n\twishlist_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\tadded_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (wishlist_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from wishlist table:\nwishlist_id\tuser_id\tproduct_id\tadded_at\n1\t1\t2\t2025-07-28 17:03:54\n2\t2\t3\t2025-07-28 17:03:54\n3\t3\t1\t2025-07-28 17:03:54\n*/"), ('AIMessage', "SELECT name FROM sqlite_master WHERE type='table';"), ('ToolMessage', "[('users',), ('sqlite_sequence',), ('categories',), ('products',), ('product_images',), ('orders',), ('order_items',), ('payments',), ('shipping',), ('reviews',), ('wishlist',), ('cart',), ('cart_items',), ('coupons',), ('order_coupons',)]")]
2025-07-29 15:21:31 [INFO    ] SQLAgent: Invoking LLM for result interpretation...
2025-07-29 15:21:32 [INFO    ] SQLAgent: LLM interpretation completed in 0.48 seconds.
2025-07-29 15:21:32 [DEBUG   ] SQLAgent: Interpretation result: Answer: The database contains the following tables: users, sqlite_sequence, categories, products, product_images, orders, order_items, payments, shipping, reviews, wishlist, cart, cart_items, coupons, and order_coupons.
2025-07-29 15:21:32 [INFO    ] SQLAgent: Final answer generated. Ending workflow.
2025-07-29 15:21:32 [INFO    ] SQLAgent: Agent workflow completed in 1.57 seconds.
2025-07-29 15:21:32 [DEBUG   ] SQLAgent: Extracting final SQL query from message history.
2025-07-29 15:21:32 [DEBUG   ] SQLAgent: Extracted SQL query: SELECT name FROM sqlite_master WHERE type='table';
2025-07-29 15:21:32 [INFO    ] SQLAgent: Final SQL Query: SELECT name FROM sqlite_master WHERE type='table';
2025-07-29 15:21:32 [INFO    ] SQLAgent: Final Answer: Answer: The database contains the following tables: users, sqlite_sequence, categories, products, product_images, orders, order_items, payments, shipping, reviews, wishlist, cart, cart_items, coupons, and order_coupons.
2025-07-29 15:21:32 [INFO    ] SQLAgent: ===  Query Execution Completed ===
2025-07-29 15:22:18 [INFO    ] SQLAgent: === Starting SQL Agent  ===
2025-07-29 15:22:18 [INFO    ] SQLAgent: Initializing SQLAgent...
2025-07-29 15:22:18 [DEBUG   ] SQLAgent: Input - db_path: D:\ML(ExtraClass Project)\AGENT AI\SQL-Sage-Intelligent-DB-Agent-with-Gemini-LangGraph\database\final_ecommerce.db, model_name: llama-3.1-8b-instant
2025-07-29 15:22:18 [DEBUG   ] SQLAgent: Connection string created: sqlite:///D:\ML(ExtraClass Project)\AGENT AI\SQL-Sage-Intelligent-DB-Agent-with-Gemini-LangGraph\database\final_ecommerce.db
2025-07-29 15:22:18 [INFO    ] SQLAgent: Connected to SQLite database.
2025-07-29 15:22:18 [DEBUG   ] SQLAgent: Database usable tables: ['cart', 'cart_items', 'categories', 'coupons', 'order_coupons', 'order_items', 'orders', 'payments', 'product_images', 'products', 'reviews', 'shipping', 'users', 'wishlist']
2025-07-29 15:22:19 [INFO    ] SQLAgent: Groq LLM initialized with model: llama-3.1-8b-instant
2025-07-29 15:22:19 [INFO    ] SQLAgent: Starting _setup_tools...
2025-07-29 15:22:19 [DEBUG   ] SQLAgent: Fetched 4 tools from toolkit: ['sql_db_query', 'sql_db_schema', 'sql_db_list_tables', 'sql_db_query_checker']
2025-07-29 15:22:19 [DEBUG   ] SQLAgent: Tool 'sql_db_list_tables' loaded.
2025-07-29 15:22:19 [DEBUG   ] SQLAgent: Tool 'sql_db_schema' loaded.
2025-07-29 15:22:19 [INFO    ] SQLAgent: All tools setup completed.
2025-07-29 15:22:19 [INFO    ] SQLAgent: Setting up prompts...
2025-07-29 15:22:19 [DEBUG   ] SQLAgent: Query generation prompt created.
2025-07-29 15:22:19 [DEBUG   ] SQLAgent: Interpretation prompt created.
2025-07-29 15:22:19 [INFO    ] SQLAgent: Prompts setup completed.
2025-07-29 15:22:19 [DEBUG   ] SQLAgent: Intent classification prompt added.
2025-07-29 15:22:19 [INFO    ] SQLAgent: Building LangGraph workflow...
2025-07-29 15:22:19 [DEBUG   ] SQLAgent: Node 'first_tool_call' added to graph.
2025-07-29 15:22:19 [DEBUG   ] SQLAgent: Creating tool node with fallback for tools: ['sql_db_list_tables']
2025-07-29 15:22:19 [DEBUG   ] SQLAgent: Tool node with fallback created.
2025-07-29 15:22:19 [DEBUG   ] SQLAgent: Node 'list_tables_tool' added to graph.
2025-07-29 15:22:19 [DEBUG   ] SQLAgent: Node 'model_get_schema' added to graph.
2025-07-29 15:22:19 [DEBUG   ] SQLAgent: Creating tool node with fallback for tools: ['sql_db_schema']
2025-07-29 15:22:19 [DEBUG   ] SQLAgent: Tool node with fallback created.
2025-07-29 15:22:19 [DEBUG   ] SQLAgent: Node 'get_schema_tool' added to graph.
2025-07-29 15:22:19 [DEBUG   ] SQLAgent: Node 'query_gen' added to graph.
2025-07-29 15:22:19 [DEBUG   ] SQLAgent: Node 'execute_query' added to graph.
2025-07-29 15:22:19 [DEBUG   ] SQLAgent: Node 'interpret_results' added to graph.
2025-07-29 15:22:19 [DEBUG   ] SQLAgent: Edge: START → first_tool_call
2025-07-29 15:22:19 [DEBUG   ] SQLAgent: Edge: first_tool_call → list_tables_tool
2025-07-29 15:22:19 [DEBUG   ] SQLAgent: Edge: list_tables_tool → model_get_schema
2025-07-29 15:22:19 [DEBUG   ] SQLAgent: Edge: model_get_schema → get_schema_tool
2025-07-29 15:22:19 [DEBUG   ] SQLAgent: Edge: get_schema_tool → query_gen
2025-07-29 15:22:19 [DEBUG   ] SQLAgent: Conditional edges added from 'query_gen'
2025-07-29 15:22:19 [DEBUG   ] SQLAgent: Conditional edges added from 'execute_query'
2025-07-29 15:22:19 [DEBUG   ] SQLAgent: Conditional edges added from 'interpret_results'
2025-07-29 15:22:19 [INFO    ] SQLAgent: LangGraph workflow compiled successfully.
2025-07-29 15:22:19 [INFO    ] SQLAgent: SQLAgent initialization completed.
2025-07-29 15:22:19 [INFO    ] SQLAgent: SQLAgent instance created.
2025-07-29 15:22:19 [INFO    ] SQLAgent: === Query Execution ===
2025-07-29 15:22:19 [INFO    ] SQLAgent: Received query: 'hi k xa '
2025-07-29 15:22:28 [INFO    ] SQLAgent: Intent classification result: 'greeting'
2025-07-29 15:22:28 [INFO    ] SQLAgent: Pure greeting detected via LLM. Responding directly.
2025-07-29 15:22:28 [INFO    ] SQLAgent: ===  Query Execution Completed ===
2025-07-29 15:22:39 [INFO    ] SQLAgent: === Starting SQL Agent  ===
2025-07-29 15:22:39 [INFO    ] SQLAgent: Initializing SQLAgent...
2025-07-29 15:22:39 [DEBUG   ] SQLAgent: Input - db_path: D:\ML(ExtraClass Project)\AGENT AI\SQL-Sage-Intelligent-DB-Agent-with-Gemini-LangGraph\database\final_ecommerce.db, model_name: llama-3.1-8b-instant
2025-07-29 15:22:39 [DEBUG   ] SQLAgent: Connection string created: sqlite:///D:\ML(ExtraClass Project)\AGENT AI\SQL-Sage-Intelligent-DB-Agent-with-Gemini-LangGraph\database\final_ecommerce.db
2025-07-29 15:22:39 [INFO    ] SQLAgent: Connected to SQLite database.
2025-07-29 15:22:39 [DEBUG   ] SQLAgent: Database usable tables: ['cart', 'cart_items', 'categories', 'coupons', 'order_coupons', 'order_items', 'orders', 'payments', 'product_images', 'products', 'reviews', 'shipping', 'users', 'wishlist']
2025-07-29 15:22:40 [INFO    ] SQLAgent: Groq LLM initialized with model: llama-3.1-8b-instant
2025-07-29 15:22:40 [INFO    ] SQLAgent: Starting _setup_tools...
2025-07-29 15:22:40 [DEBUG   ] SQLAgent: Fetched 4 tools from toolkit: ['sql_db_query', 'sql_db_schema', 'sql_db_list_tables', 'sql_db_query_checker']
2025-07-29 15:22:40 [DEBUG   ] SQLAgent: Tool 'sql_db_list_tables' loaded.
2025-07-29 15:22:40 [DEBUG   ] SQLAgent: Tool 'sql_db_schema' loaded.
2025-07-29 15:22:40 [INFO    ] SQLAgent: All tools setup completed.
2025-07-29 15:22:40 [INFO    ] SQLAgent: Setting up prompts...
2025-07-29 15:22:40 [DEBUG   ] SQLAgent: Query generation prompt created.
2025-07-29 15:22:40 [DEBUG   ] SQLAgent: Interpretation prompt created.
2025-07-29 15:22:40 [INFO    ] SQLAgent: Prompts setup completed.
2025-07-29 15:22:40 [DEBUG   ] SQLAgent: Intent classification prompt added.
2025-07-29 15:22:40 [INFO    ] SQLAgent: Building LangGraph workflow...
2025-07-29 15:22:40 [DEBUG   ] SQLAgent: Node 'first_tool_call' added to graph.
2025-07-29 15:22:40 [DEBUG   ] SQLAgent: Creating tool node with fallback for tools: ['sql_db_list_tables']
2025-07-29 15:22:40 [DEBUG   ] SQLAgent: Tool node with fallback created.
2025-07-29 15:22:40 [DEBUG   ] SQLAgent: Node 'list_tables_tool' added to graph.
2025-07-29 15:22:40 [DEBUG   ] SQLAgent: Node 'model_get_schema' added to graph.
2025-07-29 15:22:40 [DEBUG   ] SQLAgent: Creating tool node with fallback for tools: ['sql_db_schema']
2025-07-29 15:22:40 [DEBUG   ] SQLAgent: Tool node with fallback created.
2025-07-29 15:22:40 [DEBUG   ] SQLAgent: Node 'get_schema_tool' added to graph.
2025-07-29 15:22:40 [DEBUG   ] SQLAgent: Node 'query_gen' added to graph.
2025-07-29 15:22:40 [DEBUG   ] SQLAgent: Node 'execute_query' added to graph.
2025-07-29 15:22:40 [DEBUG   ] SQLAgent: Node 'interpret_results' added to graph.
2025-07-29 15:22:40 [DEBUG   ] SQLAgent: Edge: START → first_tool_call
2025-07-29 15:22:40 [DEBUG   ] SQLAgent: Edge: first_tool_call → list_tables_tool
2025-07-29 15:22:40 [DEBUG   ] SQLAgent: Edge: list_tables_tool → model_get_schema
2025-07-29 15:22:40 [DEBUG   ] SQLAgent: Edge: model_get_schema → get_schema_tool
2025-07-29 15:22:40 [DEBUG   ] SQLAgent: Edge: get_schema_tool → query_gen
2025-07-29 15:22:40 [DEBUG   ] SQLAgent: Conditional edges added from 'query_gen'
2025-07-29 15:22:40 [DEBUG   ] SQLAgent: Conditional edges added from 'execute_query'
2025-07-29 15:22:40 [DEBUG   ] SQLAgent: Conditional edges added from 'interpret_results'
2025-07-29 15:22:40 [INFO    ] SQLAgent: LangGraph workflow compiled successfully.
2025-07-29 15:22:40 [INFO    ] SQLAgent: SQLAgent initialization completed.
2025-07-29 15:22:40 [INFO    ] SQLAgent: SQLAgent instance created.
2025-07-29 15:22:40 [INFO    ] SQLAgent: === Query Execution ===
2025-07-29 15:22:40 [INFO    ] SQLAgent: Received query: 'k xa bhai '
2025-07-29 15:23:00 [INFO    ] SQLAgent: Intent classification result: 'greeting'
2025-07-29 15:23:00 [INFO    ] SQLAgent: Pure greeting detected via LLM. Responding directly.
2025-07-29 15:23:00 [INFO    ] SQLAgent: ===  Query Execution Completed ===
2025-07-29 15:25:21 [INFO    ] SQLAgent: === SQL Agent Logger Initialized (Console Output Disabled, ALL Log Levels Captured) ===
2025-07-29 15:25:21 [DEBUG   ] SQLAgent: DEBUG level logging enabled - all detailed information will be captured
2025-07-29 15:25:21 [WARNING ] SQLAgent: WARNING level logging enabled - all warnings will be captured
2025-07-29 15:25:21 [ERROR   ] SQLAgent: ERROR level logging enabled - all errors will be captured
2025-07-29 15:25:21 [CRITICAL] SQLAgent: CRITICAL level logging enabled - all critical issues will be captured
2025-07-29 15:25:21 [INFO    ] SQLAgent: === Starting SQL Agent  ===
2025-07-29 15:25:21 [INFO    ] SQLAgent: Initializing SQLAgent...
2025-07-29 15:25:21 [DEBUG   ] SQLAgent: Input - db_path: D:\ML(ExtraClass Project)\AGENT AI\SQL-Sage-Intelligent-DB-Agent-with-Gemini-LangGraph\database\final_ecommerce.db, model_name: llama-3.1-8b-instant
2025-07-29 15:25:21 [DEBUG   ] SQLAgent: Connection string created: sqlite:///D:\ML(ExtraClass Project)\AGENT AI\SQL-Sage-Intelligent-DB-Agent-with-Gemini-LangGraph\database\final_ecommerce.db
2025-07-29 15:25:21 [INFO    ] SQLAgent: Connected to SQLite database.
2025-07-29 15:25:21 [DEBUG   ] SQLAgent: Database usable tables: ['cart', 'cart_items', 'categories', 'coupons', 'order_coupons', 'order_items', 'orders', 'payments', 'product_images', 'products', 'reviews', 'shipping', 'users', 'wishlist']
2025-07-29 15:25:22 [INFO    ] SQLAgent: Groq LLM initialized with model: llama-3.1-8b-instant
2025-07-29 15:25:22 [INFO    ] SQLAgent: Starting _setup_tools...
2025-07-29 15:25:22 [DEBUG   ] SQLAgent: Fetched 4 tools from toolkit: ['sql_db_query', 'sql_db_schema', 'sql_db_list_tables', 'sql_db_query_checker']
2025-07-29 15:25:22 [DEBUG   ] SQLAgent: Tool 'sql_db_list_tables' loaded.
2025-07-29 15:25:22 [DEBUG   ] SQLAgent: Tool 'sql_db_schema' loaded.
2025-07-29 15:25:22 [INFO    ] SQLAgent: All tools setup completed.
2025-07-29 15:25:22 [INFO    ] SQLAgent: Setting up prompts...
2025-07-29 15:25:22 [DEBUG   ] SQLAgent: Query generation prompt created.
2025-07-29 15:25:22 [DEBUG   ] SQLAgent: Interpretation prompt created.
2025-07-29 15:25:22 [INFO    ] SQLAgent: Prompts setup completed.
2025-07-29 15:25:22 [DEBUG   ] SQLAgent: Intent classification prompt added.
2025-07-29 15:25:22 [INFO    ] SQLAgent: Building LangGraph workflow...
2025-07-29 15:25:22 [DEBUG   ] SQLAgent: Node 'first_tool_call' added to graph.
2025-07-29 15:25:22 [DEBUG   ] SQLAgent: Creating tool node with fallback for tools: ['sql_db_list_tables']
2025-07-29 15:25:22 [DEBUG   ] SQLAgent: Tool node with fallback created.
2025-07-29 15:25:22 [DEBUG   ] SQLAgent: Node 'list_tables_tool' added to graph.
2025-07-29 15:25:22 [DEBUG   ] SQLAgent: Node 'model_get_schema' added to graph.
2025-07-29 15:25:22 [DEBUG   ] SQLAgent: Creating tool node with fallback for tools: ['sql_db_schema']
2025-07-29 15:25:22 [DEBUG   ] SQLAgent: Tool node with fallback created.
2025-07-29 15:25:22 [DEBUG   ] SQLAgent: Node 'get_schema_tool' added to graph.
2025-07-29 15:25:22 [DEBUG   ] SQLAgent: Node 'query_gen' added to graph.
2025-07-29 15:25:22 [DEBUG   ] SQLAgent: Node 'execute_query' added to graph.
2025-07-29 15:25:22 [DEBUG   ] SQLAgent: Node 'interpret_results' added to graph.
2025-07-29 15:25:22 [DEBUG   ] SQLAgent: Edge: START → first_tool_call
2025-07-29 15:25:22 [DEBUG   ] SQLAgent: Edge: first_tool_call → list_tables_tool
2025-07-29 15:25:22 [DEBUG   ] SQLAgent: Edge: list_tables_tool → model_get_schema
2025-07-29 15:25:22 [DEBUG   ] SQLAgent: Edge: model_get_schema → get_schema_tool
2025-07-29 15:25:22 [DEBUG   ] SQLAgent: Edge: get_schema_tool → query_gen
2025-07-29 15:25:22 [DEBUG   ] SQLAgent: Conditional edges added from 'query_gen'
2025-07-29 15:25:22 [DEBUG   ] SQLAgent: Conditional edges added from 'execute_query'
2025-07-29 15:25:22 [DEBUG   ] SQLAgent: Conditional edges added from 'interpret_results'
2025-07-29 15:25:22 [INFO    ] SQLAgent: LangGraph workflow compiled successfully.
2025-07-29 15:25:22 [INFO    ] SQLAgent: SQLAgent initialization completed.
2025-07-29 15:25:22 [INFO    ] SQLAgent: SQLAgent instance created.
2025-07-29 15:25:22 [INFO    ] SQLAgent: === Query Execution ===
2025-07-29 15:25:22 [INFO    ] SQLAgent: Received query: 'k xa bhai '
2025-07-29 15:25:23 [INFO    ] SQLAgent: Intent classification result: 'greeting'
2025-07-29 15:25:23 [INFO    ] SQLAgent: Pure greeting detected via LLM. Responding directly.
2025-07-29 15:25:23 [INFO    ] SQLAgent: ===  Query Execution Completed ===
2025-07-29 15:25:38 [INFO    ] SQLAgent: === Starting SQL Agent  ===
2025-07-29 15:25:38 [INFO    ] SQLAgent: Initializing SQLAgent...
2025-07-29 15:25:38 [DEBUG   ] SQLAgent: Input - db_path: D:\ML(ExtraClass Project)\AGENT AI\SQL-Sage-Intelligent-DB-Agent-with-Gemini-LangGraph\database\final_ecommerce.db, model_name: llama-3.1-8b-instant
2025-07-29 15:25:38 [DEBUG   ] SQLAgent: Connection string created: sqlite:///D:\ML(ExtraClass Project)\AGENT AI\SQL-Sage-Intelligent-DB-Agent-with-Gemini-LangGraph\database\final_ecommerce.db
2025-07-29 15:25:38 [INFO    ] SQLAgent: Connected to SQLite database.
2025-07-29 15:25:38 [DEBUG   ] SQLAgent: Database usable tables: ['cart', 'cart_items', 'categories', 'coupons', 'order_coupons', 'order_items', 'orders', 'payments', 'product_images', 'products', 'reviews', 'shipping', 'users', 'wishlist']
2025-07-29 15:25:39 [INFO    ] SQLAgent: Groq LLM initialized with model: llama-3.1-8b-instant
2025-07-29 15:25:39 [INFO    ] SQLAgent: Starting _setup_tools...
2025-07-29 15:25:39 [DEBUG   ] SQLAgent: Fetched 4 tools from toolkit: ['sql_db_query', 'sql_db_schema', 'sql_db_list_tables', 'sql_db_query_checker']
2025-07-29 15:25:39 [DEBUG   ] SQLAgent: Tool 'sql_db_list_tables' loaded.
2025-07-29 15:25:39 [DEBUG   ] SQLAgent: Tool 'sql_db_schema' loaded.
2025-07-29 15:25:39 [INFO    ] SQLAgent: All tools setup completed.
2025-07-29 15:25:39 [INFO    ] SQLAgent: Setting up prompts...
2025-07-29 15:25:39 [DEBUG   ] SQLAgent: Query generation prompt created.
2025-07-29 15:25:39 [DEBUG   ] SQLAgent: Interpretation prompt created.
2025-07-29 15:25:39 [INFO    ] SQLAgent: Prompts setup completed.
2025-07-29 15:25:39 [DEBUG   ] SQLAgent: Intent classification prompt added.
2025-07-29 15:25:39 [INFO    ] SQLAgent: Building LangGraph workflow...
2025-07-29 15:25:39 [DEBUG   ] SQLAgent: Node 'first_tool_call' added to graph.
2025-07-29 15:25:39 [DEBUG   ] SQLAgent: Creating tool node with fallback for tools: ['sql_db_list_tables']
2025-07-29 15:25:39 [DEBUG   ] SQLAgent: Tool node with fallback created.
2025-07-29 15:25:39 [DEBUG   ] SQLAgent: Node 'list_tables_tool' added to graph.
2025-07-29 15:25:39 [DEBUG   ] SQLAgent: Node 'model_get_schema' added to graph.
2025-07-29 15:25:39 [DEBUG   ] SQLAgent: Creating tool node with fallback for tools: ['sql_db_schema']
2025-07-29 15:25:39 [DEBUG   ] SQLAgent: Tool node with fallback created.
2025-07-29 15:25:39 [DEBUG   ] SQLAgent: Node 'get_schema_tool' added to graph.
2025-07-29 15:25:39 [DEBUG   ] SQLAgent: Node 'query_gen' added to graph.
2025-07-29 15:25:39 [DEBUG   ] SQLAgent: Node 'execute_query' added to graph.
2025-07-29 15:25:39 [DEBUG   ] SQLAgent: Node 'interpret_results' added to graph.
2025-07-29 15:25:39 [DEBUG   ] SQLAgent: Edge: START → first_tool_call
2025-07-29 15:25:39 [DEBUG   ] SQLAgent: Edge: first_tool_call → list_tables_tool
2025-07-29 15:25:39 [DEBUG   ] SQLAgent: Edge: list_tables_tool → model_get_schema
2025-07-29 15:25:39 [DEBUG   ] SQLAgent: Edge: model_get_schema → get_schema_tool
2025-07-29 15:25:39 [DEBUG   ] SQLAgent: Edge: get_schema_tool → query_gen
2025-07-29 15:25:39 [DEBUG   ] SQLAgent: Conditional edges added from 'query_gen'
2025-07-29 15:25:39 [DEBUG   ] SQLAgent: Conditional edges added from 'execute_query'
2025-07-29 15:25:39 [DEBUG   ] SQLAgent: Conditional edges added from 'interpret_results'
2025-07-29 15:25:39 [INFO    ] SQLAgent: LangGraph workflow compiled successfully.
2025-07-29 15:25:39 [INFO    ] SQLAgent: SQLAgent initialization completed.
2025-07-29 15:25:39 [INFO    ] SQLAgent: SQLAgent instance created.
2025-07-29 15:25:39 [INFO    ] SQLAgent: === Query Execution ===
2025-07-29 15:25:39 [INFO    ] SQLAgent: Received query: 'hi whats upp show me the email of Arun Pandey user?'
2025-07-29 15:25:39 [INFO    ] SQLAgent: Intent classification result: 'query'
2025-07-29 15:25:39 [INFO    ] SQLAgent: Setting recursion limit: 15
2025-07-29 15:25:39 [INFO    ] SQLAgent: Invoking agent workflow...
2025-07-29 15:25:39 [INFO    ] SQLAgent: Executing first_tool_call: requesting list of tables.
2025-07-29 15:25:39 [DEBUG   ] SQLAgent: first_tool_call response prepared.
2025-07-29 15:25:39 [INFO    ] SQLAgent: Calling model_get_schema to fetch schema.
2025-07-29 15:25:39 [DEBUG   ] SQLAgent: Current message history: [('HumanMessage', 'hi whats upp show me the email of Arun Pandey user?'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist')]
2025-07-29 15:25:40 [INFO    ] SQLAgent: LLM schema request took 0.34 seconds.
2025-07-29 15:25:40 [DEBUG   ] SQLAgent: Schema response: content='' additional_kwargs={'tool_calls': [{'id': '8s8m5gqya', 'function': {'arguments': '{"table_names":"users,cart,cart_items,categories,coupons,order_coupons,order_items,orders,payments,product_images,products,reviews,shipping,wishlist"}', 'name': 'sql_db_schema'}, 'type': 'function'}]} response_metadata={'token_usage': {'completion_tokens': 50, 'prompt_tokens': 401, 'total_tokens': 451, 'completion_time': 0.070892293, 'prompt_time': 0.151869996, 'queue_time': 0.054323713999999995, 'total_time': 0.222762289}, 'model_name': 'llama-3.1-8b-instant', 'system_fingerprint': 'fp_c523237e5d', 'service_tier': 'on_demand', 'finish_reason': 'tool_calls', 'logprobs': None} id='run--caf44722-128c-4192-815e-d1d4fd5d7560-0' tool_calls=[{'name': 'sql_db_schema', 'args': {'table_names': 'users,cart,cart_items,categories,coupons,order_coupons,order_items,orders,payments,product_images,products,reviews,shipping,wishlist'}, 'id': '8s8m5gqya', 'type': 'tool_call'}] usage_metadata={'input_tokens': 401, 'output_tokens': 50, 'total_tokens': 451}
2025-07-29 15:25:40 [INFO    ] SQLAgent: Entering query_gen_node to generate SQL query.
2025-07-29 15:25:40 [DEBUG   ] SQLAgent: Message history: [('HumanMessage', 'hi whats upp show me the email of Arun Pandey user?'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist'), ('AIMessage', ''), ('ToolMessage', "\nCREATE TABLE cart (\n\tcart_id INTEGER, \n\tuser_id INTEGER, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (cart_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from cart table:\ncart_id\tuser_id\tcreated_at\n1\t1\t2025-07-28 17:03:54\n2\t2\t2025-07-28 17:03:54\n3\t3\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE cart_items (\n\tcart_item_id INTEGER, \n\tcart_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tPRIMARY KEY (cart_item_id), \n\tFOREIGN KEY(cart_id) REFERENCES cart (cart_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from cart_items table:\ncart_item_id\tcart_id\tproduct_id\tquantity\n1\t1\t3\t1\n2\t2\t4\t2\n3\t3\t2\t1\n*/\n\n\nCREATE TABLE categories (\n\tcategory_id INTEGER, \n\tcategory_name TEXT NOT NULL, \n\tdescription TEXT, \n\tPRIMARY KEY (category_id)\n)\n\n/*\n3 rows from categories table:\ncategory_id\tcategory_name\tdescription\n1\tMobiles\tSmartphones and accessories\n2\tClothing\tMen and Women fashion\n3\tComputers\tLaptops and peripherals\n*/\n\n\nCREATE TABLE coupons (\n\tcoupon_id INTEGER, \n\tcode TEXT, \n\tdiscount_percent INTEGER, \n\tvalid_from DATE, \n\tvalid_to DATE, \n\tPRIMARY KEY (coupon_id), \n\tUNIQUE (code), \n\tCHECK (discount_percent BETWEEN 1 AND 100)\n)\n\n/*\n3 rows from coupons table:\ncoupon_id\tcode\tdiscount_percent\tvalid_from\tvalid_to\n1\tNEPAL10\t10\t2025-07-01\t2025-12-31\n2\tFEST20\t20\t2025-07-01\t2025-12-31\n3\tWELCOME5\t5\t2025-07-01\t2025-12-31\n*/\n\n\nCREATE TABLE order_coupons (\n\tid INTEGER, \n\torder_id INTEGER, \n\tcoupon_id INTEGER, \n\tPRIMARY KEY (id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(coupon_id) REFERENCES coupons (coupon_id)\n)\n\n/*\n3 rows from order_coupons table:\nid\torder_id\tcoupon_id\n1\t1\t1\n2\t2\t2\n3\t3\t3\n*/\n\n\nCREATE TABLE order_items (\n\torder_item_id INTEGER, \n\torder_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tprice REAL NOT NULL, \n\tPRIMARY KEY (order_item_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from order_items table:\norder_item_id\torder_id\tproduct_id\tquantity\tprice\n1\t1\t1\t1\t550.0\n2\t2\t3\t1\t120.0\n3\t3\t4\t1\t1300.0\n*/\n\n\nCREATE TABLE orders (\n\torder_id INTEGER, \n\tuser_id INTEGER, \n\torder_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tstatus TEXT DEFAULT 'Pending', \n\ttotal_amount REAL, \n\tPRIMARY KEY (order_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from orders table:\norder_id\tuser_id\torder_date\tstatus\ttotal_amount\n1\t1\t2025-07-28 17:03:54\tPending\t550.0\n2\t2\t2025-07-28 17:03:54\tPending\t120.0\n3\t3\t2025-07-28 17:03:54\tPending\t1300.0\n*/\n\n\nCREATE TABLE payments (\n\tpayment_id INTEGER, \n\torder_id INTEGER, \n\tpayment_method TEXT, \n\tamount REAL, \n\tpayment_status TEXT DEFAULT 'Pending', \n\tpaid_at TIMESTAMP, \n\tPRIMARY KEY (payment_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from payments table:\npayment_id\torder_id\tpayment_method\tamount\tpayment_status\tpaid_at\n1\t1\tEsewa\t550.0\tCompleted\tNone\n2\t2\tKhalti\t120.0\tCompleted\tNone\n3\t3\tCash\t1300.0\tPending\tNone\n*/\n\n\nCREATE TABLE product_images (\n\timage_id INTEGER, \n\tproduct_id INTEGER, \n\timage_url TEXT NOT NULL, \n\tPRIMARY KEY (image_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from product_images table:\nimage_id\tproduct_id\timage_url\n1\t1\tsamsung.jpg\n2\t2\tiphone.jpg\n3\t3\tcoat.jpg\n*/\n\n\nCREATE TABLE products (\n\tproduct_id INTEGER, \n\tcategory_id INTEGER, \n\tname TEXT NOT NULL, \n\tdescription TEXT, \n\tprice REAL NOT NULL, \n\tstock INTEGER DEFAULT 0, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (product_id), \n\tFOREIGN KEY(category_id) REFERENCES categories (category_id)\n)\n\n/*\n3 rows from products table:\nproduct_id\tcategory_id\tname\tdescription\tprice\tstock\tcreated_at\n1\t1\tSamsung Galaxy A55\t5G smartphone with AMOLED display\t550.0\t50\t2025-07-28 17:03:54\n2\t1\tiPhone 15\tLatest Apple flagship smartphone\t999.0\t30\t2025-07-28 17:03:54\n3\t2\tWinter Coat\tStylish warm coat for winter\t120.0\t25\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE reviews (\n\treview_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\trating INTEGER, \n\tcomment TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (review_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id), \n\tCHECK (rating BETWEEN 1 AND 5)\n)\n\n/*\n3 rows from reviews table:\nreview_id\tuser_id\tproduct_id\trating\tcomment\tcreated_at\n1\t1\t1\t5\tExcellent smartphone!\t2025-07-28 17:03:54\n2\t2\t3\t4\tCoat is warm and stylish.\t2025-07-28 17:03:54\n3\t3\t4\t5\tLaptop is powerful.\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE shipping (\n\tshipping_id INTEGER, \n\torder_id INTEGER, \n\ttracking_number TEXT, \n\tshipping_address TEXT, \n\tshipping_date TIMESTAMP, \n\tdelivery_date TIMESTAMP, \n\tstatus TEXT DEFAULT 'Preparing', \n\tPRIMARY KEY (shipping_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from shipping table:\nshipping_id\torder_id\ttracking_number\tshipping_address\tshipping_date\tdelivery_date\tstatus\n1\t1\tTRK001\tKathmandu\t2025-07-01 00:00:00\t2025-07-05 00:00:00\tDelivered\n2\t2\tTRK002\tPokhara\t2025-07-02 00:00:00\t2025-07-06 00:00:00\tDelivered\n3\t3\tTRK003\tButwal\t2025-07-03 00:00:00\t2025-07-08 00:00:00\tShipped\n*/\n\n\nCREATE TABLE users (\n\tuser_id INTEGER, \n\tname TEXT, \n\temail TEXT, \n\tpassword TEXT, \n\tphone TEXT, \n\taddress TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (user_id), \n\tUNIQUE (email)\n)\n\n/*\n3 rows from users table:\nuser_id\tname\temail\tpassword\tphone\taddress\tcreated_at\n1\tArun Pandey\tarun@example.com\tpass\t9801111111\tKathmandu\t2025-07-28 17:03:54\n2\tSita Sharma\tsita@example.com\tpass\t9802222222\tPokhara\t2025-07-28 17:03:54\n3\tRam Thapa\tram@example.com\tpass\t9803333333\tButwal\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE wishlist (\n\twishlist_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\tadded_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (wishlist_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from wishlist table:\nwishlist_id\tuser_id\tproduct_id\tadded_at\n1\t1\t2\t2025-07-28 17:03:54\n2\t2\t3\t2025-07-28 17:03:54\n3\t3\t1\t2025-07-28 17:03:54\n*/")]
2025-07-29 15:25:40 [DEBUG   ] SQLAgent: Query attempt #1
2025-07-29 15:25:40 [INFO    ] SQLAgent: Invoking LLM for SQL generation...
2025-07-29 15:25:40 [INFO    ] SQLAgent: LLM generated SQL in 0.62 seconds.
2025-07-29 15:25:40 [DEBUG   ] SQLAgent: LLM response content: SELECT email FROM users WHERE name = 'Arun Pandey';
2025-07-29 15:25:40 [INFO    ] SQLAgent: Valid SELECT query detected. Proceeding to execute_query.
2025-07-29 15:25:40 [INFO    ] SQLAgent: Executing SQL query from last message.
2025-07-29 15:25:40 [DEBUG   ] SQLAgent: Last message type: AIMessage, content: SELECT email FROM users WHERE name = 'Arun Pandey';
2025-07-29 15:25:40 [DEBUG   ] SQLAgent: Raw SQL content: SELECT email FROM users WHERE name = 'Arun Pandey';
2025-07-29 15:25:40 [INFO    ] SQLAgent: Extracted SQL query: SELECT email FROM users WHERE name = 'Arun Pandey';
2025-07-29 15:25:40 [INFO    ] SQLAgent: Query executed in 0.00 seconds.
2025-07-29 15:25:40 [INFO    ] SQLAgent: Query result: [('arun@example.com',)]
2025-07-29 15:25:40 [INFO    ] SQLAgent: Query executed successfully. Proceeding to interpretation.
2025-07-29 15:25:40 [INFO    ] SQLAgent: Interpreting query results into natural language answer.
2025-07-29 15:25:40 [DEBUG   ] SQLAgent: Message history for interpretation: [('HumanMessage', 'hi whats upp show me the email of Arun Pandey user?'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist'), ('AIMessage', ''), ('ToolMessage', "\nCREATE TABLE cart (\n\tcart_id INTEGER, \n\tuser_id INTEGER, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (cart_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from cart table:\ncart_id\tuser_id\tcreated_at\n1\t1\t2025-07-28 17:03:54\n2\t2\t2025-07-28 17:03:54\n3\t3\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE cart_items (\n\tcart_item_id INTEGER, \n\tcart_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tPRIMARY KEY (cart_item_id), \n\tFOREIGN KEY(cart_id) REFERENCES cart (cart_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from cart_items table:\ncart_item_id\tcart_id\tproduct_id\tquantity\n1\t1\t3\t1\n2\t2\t4\t2\n3\t3\t2\t1\n*/\n\n\nCREATE TABLE categories (\n\tcategory_id INTEGER, \n\tcategory_name TEXT NOT NULL, \n\tdescription TEXT, \n\tPRIMARY KEY (category_id)\n)\n\n/*\n3 rows from categories table:\ncategory_id\tcategory_name\tdescription\n1\tMobiles\tSmartphones and accessories\n2\tClothing\tMen and Women fashion\n3\tComputers\tLaptops and peripherals\n*/\n\n\nCREATE TABLE coupons (\n\tcoupon_id INTEGER, \n\tcode TEXT, \n\tdiscount_percent INTEGER, \n\tvalid_from DATE, \n\tvalid_to DATE, \n\tPRIMARY KEY (coupon_id), \n\tUNIQUE (code), \n\tCHECK (discount_percent BETWEEN 1 AND 100)\n)\n\n/*\n3 rows from coupons table:\ncoupon_id\tcode\tdiscount_percent\tvalid_from\tvalid_to\n1\tNEPAL10\t10\t2025-07-01\t2025-12-31\n2\tFEST20\t20\t2025-07-01\t2025-12-31\n3\tWELCOME5\t5\t2025-07-01\t2025-12-31\n*/\n\n\nCREATE TABLE order_coupons (\n\tid INTEGER, \n\torder_id INTEGER, \n\tcoupon_id INTEGER, \n\tPRIMARY KEY (id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(coupon_id) REFERENCES coupons (coupon_id)\n)\n\n/*\n3 rows from order_coupons table:\nid\torder_id\tcoupon_id\n1\t1\t1\n2\t2\t2\n3\t3\t3\n*/\n\n\nCREATE TABLE order_items (\n\torder_item_id INTEGER, \n\torder_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tprice REAL NOT NULL, \n\tPRIMARY KEY (order_item_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from order_items table:\norder_item_id\torder_id\tproduct_id\tquantity\tprice\n1\t1\t1\t1\t550.0\n2\t2\t3\t1\t120.0\n3\t3\t4\t1\t1300.0\n*/\n\n\nCREATE TABLE orders (\n\torder_id INTEGER, \n\tuser_id INTEGER, \n\torder_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tstatus TEXT DEFAULT 'Pending', \n\ttotal_amount REAL, \n\tPRIMARY KEY (order_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from orders table:\norder_id\tuser_id\torder_date\tstatus\ttotal_amount\n1\t1\t2025-07-28 17:03:54\tPending\t550.0\n2\t2\t2025-07-28 17:03:54\tPending\t120.0\n3\t3\t2025-07-28 17:03:54\tPending\t1300.0\n*/\n\n\nCREATE TABLE payments (\n\tpayment_id INTEGER, \n\torder_id INTEGER, \n\tpayment_method TEXT, \n\tamount REAL, \n\tpayment_status TEXT DEFAULT 'Pending', \n\tpaid_at TIMESTAMP, \n\tPRIMARY KEY (payment_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from payments table:\npayment_id\torder_id\tpayment_method\tamount\tpayment_status\tpaid_at\n1\t1\tEsewa\t550.0\tCompleted\tNone\n2\t2\tKhalti\t120.0\tCompleted\tNone\n3\t3\tCash\t1300.0\tPending\tNone\n*/\n\n\nCREATE TABLE product_images (\n\timage_id INTEGER, \n\tproduct_id INTEGER, \n\timage_url TEXT NOT NULL, \n\tPRIMARY KEY (image_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from product_images table:\nimage_id\tproduct_id\timage_url\n1\t1\tsamsung.jpg\n2\t2\tiphone.jpg\n3\t3\tcoat.jpg\n*/\n\n\nCREATE TABLE products (\n\tproduct_id INTEGER, \n\tcategory_id INTEGER, \n\tname TEXT NOT NULL, \n\tdescription TEXT, \n\tprice REAL NOT NULL, \n\tstock INTEGER DEFAULT 0, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (product_id), \n\tFOREIGN KEY(category_id) REFERENCES categories (category_id)\n)\n\n/*\n3 rows from products table:\nproduct_id\tcategory_id\tname\tdescription\tprice\tstock\tcreated_at\n1\t1\tSamsung Galaxy A55\t5G smartphone with AMOLED display\t550.0\t50\t2025-07-28 17:03:54\n2\t1\tiPhone 15\tLatest Apple flagship smartphone\t999.0\t30\t2025-07-28 17:03:54\n3\t2\tWinter Coat\tStylish warm coat for winter\t120.0\t25\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE reviews (\n\treview_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\trating INTEGER, \n\tcomment TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (review_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id), \n\tCHECK (rating BETWEEN 1 AND 5)\n)\n\n/*\n3 rows from reviews table:\nreview_id\tuser_id\tproduct_id\trating\tcomment\tcreated_at\n1\t1\t1\t5\tExcellent smartphone!\t2025-07-28 17:03:54\n2\t2\t3\t4\tCoat is warm and stylish.\t2025-07-28 17:03:54\n3\t3\t4\t5\tLaptop is powerful.\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE shipping (\n\tshipping_id INTEGER, \n\torder_id INTEGER, \n\ttracking_number TEXT, \n\tshipping_address TEXT, \n\tshipping_date TIMESTAMP, \n\tdelivery_date TIMESTAMP, \n\tstatus TEXT DEFAULT 'Preparing', \n\tPRIMARY KEY (shipping_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from shipping table:\nshipping_id\torder_id\ttracking_number\tshipping_address\tshipping_date\tdelivery_date\tstatus\n1\t1\tTRK001\tKathmandu\t2025-07-01 00:00:00\t2025-07-05 00:00:00\tDelivered\n2\t2\tTRK002\tPokhara\t2025-07-02 00:00:00\t2025-07-06 00:00:00\tDelivered\n3\t3\tTRK003\tButwal\t2025-07-03 00:00:00\t2025-07-08 00:00:00\tShipped\n*/\n\n\nCREATE TABLE users (\n\tuser_id INTEGER, \n\tname TEXT, \n\temail TEXT, \n\tpassword TEXT, \n\tphone TEXT, \n\taddress TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (user_id), \n\tUNIQUE (email)\n)\n\n/*\n3 rows from users table:\nuser_id\tname\temail\tpassword\tphone\taddress\tcreated_at\n1\tArun Pandey\tarun@example.com\tpass\t9801111111\tKathmandu\t2025-07-28 17:03:54\n2\tSita Sharma\tsita@example.com\tpass\t9802222222\tPokhara\t2025-07-28 17:03:54\n3\tRam Thapa\tram@example.com\tpass\t9803333333\tButwal\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE wishlist (\n\twishlist_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\tadded_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (wishlist_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from wishlist table:\nwishlist_id\tuser_id\tproduct_id\tadded_at\n1\t1\t2\t2025-07-28 17:03:54\n2\t2\t3\t2025-07-28 17:03:54\n3\t3\t1\t2025-07-28 17:03:54\n*/"), ('AIMessage', "SELECT email FROM users WHERE name = 'Arun Pandey';"), ('ToolMessage', "[('arun@example.com',)]")]
2025-07-29 15:25:40 [INFO    ] SQLAgent: Invoking LLM for result interpretation...
2025-07-29 15:25:41 [INFO    ] SQLAgent: LLM interpretation completed in 0.44 seconds.
2025-07-29 15:25:41 [DEBUG   ] SQLAgent: Interpretation result: Answer: The email of Arun Pandey is arun@example.com.
2025-07-29 15:25:41 [INFO    ] SQLAgent: Final answer generated. Ending workflow.
2025-07-29 15:25:41 [INFO    ] SQLAgent: Agent workflow completed in 1.44 seconds.
2025-07-29 15:25:41 [DEBUG   ] SQLAgent: Extracting final SQL query from message history.
2025-07-29 15:25:41 [DEBUG   ] SQLAgent: Extracted SQL query: SELECT email FROM users WHERE name = 'Arun Pandey';
2025-07-29 15:25:41 [INFO    ] SQLAgent: Final SQL Query: SELECT email FROM users WHERE name = 'Arun Pandey';
2025-07-29 15:25:41 [INFO    ] SQLAgent: Final Answer: Answer: The email of Arun Pandey is arun@example.com.
2025-07-29 15:25:41 [INFO    ] SQLAgent: ===  Query Execution Completed ===
2025-07-29 20:35:30 [INFO    ] SQLAgent: === SQL Agent Logger Initialized (Console Output Disabled, ALL Log Levels Captured) ===
2025-07-29 20:35:30 [DEBUG   ] SQLAgent: DEBUG level logging enabled - all detailed information will be captured
2025-07-29 20:35:30 [WARNING ] SQLAgent: WARNING level logging enabled - all warnings will be captured
2025-07-29 20:35:30 [ERROR   ] SQLAgent: ERROR level logging enabled - all errors will be captured
2025-07-29 20:35:30 [CRITICAL] SQLAgent: CRITICAL level logging enabled - all critical issues will be captured
2025-07-29 20:35:59 [INFO    ] SQLAgent: === SQL Agent Logger Initialized (Console Output Disabled, ALL Log Levels Captured) ===
2025-07-29 20:35:59 [DEBUG   ] SQLAgent: DEBUG level logging enabled - all detailed information will be captured
2025-07-29 20:35:59 [WARNING ] SQLAgent: WARNING level logging enabled - all warnings will be captured
2025-07-29 20:35:59 [ERROR   ] SQLAgent: ERROR level logging enabled - all errors will be captured
2025-07-29 20:35:59 [CRITICAL] SQLAgent: CRITICAL level logging enabled - all critical issues will be captured
2025-07-29 20:35:59 [INFO    ] SQLAgent: === Starting SQL Agent  ===
2025-07-29 20:35:59 [INFO    ] SQLAgent: Initializing SQLAgent...
2025-07-29 20:35:59 [DEBUG   ] SQLAgent: Input - db_path: D:\ML(ExtraClass Project)\AGENT AI\SQL-Sage-Intelligent-DB-Agent-with-Gemini-LangGraph\database\final_ecommerce.db, model_name: llama-3.1-8b-instant
2025-07-29 20:35:59 [DEBUG   ] SQLAgent: Connection string created: sqlite:///D:\ML(ExtraClass Project)\AGENT AI\SQL-Sage-Intelligent-DB-Agent-with-Gemini-LangGraph\database\final_ecommerce.db
2025-07-29 20:35:59 [INFO    ] SQLAgent: Connected to SQLite database.
2025-07-29 20:35:59 [DEBUG   ] SQLAgent: Database usable tables: ['cart', 'cart_items', 'categories', 'coupons', 'order_coupons', 'order_items', 'orders', 'payments', 'product_images', 'products', 'reviews', 'shipping', 'users', 'wishlist']
2025-07-29 20:36:01 [INFO    ] SQLAgent: Groq LLM initialized with model: llama-3.1-8b-instant
2025-07-29 20:36:01 [INFO    ] SQLAgent: Starting _setup_tools...
2025-07-29 20:36:01 [DEBUG   ] SQLAgent: Fetched 4 tools from toolkit: ['sql_db_query', 'sql_db_schema', 'sql_db_list_tables', 'sql_db_query_checker']
2025-07-29 20:36:01 [DEBUG   ] SQLAgent: Tool 'sql_db_list_tables' loaded.
2025-07-29 20:36:01 [DEBUG   ] SQLAgent: Tool 'sql_db_schema' loaded.
2025-07-29 20:36:01 [INFO    ] SQLAgent: All tools setup completed.
2025-07-29 20:36:01 [INFO    ] SQLAgent: Setting up prompts...
2025-07-29 20:36:01 [DEBUG   ] SQLAgent: Query generation prompt created.
2025-07-29 20:36:01 [DEBUG   ] SQLAgent: Interpretation prompt created.
2025-07-29 20:36:01 [INFO    ] SQLAgent: Prompts setup completed.
2025-07-29 20:36:01 [DEBUG   ] SQLAgent: Intent classification prompt added.
2025-07-29 20:36:01 [INFO    ] SQLAgent: Building LangGraph workflow...
2025-07-29 20:36:01 [DEBUG   ] SQLAgent: Node 'first_tool_call' added to graph.
2025-07-29 20:36:01 [DEBUG   ] SQLAgent: Creating tool node with fallback for tools: ['sql_db_list_tables']
2025-07-29 20:36:01 [DEBUG   ] SQLAgent: Tool node with fallback created.
2025-07-29 20:36:01 [DEBUG   ] SQLAgent: Node 'list_tables_tool' added to graph.
2025-07-29 20:36:01 [DEBUG   ] SQLAgent: Node 'model_get_schema' added to graph.
2025-07-29 20:36:01 [DEBUG   ] SQLAgent: Creating tool node with fallback for tools: ['sql_db_schema']
2025-07-29 20:36:01 [DEBUG   ] SQLAgent: Tool node with fallback created.
2025-07-29 20:36:01 [DEBUG   ] SQLAgent: Node 'get_schema_tool' added to graph.
2025-07-29 20:36:01 [DEBUG   ] SQLAgent: Node 'query_gen' added to graph.
2025-07-29 20:36:01 [DEBUG   ] SQLAgent: Node 'execute_query' added to graph.
2025-07-29 20:36:01 [DEBUG   ] SQLAgent: Node 'interpret_results' added to graph.
2025-07-29 20:36:01 [DEBUG   ] SQLAgent: Edge: START → first_tool_call
2025-07-29 20:36:01 [DEBUG   ] SQLAgent: Edge: first_tool_call → list_tables_tool
2025-07-29 20:36:01 [DEBUG   ] SQLAgent: Edge: list_tables_tool → model_get_schema
2025-07-29 20:36:01 [DEBUG   ] SQLAgent: Edge: model_get_schema → get_schema_tool
2025-07-29 20:36:01 [DEBUG   ] SQLAgent: Edge: get_schema_tool → query_gen
2025-07-29 20:36:01 [DEBUG   ] SQLAgent: Conditional edges added from 'query_gen'
2025-07-29 20:36:01 [DEBUG   ] SQLAgent: Conditional edges added from 'execute_query'
2025-07-29 20:36:01 [DEBUG   ] SQLAgent: Conditional edges added from 'interpret_results'
2025-07-29 20:36:01 [INFO    ] SQLAgent: LangGraph workflow compiled successfully.
2025-07-29 20:36:01 [INFO    ] SQLAgent: SQLAgent initialization completed.
2025-07-29 20:36:01 [INFO    ] SQLAgent: SQLAgent instance created.
2025-07-29 20:36:01 [INFO    ] SQLAgent: === Query Execution ===
2025-07-29 20:36:01 [INFO    ] SQLAgent: Received query: 'hi whats upp show me the email of Arun Pandey user?'
2025-07-29 20:36:02 [INFO    ] SQLAgent: Intent classification result: 'query'
2025-07-29 20:36:02 [INFO    ] SQLAgent: Setting recursion limit: 15
2025-07-29 20:36:02 [INFO    ] SQLAgent: Invoking agent workflow...
2025-07-29 20:36:02 [INFO    ] SQLAgent: Executing first_tool_call: requesting list of tables.
2025-07-29 20:36:02 [DEBUG   ] SQLAgent: first_tool_call response prepared.
2025-07-29 20:36:02 [INFO    ] SQLAgent: Calling model_get_schema to fetch schema.
2025-07-29 20:36:02 [DEBUG   ] SQLAgent: Current message history: [('HumanMessage', 'hi whats upp show me the email of Arun Pandey user?'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist')]
2025-07-29 20:36:02 [INFO    ] SQLAgent: LLM schema request took 0.46 seconds.
2025-07-29 20:36:02 [DEBUG   ] SQLAgent: Schema response: content='' additional_kwargs={'tool_calls': [{'id': 'f8dsw3th2', 'function': {'arguments': '{"table_names":"users,cart,cart_items,categories,coupons,order_coupons,order_items,orders,payments,product_images,products,reviews,shipping,wishlist"}', 'name': 'sql_db_schema'}, 'type': 'function'}]} response_metadata={'token_usage': {'completion_tokens': 50, 'prompt_tokens': 401, 'total_tokens': 451, 'completion_time': 0.066666667, 'prompt_time': 0.061362696, 'queue_time': 0.05543958399999999, 'total_time': 0.128029363}, 'model_name': 'llama-3.1-8b-instant', 'system_fingerprint': 'fp_c523237e5d', 'service_tier': 'on_demand', 'finish_reason': 'tool_calls', 'logprobs': None} id='run--c1af4081-195c-484e-8db9-d694799ec3ef-0' tool_calls=[{'name': 'sql_db_schema', 'args': {'table_names': 'users,cart,cart_items,categories,coupons,order_coupons,order_items,orders,payments,product_images,products,reviews,shipping,wishlist'}, 'id': 'f8dsw3th2', 'type': 'tool_call'}] usage_metadata={'input_tokens': 401, 'output_tokens': 50, 'total_tokens': 451}
2025-07-29 20:36:02 [INFO    ] SQLAgent: Entering query_gen_node to generate SQL query.
2025-07-29 20:36:02 [DEBUG   ] SQLAgent: Message history: [('HumanMessage', 'hi whats upp show me the email of Arun Pandey user?'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist'), ('AIMessage', ''), ('ToolMessage', "\nCREATE TABLE cart (\n\tcart_id INTEGER, \n\tuser_id INTEGER, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (cart_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from cart table:\ncart_id\tuser_id\tcreated_at\n1\t1\t2025-07-28 17:03:54\n2\t2\t2025-07-28 17:03:54\n3\t3\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE cart_items (\n\tcart_item_id INTEGER, \n\tcart_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tPRIMARY KEY (cart_item_id), \n\tFOREIGN KEY(cart_id) REFERENCES cart (cart_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from cart_items table:\ncart_item_id\tcart_id\tproduct_id\tquantity\n1\t1\t3\t1\n2\t2\t4\t2\n3\t3\t2\t1\n*/\n\n\nCREATE TABLE categories (\n\tcategory_id INTEGER, \n\tcategory_name TEXT NOT NULL, \n\tdescription TEXT, \n\tPRIMARY KEY (category_id)\n)\n\n/*\n3 rows from categories table:\ncategory_id\tcategory_name\tdescription\n1\tMobiles\tSmartphones and accessories\n2\tClothing\tMen and Women fashion\n3\tComputers\tLaptops and peripherals\n*/\n\n\nCREATE TABLE coupons (\n\tcoupon_id INTEGER, \n\tcode TEXT, \n\tdiscount_percent INTEGER, \n\tvalid_from DATE, \n\tvalid_to DATE, \n\tPRIMARY KEY (coupon_id), \n\tUNIQUE (code), \n\tCHECK (discount_percent BETWEEN 1 AND 100)\n)\n\n/*\n3 rows from coupons table:\ncoupon_id\tcode\tdiscount_percent\tvalid_from\tvalid_to\n1\tNEPAL10\t10\t2025-07-01\t2025-12-31\n2\tFEST20\t20\t2025-07-01\t2025-12-31\n3\tWELCOME5\t5\t2025-07-01\t2025-12-31\n*/\n\n\nCREATE TABLE order_coupons (\n\tid INTEGER, \n\torder_id INTEGER, \n\tcoupon_id INTEGER, \n\tPRIMARY KEY (id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(coupon_id) REFERENCES coupons (coupon_id)\n)\n\n/*\n3 rows from order_coupons table:\nid\torder_id\tcoupon_id\n1\t1\t1\n2\t2\t2\n3\t3\t3\n*/\n\n\nCREATE TABLE order_items (\n\torder_item_id INTEGER, \n\torder_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tprice REAL NOT NULL, \n\tPRIMARY KEY (order_item_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from order_items table:\norder_item_id\torder_id\tproduct_id\tquantity\tprice\n1\t1\t1\t1\t550.0\n2\t2\t3\t1\t120.0\n3\t3\t4\t1\t1300.0\n*/\n\n\nCREATE TABLE orders (\n\torder_id INTEGER, \n\tuser_id INTEGER, \n\torder_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tstatus TEXT DEFAULT 'Pending', \n\ttotal_amount REAL, \n\tPRIMARY KEY (order_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from orders table:\norder_id\tuser_id\torder_date\tstatus\ttotal_amount\n1\t1\t2025-07-28 17:03:54\tPending\t550.0\n2\t2\t2025-07-28 17:03:54\tPending\t120.0\n3\t3\t2025-07-28 17:03:54\tPending\t1300.0\n*/\n\n\nCREATE TABLE payments (\n\tpayment_id INTEGER, \n\torder_id INTEGER, \n\tpayment_method TEXT, \n\tamount REAL, \n\tpayment_status TEXT DEFAULT 'Pending', \n\tpaid_at TIMESTAMP, \n\tPRIMARY KEY (payment_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from payments table:\npayment_id\torder_id\tpayment_method\tamount\tpayment_status\tpaid_at\n1\t1\tEsewa\t550.0\tCompleted\tNone\n2\t2\tKhalti\t120.0\tCompleted\tNone\n3\t3\tCash\t1300.0\tPending\tNone\n*/\n\n\nCREATE TABLE product_images (\n\timage_id INTEGER, \n\tproduct_id INTEGER, \n\timage_url TEXT NOT NULL, \n\tPRIMARY KEY (image_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from product_images table:\nimage_id\tproduct_id\timage_url\n1\t1\tsamsung.jpg\n2\t2\tiphone.jpg\n3\t3\tcoat.jpg\n*/\n\n\nCREATE TABLE products (\n\tproduct_id INTEGER, \n\tcategory_id INTEGER, \n\tname TEXT NOT NULL, \n\tdescription TEXT, \n\tprice REAL NOT NULL, \n\tstock INTEGER DEFAULT 0, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (product_id), \n\tFOREIGN KEY(category_id) REFERENCES categories (category_id)\n)\n\n/*\n3 rows from products table:\nproduct_id\tcategory_id\tname\tdescription\tprice\tstock\tcreated_at\n1\t1\tSamsung Galaxy A55\t5G smartphone with AMOLED display\t550.0\t50\t2025-07-28 17:03:54\n2\t1\tiPhone 15\tLatest Apple flagship smartphone\t999.0\t30\t2025-07-28 17:03:54\n3\t2\tWinter Coat\tStylish warm coat for winter\t120.0\t25\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE reviews (\n\treview_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\trating INTEGER, \n\tcomment TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (review_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id), \n\tCHECK (rating BETWEEN 1 AND 5)\n)\n\n/*\n3 rows from reviews table:\nreview_id\tuser_id\tproduct_id\trating\tcomment\tcreated_at\n1\t1\t1\t5\tExcellent smartphone!\t2025-07-28 17:03:54\n2\t2\t3\t4\tCoat is warm and stylish.\t2025-07-28 17:03:54\n3\t3\t4\t5\tLaptop is powerful.\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE shipping (\n\tshipping_id INTEGER, \n\torder_id INTEGER, \n\ttracking_number TEXT, \n\tshipping_address TEXT, \n\tshipping_date TIMESTAMP, \n\tdelivery_date TIMESTAMP, \n\tstatus TEXT DEFAULT 'Preparing', \n\tPRIMARY KEY (shipping_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from shipping table:\nshipping_id\torder_id\ttracking_number\tshipping_address\tshipping_date\tdelivery_date\tstatus\n1\t1\tTRK001\tKathmandu\t2025-07-01 00:00:00\t2025-07-05 00:00:00\tDelivered\n2\t2\tTRK002\tPokhara\t2025-07-02 00:00:00\t2025-07-06 00:00:00\tDelivered\n3\t3\tTRK003\tButwal\t2025-07-03 00:00:00\t2025-07-08 00:00:00\tShipped\n*/\n\n\nCREATE TABLE users (\n\tuser_id INTEGER, \n\tname TEXT, \n\temail TEXT, \n\tpassword TEXT, \n\tphone TEXT, \n\taddress TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (user_id), \n\tUNIQUE (email)\n)\n\n/*\n3 rows from users table:\nuser_id\tname\temail\tpassword\tphone\taddress\tcreated_at\n1\tArun Pandey\tarun@example.com\tpass\t9801111111\tKathmandu\t2025-07-28 17:03:54\n2\tSita Sharma\tsita@example.com\tpass\t9802222222\tPokhara\t2025-07-28 17:03:54\n3\tRam Thapa\tram@example.com\tpass\t9803333333\tButwal\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE wishlist (\n\twishlist_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\tadded_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (wishlist_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from wishlist table:\nwishlist_id\tuser_id\tproduct_id\tadded_at\n1\t1\t2\t2025-07-28 17:03:54\n2\t2\t3\t2025-07-28 17:03:54\n3\t3\t1\t2025-07-28 17:03:54\n*/")]
2025-07-29 20:36:02 [DEBUG   ] SQLAgent: Query attempt #1
2025-07-29 20:36:02 [INFO    ] SQLAgent: Invoking LLM for SQL generation...
2025-07-29 20:36:03 [INFO    ] SQLAgent: LLM generated SQL in 0.63 seconds.
2025-07-29 20:36:03 [DEBUG   ] SQLAgent: LLM response content: SELECT email FROM users WHERE name = 'Arun Pandey';
2025-07-29 20:36:03 [INFO    ] SQLAgent: Valid SELECT query detected. Proceeding to execute_query.
2025-07-29 20:36:03 [INFO    ] SQLAgent: Executing SQL query from last message.
2025-07-29 20:36:03 [DEBUG   ] SQLAgent: Last message type: AIMessage, content: SELECT email FROM users WHERE name = 'Arun Pandey';
2025-07-29 20:36:03 [DEBUG   ] SQLAgent: Raw SQL content: SELECT email FROM users WHERE name = 'Arun Pandey';
2025-07-29 20:36:03 [INFO    ] SQLAgent: Extracted SQL query: SELECT email FROM users WHERE name = 'Arun Pandey';
2025-07-29 20:36:03 [INFO    ] SQLAgent: Query executed in 0.00 seconds.
2025-07-29 20:36:03 [INFO    ] SQLAgent: Query result: [('arun@example.com',)]
2025-07-29 20:36:03 [INFO    ] SQLAgent: Query executed successfully. Proceeding to interpretation.
2025-07-29 20:36:03 [INFO    ] SQLAgent: Interpreting query results into natural language answer.
2025-07-29 20:36:03 [DEBUG   ] SQLAgent: Message history for interpretation: [('HumanMessage', 'hi whats upp show me the email of Arun Pandey user?'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist'), ('AIMessage', ''), ('ToolMessage', "\nCREATE TABLE cart (\n\tcart_id INTEGER, \n\tuser_id INTEGER, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (cart_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from cart table:\ncart_id\tuser_id\tcreated_at\n1\t1\t2025-07-28 17:03:54\n2\t2\t2025-07-28 17:03:54\n3\t3\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE cart_items (\n\tcart_item_id INTEGER, \n\tcart_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tPRIMARY KEY (cart_item_id), \n\tFOREIGN KEY(cart_id) REFERENCES cart (cart_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from cart_items table:\ncart_item_id\tcart_id\tproduct_id\tquantity\n1\t1\t3\t1\n2\t2\t4\t2\n3\t3\t2\t1\n*/\n\n\nCREATE TABLE categories (\n\tcategory_id INTEGER, \n\tcategory_name TEXT NOT NULL, \n\tdescription TEXT, \n\tPRIMARY KEY (category_id)\n)\n\n/*\n3 rows from categories table:\ncategory_id\tcategory_name\tdescription\n1\tMobiles\tSmartphones and accessories\n2\tClothing\tMen and Women fashion\n3\tComputers\tLaptops and peripherals\n*/\n\n\nCREATE TABLE coupons (\n\tcoupon_id INTEGER, \n\tcode TEXT, \n\tdiscount_percent INTEGER, \n\tvalid_from DATE, \n\tvalid_to DATE, \n\tPRIMARY KEY (coupon_id), \n\tUNIQUE (code), \n\tCHECK (discount_percent BETWEEN 1 AND 100)\n)\n\n/*\n3 rows from coupons table:\ncoupon_id\tcode\tdiscount_percent\tvalid_from\tvalid_to\n1\tNEPAL10\t10\t2025-07-01\t2025-12-31\n2\tFEST20\t20\t2025-07-01\t2025-12-31\n3\tWELCOME5\t5\t2025-07-01\t2025-12-31\n*/\n\n\nCREATE TABLE order_coupons (\n\tid INTEGER, \n\torder_id INTEGER, \n\tcoupon_id INTEGER, \n\tPRIMARY KEY (id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(coupon_id) REFERENCES coupons (coupon_id)\n)\n\n/*\n3 rows from order_coupons table:\nid\torder_id\tcoupon_id\n1\t1\t1\n2\t2\t2\n3\t3\t3\n*/\n\n\nCREATE TABLE order_items (\n\torder_item_id INTEGER, \n\torder_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tprice REAL NOT NULL, \n\tPRIMARY KEY (order_item_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from order_items table:\norder_item_id\torder_id\tproduct_id\tquantity\tprice\n1\t1\t1\t1\t550.0\n2\t2\t3\t1\t120.0\n3\t3\t4\t1\t1300.0\n*/\n\n\nCREATE TABLE orders (\n\torder_id INTEGER, \n\tuser_id INTEGER, \n\torder_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tstatus TEXT DEFAULT 'Pending', \n\ttotal_amount REAL, \n\tPRIMARY KEY (order_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from orders table:\norder_id\tuser_id\torder_date\tstatus\ttotal_amount\n1\t1\t2025-07-28 17:03:54\tPending\t550.0\n2\t2\t2025-07-28 17:03:54\tPending\t120.0\n3\t3\t2025-07-28 17:03:54\tPending\t1300.0\n*/\n\n\nCREATE TABLE payments (\n\tpayment_id INTEGER, \n\torder_id INTEGER, \n\tpayment_method TEXT, \n\tamount REAL, \n\tpayment_status TEXT DEFAULT 'Pending', \n\tpaid_at TIMESTAMP, \n\tPRIMARY KEY (payment_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from payments table:\npayment_id\torder_id\tpayment_method\tamount\tpayment_status\tpaid_at\n1\t1\tEsewa\t550.0\tCompleted\tNone\n2\t2\tKhalti\t120.0\tCompleted\tNone\n3\t3\tCash\t1300.0\tPending\tNone\n*/\n\n\nCREATE TABLE product_images (\n\timage_id INTEGER, \n\tproduct_id INTEGER, \n\timage_url TEXT NOT NULL, \n\tPRIMARY KEY (image_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from product_images table:\nimage_id\tproduct_id\timage_url\n1\t1\tsamsung.jpg\n2\t2\tiphone.jpg\n3\t3\tcoat.jpg\n*/\n\n\nCREATE TABLE products (\n\tproduct_id INTEGER, \n\tcategory_id INTEGER, \n\tname TEXT NOT NULL, \n\tdescription TEXT, \n\tprice REAL NOT NULL, \n\tstock INTEGER DEFAULT 0, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (product_id), \n\tFOREIGN KEY(category_id) REFERENCES categories (category_id)\n)\n\n/*\n3 rows from products table:\nproduct_id\tcategory_id\tname\tdescription\tprice\tstock\tcreated_at\n1\t1\tSamsung Galaxy A55\t5G smartphone with AMOLED display\t550.0\t50\t2025-07-28 17:03:54\n2\t1\tiPhone 15\tLatest Apple flagship smartphone\t999.0\t30\t2025-07-28 17:03:54\n3\t2\tWinter Coat\tStylish warm coat for winter\t120.0\t25\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE reviews (\n\treview_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\trating INTEGER, \n\tcomment TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (review_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id), \n\tCHECK (rating BETWEEN 1 AND 5)\n)\n\n/*\n3 rows from reviews table:\nreview_id\tuser_id\tproduct_id\trating\tcomment\tcreated_at\n1\t1\t1\t5\tExcellent smartphone!\t2025-07-28 17:03:54\n2\t2\t3\t4\tCoat is warm and stylish.\t2025-07-28 17:03:54\n3\t3\t4\t5\tLaptop is powerful.\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE shipping (\n\tshipping_id INTEGER, \n\torder_id INTEGER, \n\ttracking_number TEXT, \n\tshipping_address TEXT, \n\tshipping_date TIMESTAMP, \n\tdelivery_date TIMESTAMP, \n\tstatus TEXT DEFAULT 'Preparing', \n\tPRIMARY KEY (shipping_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from shipping table:\nshipping_id\torder_id\ttracking_number\tshipping_address\tshipping_date\tdelivery_date\tstatus\n1\t1\tTRK001\tKathmandu\t2025-07-01 00:00:00\t2025-07-05 00:00:00\tDelivered\n2\t2\tTRK002\tPokhara\t2025-07-02 00:00:00\t2025-07-06 00:00:00\tDelivered\n3\t3\tTRK003\tButwal\t2025-07-03 00:00:00\t2025-07-08 00:00:00\tShipped\n*/\n\n\nCREATE TABLE users (\n\tuser_id INTEGER, \n\tname TEXT, \n\temail TEXT, \n\tpassword TEXT, \n\tphone TEXT, \n\taddress TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (user_id), \n\tUNIQUE (email)\n)\n\n/*\n3 rows from users table:\nuser_id\tname\temail\tpassword\tphone\taddress\tcreated_at\n1\tArun Pandey\tarun@example.com\tpass\t9801111111\tKathmandu\t2025-07-28 17:03:54\n2\tSita Sharma\tsita@example.com\tpass\t9802222222\tPokhara\t2025-07-28 17:03:54\n3\tRam Thapa\tram@example.com\tpass\t9803333333\tButwal\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE wishlist (\n\twishlist_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\tadded_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (wishlist_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from wishlist table:\nwishlist_id\tuser_id\tproduct_id\tadded_at\n1\t1\t2\t2025-07-28 17:03:54\n2\t2\t3\t2025-07-28 17:03:54\n3\t3\t1\t2025-07-28 17:03:54\n*/"), ('AIMessage', "SELECT email FROM users WHERE name = 'Arun Pandey';"), ('ToolMessage', "[('arun@example.com',)]")]
2025-07-29 20:36:03 [INFO    ] SQLAgent: Invoking LLM for result interpretation...
2025-07-29 20:36:04 [INFO    ] SQLAgent: LLM interpretation completed in 1.21 seconds.
2025-07-29 20:36:04 [DEBUG   ] SQLAgent: Interpretation result: Answer: The email of Arun Pandey is arun@example.com.
2025-07-29 20:36:04 [INFO    ] SQLAgent: Final answer generated. Ending workflow.
2025-07-29 20:36:04 [INFO    ] SQLAgent: Agent workflow completed in 2.41 seconds.
2025-07-29 20:36:04 [DEBUG   ] SQLAgent: Extracting final SQL query from message history.
2025-07-29 20:36:04 [DEBUG   ] SQLAgent: Extracted SQL query: SELECT email FROM users WHERE name = 'Arun Pandey';
2025-07-29 20:36:04 [INFO    ] SQLAgent: Final SQL Query: SELECT email FROM users WHERE name = 'Arun Pandey';
2025-07-29 20:36:04 [INFO    ] SQLAgent: Final Answer: Answer: The email of Arun Pandey is arun@example.com.
2025-07-29 20:36:04 [INFO    ] SQLAgent: ===  Query Execution Completed ===
2025-07-29 20:36:10 [INFO    ] SQLAgent: === Starting SQL Agent  ===
2025-07-29 20:36:10 [INFO    ] SQLAgent: Initializing SQLAgent...
2025-07-29 20:36:10 [DEBUG   ] SQLAgent: Input - db_path: D:\ML(ExtraClass Project)\AGENT AI\SQL-Sage-Intelligent-DB-Agent-with-Gemini-LangGraph\database\final_ecommerce.db, model_name: llama-3.1-8b-instant
2025-07-29 20:36:10 [DEBUG   ] SQLAgent: Connection string created: sqlite:///D:\ML(ExtraClass Project)\AGENT AI\SQL-Sage-Intelligent-DB-Agent-with-Gemini-LangGraph\database\final_ecommerce.db
2025-07-29 20:36:10 [INFO    ] SQLAgent: Connected to SQLite database.
2025-07-29 20:36:10 [DEBUG   ] SQLAgent: Database usable tables: ['cart', 'cart_items', 'categories', 'coupons', 'order_coupons', 'order_items', 'orders', 'payments', 'product_images', 'products', 'reviews', 'shipping', 'users', 'wishlist']
2025-07-29 20:36:11 [INFO    ] SQLAgent: Groq LLM initialized with model: llama-3.1-8b-instant
2025-07-29 20:36:11 [INFO    ] SQLAgent: Starting _setup_tools...
2025-07-29 20:36:11 [DEBUG   ] SQLAgent: Fetched 4 tools from toolkit: ['sql_db_query', 'sql_db_schema', 'sql_db_list_tables', 'sql_db_query_checker']
2025-07-29 20:36:11 [DEBUG   ] SQLAgent: Tool 'sql_db_list_tables' loaded.
2025-07-29 20:36:11 [DEBUG   ] SQLAgent: Tool 'sql_db_schema' loaded.
2025-07-29 20:36:11 [INFO    ] SQLAgent: All tools setup completed.
2025-07-29 20:36:11 [INFO    ] SQLAgent: Setting up prompts...
2025-07-29 20:36:11 [DEBUG   ] SQLAgent: Query generation prompt created.
2025-07-29 20:36:11 [DEBUG   ] SQLAgent: Interpretation prompt created.
2025-07-29 20:36:11 [INFO    ] SQLAgent: Prompts setup completed.
2025-07-29 20:36:11 [DEBUG   ] SQLAgent: Intent classification prompt added.
2025-07-29 20:36:11 [INFO    ] SQLAgent: Building LangGraph workflow...
2025-07-29 20:36:11 [DEBUG   ] SQLAgent: Node 'first_tool_call' added to graph.
2025-07-29 20:36:11 [DEBUG   ] SQLAgent: Creating tool node with fallback for tools: ['sql_db_list_tables']
2025-07-29 20:36:11 [DEBUG   ] SQLAgent: Tool node with fallback created.
2025-07-29 20:36:11 [DEBUG   ] SQLAgent: Node 'list_tables_tool' added to graph.
2025-07-29 20:36:11 [DEBUG   ] SQLAgent: Node 'model_get_schema' added to graph.
2025-07-29 20:36:11 [DEBUG   ] SQLAgent: Creating tool node with fallback for tools: ['sql_db_schema']
2025-07-29 20:36:11 [DEBUG   ] SQLAgent: Tool node with fallback created.
2025-07-29 20:36:11 [DEBUG   ] SQLAgent: Node 'get_schema_tool' added to graph.
2025-07-29 20:36:11 [DEBUG   ] SQLAgent: Node 'query_gen' added to graph.
2025-07-29 20:36:11 [DEBUG   ] SQLAgent: Node 'execute_query' added to graph.
2025-07-29 20:36:11 [DEBUG   ] SQLAgent: Node 'interpret_results' added to graph.
2025-07-29 20:36:11 [DEBUG   ] SQLAgent: Edge: START → first_tool_call
2025-07-29 20:36:11 [DEBUG   ] SQLAgent: Edge: first_tool_call → list_tables_tool
2025-07-29 20:36:11 [DEBUG   ] SQLAgent: Edge: list_tables_tool → model_get_schema
2025-07-29 20:36:11 [DEBUG   ] SQLAgent: Edge: model_get_schema → get_schema_tool
2025-07-29 20:36:11 [DEBUG   ] SQLAgent: Edge: get_schema_tool → query_gen
2025-07-29 20:36:11 [DEBUG   ] SQLAgent: Conditional edges added from 'query_gen'
2025-07-29 20:36:11 [DEBUG   ] SQLAgent: Conditional edges added from 'execute_query'
2025-07-29 20:36:11 [DEBUG   ] SQLAgent: Conditional edges added from 'interpret_results'
2025-07-29 20:36:11 [INFO    ] SQLAgent: LangGraph workflow compiled successfully.
2025-07-29 20:36:11 [INFO    ] SQLAgent: SQLAgent initialization completed.
2025-07-29 20:36:11 [INFO    ] SQLAgent: SQLAgent instance created.
2025-07-29 20:36:11 [INFO    ] SQLAgent: === Query Execution ===
2025-07-29 20:36:11 [INFO    ] SQLAgent: Received query: 'hi whats upp show me the email of Arun Pandey user?'
2025-07-29 20:36:11 [INFO    ] SQLAgent: Intent classification result: 'query'
2025-07-29 20:36:11 [INFO    ] SQLAgent: Setting recursion limit: 15
2025-07-29 20:36:11 [INFO    ] SQLAgent: Invoking agent workflow...
2025-07-29 20:36:11 [INFO    ] SQLAgent: Executing first_tool_call: requesting list of tables.
2025-07-29 20:36:11 [DEBUG   ] SQLAgent: first_tool_call response prepared.
2025-07-29 20:36:11 [INFO    ] SQLAgent: Calling model_get_schema to fetch schema.
2025-07-29 20:36:11 [DEBUG   ] SQLAgent: Current message history: [('HumanMessage', 'hi whats upp show me the email of Arun Pandey user?'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist')]
2025-07-29 20:36:12 [INFO    ] SQLAgent: LLM schema request took 0.90 seconds.
2025-07-29 20:36:12 [DEBUG   ] SQLAgent: Schema response: content='' additional_kwargs={'tool_calls': [{'id': 'q4ghgm7cr', 'function': {'arguments': '{"table_names":"users,cart,cart_items,categories,coupons,order_coupons,order_items,orders,payments,product_images,products,reviews,shipping,wishlist"}', 'name': 'sql_db_schema'}, 'type': 'function'}]} response_metadata={'token_usage': {'completion_tokens': 50, 'prompt_tokens': 401, 'total_tokens': 451, 'completion_time': 0.066666667, 'prompt_time': 0.578853619, 'queue_time': 0.05671669300000004, 'total_time': 0.645520286}, 'model_name': 'llama-3.1-8b-instant', 'system_fingerprint': 'fp_c523237e5d', 'service_tier': 'on_demand', 'finish_reason': 'tool_calls', 'logprobs': None} id='run--3b9fbe6c-fec5-4455-8268-000ac6565b00-0' tool_calls=[{'name': 'sql_db_schema', 'args': {'table_names': 'users,cart,cart_items,categories,coupons,order_coupons,order_items,orders,payments,product_images,products,reviews,shipping,wishlist'}, 'id': 'q4ghgm7cr', 'type': 'tool_call'}] usage_metadata={'input_tokens': 401, 'output_tokens': 50, 'total_tokens': 451}
2025-07-29 20:36:12 [INFO    ] SQLAgent: Entering query_gen_node to generate SQL query.
2025-07-29 20:36:12 [DEBUG   ] SQLAgent: Message history: [('HumanMessage', 'hi whats upp show me the email of Arun Pandey user?'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist'), ('AIMessage', ''), ('ToolMessage', "\nCREATE TABLE cart (\n\tcart_id INTEGER, \n\tuser_id INTEGER, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (cart_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from cart table:\ncart_id\tuser_id\tcreated_at\n1\t1\t2025-07-28 17:03:54\n2\t2\t2025-07-28 17:03:54\n3\t3\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE cart_items (\n\tcart_item_id INTEGER, \n\tcart_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tPRIMARY KEY (cart_item_id), \n\tFOREIGN KEY(cart_id) REFERENCES cart (cart_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from cart_items table:\ncart_item_id\tcart_id\tproduct_id\tquantity\n1\t1\t3\t1\n2\t2\t4\t2\n3\t3\t2\t1\n*/\n\n\nCREATE TABLE categories (\n\tcategory_id INTEGER, \n\tcategory_name TEXT NOT NULL, \n\tdescription TEXT, \n\tPRIMARY KEY (category_id)\n)\n\n/*\n3 rows from categories table:\ncategory_id\tcategory_name\tdescription\n1\tMobiles\tSmartphones and accessories\n2\tClothing\tMen and Women fashion\n3\tComputers\tLaptops and peripherals\n*/\n\n\nCREATE TABLE coupons (\n\tcoupon_id INTEGER, \n\tcode TEXT, \n\tdiscount_percent INTEGER, \n\tvalid_from DATE, \n\tvalid_to DATE, \n\tPRIMARY KEY (coupon_id), \n\tUNIQUE (code), \n\tCHECK (discount_percent BETWEEN 1 AND 100)\n)\n\n/*\n3 rows from coupons table:\ncoupon_id\tcode\tdiscount_percent\tvalid_from\tvalid_to\n1\tNEPAL10\t10\t2025-07-01\t2025-12-31\n2\tFEST20\t20\t2025-07-01\t2025-12-31\n3\tWELCOME5\t5\t2025-07-01\t2025-12-31\n*/\n\n\nCREATE TABLE order_coupons (\n\tid INTEGER, \n\torder_id INTEGER, \n\tcoupon_id INTEGER, \n\tPRIMARY KEY (id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(coupon_id) REFERENCES coupons (coupon_id)\n)\n\n/*\n3 rows from order_coupons table:\nid\torder_id\tcoupon_id\n1\t1\t1\n2\t2\t2\n3\t3\t3\n*/\n\n\nCREATE TABLE order_items (\n\torder_item_id INTEGER, \n\torder_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tprice REAL NOT NULL, \n\tPRIMARY KEY (order_item_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from order_items table:\norder_item_id\torder_id\tproduct_id\tquantity\tprice\n1\t1\t1\t1\t550.0\n2\t2\t3\t1\t120.0\n3\t3\t4\t1\t1300.0\n*/\n\n\nCREATE TABLE orders (\n\torder_id INTEGER, \n\tuser_id INTEGER, \n\torder_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tstatus TEXT DEFAULT 'Pending', \n\ttotal_amount REAL, \n\tPRIMARY KEY (order_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from orders table:\norder_id\tuser_id\torder_date\tstatus\ttotal_amount\n1\t1\t2025-07-28 17:03:54\tPending\t550.0\n2\t2\t2025-07-28 17:03:54\tPending\t120.0\n3\t3\t2025-07-28 17:03:54\tPending\t1300.0\n*/\n\n\nCREATE TABLE payments (\n\tpayment_id INTEGER, \n\torder_id INTEGER, \n\tpayment_method TEXT, \n\tamount REAL, \n\tpayment_status TEXT DEFAULT 'Pending', \n\tpaid_at TIMESTAMP, \n\tPRIMARY KEY (payment_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from payments table:\npayment_id\torder_id\tpayment_method\tamount\tpayment_status\tpaid_at\n1\t1\tEsewa\t550.0\tCompleted\tNone\n2\t2\tKhalti\t120.0\tCompleted\tNone\n3\t3\tCash\t1300.0\tPending\tNone\n*/\n\n\nCREATE TABLE product_images (\n\timage_id INTEGER, \n\tproduct_id INTEGER, \n\timage_url TEXT NOT NULL, \n\tPRIMARY KEY (image_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from product_images table:\nimage_id\tproduct_id\timage_url\n1\t1\tsamsung.jpg\n2\t2\tiphone.jpg\n3\t3\tcoat.jpg\n*/\n\n\nCREATE TABLE products (\n\tproduct_id INTEGER, \n\tcategory_id INTEGER, \n\tname TEXT NOT NULL, \n\tdescription TEXT, \n\tprice REAL NOT NULL, \n\tstock INTEGER DEFAULT 0, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (product_id), \n\tFOREIGN KEY(category_id) REFERENCES categories (category_id)\n)\n\n/*\n3 rows from products table:\nproduct_id\tcategory_id\tname\tdescription\tprice\tstock\tcreated_at\n1\t1\tSamsung Galaxy A55\t5G smartphone with AMOLED display\t550.0\t50\t2025-07-28 17:03:54\n2\t1\tiPhone 15\tLatest Apple flagship smartphone\t999.0\t30\t2025-07-28 17:03:54\n3\t2\tWinter Coat\tStylish warm coat for winter\t120.0\t25\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE reviews (\n\treview_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\trating INTEGER, \n\tcomment TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (review_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id), \n\tCHECK (rating BETWEEN 1 AND 5)\n)\n\n/*\n3 rows from reviews table:\nreview_id\tuser_id\tproduct_id\trating\tcomment\tcreated_at\n1\t1\t1\t5\tExcellent smartphone!\t2025-07-28 17:03:54\n2\t2\t3\t4\tCoat is warm and stylish.\t2025-07-28 17:03:54\n3\t3\t4\t5\tLaptop is powerful.\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE shipping (\n\tshipping_id INTEGER, \n\torder_id INTEGER, \n\ttracking_number TEXT, \n\tshipping_address TEXT, \n\tshipping_date TIMESTAMP, \n\tdelivery_date TIMESTAMP, \n\tstatus TEXT DEFAULT 'Preparing', \n\tPRIMARY KEY (shipping_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from shipping table:\nshipping_id\torder_id\ttracking_number\tshipping_address\tshipping_date\tdelivery_date\tstatus\n1\t1\tTRK001\tKathmandu\t2025-07-01 00:00:00\t2025-07-05 00:00:00\tDelivered\n2\t2\tTRK002\tPokhara\t2025-07-02 00:00:00\t2025-07-06 00:00:00\tDelivered\n3\t3\tTRK003\tButwal\t2025-07-03 00:00:00\t2025-07-08 00:00:00\tShipped\n*/\n\n\nCREATE TABLE users (\n\tuser_id INTEGER, \n\tname TEXT, \n\temail TEXT, \n\tpassword TEXT, \n\tphone TEXT, \n\taddress TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (user_id), \n\tUNIQUE (email)\n)\n\n/*\n3 rows from users table:\nuser_id\tname\temail\tpassword\tphone\taddress\tcreated_at\n1\tArun Pandey\tarun@example.com\tpass\t9801111111\tKathmandu\t2025-07-28 17:03:54\n2\tSita Sharma\tsita@example.com\tpass\t9802222222\tPokhara\t2025-07-28 17:03:54\n3\tRam Thapa\tram@example.com\tpass\t9803333333\tButwal\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE wishlist (\n\twishlist_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\tadded_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (wishlist_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from wishlist table:\nwishlist_id\tuser_id\tproduct_id\tadded_at\n1\t1\t2\t2025-07-28 17:03:54\n2\t2\t3\t2025-07-28 17:03:54\n3\t3\t1\t2025-07-28 17:03:54\n*/")]
2025-07-29 20:36:12 [DEBUG   ] SQLAgent: Query attempt #1
2025-07-29 20:36:12 [INFO    ] SQLAgent: Invoking LLM for SQL generation...
2025-07-29 20:36:25 [INFO    ] SQLAgent: LLM generated SQL in 12.59 seconds.
2025-07-29 20:36:25 [DEBUG   ] SQLAgent: LLM response content: SELECT email FROM users WHERE name = 'Arun Pandey';
2025-07-29 20:36:25 [INFO    ] SQLAgent: Valid SELECT query detected. Proceeding to execute_query.
2025-07-29 20:36:25 [INFO    ] SQLAgent: Executing SQL query from last message.
2025-07-29 20:36:25 [DEBUG   ] SQLAgent: Last message type: AIMessage, content: SELECT email FROM users WHERE name = 'Arun Pandey';
2025-07-29 20:36:25 [DEBUG   ] SQLAgent: Raw SQL content: SELECT email FROM users WHERE name = 'Arun Pandey';
2025-07-29 20:36:25 [INFO    ] SQLAgent: Extracted SQL query: SELECT email FROM users WHERE name = 'Arun Pandey';
2025-07-29 20:36:25 [INFO    ] SQLAgent: Query executed in 0.00 seconds.
2025-07-29 20:36:25 [INFO    ] SQLAgent: Query result: [('arun@example.com',)]
2025-07-29 20:36:25 [INFO    ] SQLAgent: Query executed successfully. Proceeding to interpretation.
2025-07-29 20:36:25 [INFO    ] SQLAgent: Interpreting query results into natural language answer.
2025-07-29 20:36:25 [DEBUG   ] SQLAgent: Message history for interpretation: [('HumanMessage', 'hi whats upp show me the email of Arun Pandey user?'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist'), ('AIMessage', ''), ('ToolMessage', "\nCREATE TABLE cart (\n\tcart_id INTEGER, \n\tuser_id INTEGER, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (cart_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from cart table:\ncart_id\tuser_id\tcreated_at\n1\t1\t2025-07-28 17:03:54\n2\t2\t2025-07-28 17:03:54\n3\t3\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE cart_items (\n\tcart_item_id INTEGER, \n\tcart_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tPRIMARY KEY (cart_item_id), \n\tFOREIGN KEY(cart_id) REFERENCES cart (cart_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from cart_items table:\ncart_item_id\tcart_id\tproduct_id\tquantity\n1\t1\t3\t1\n2\t2\t4\t2\n3\t3\t2\t1\n*/\n\n\nCREATE TABLE categories (\n\tcategory_id INTEGER, \n\tcategory_name TEXT NOT NULL, \n\tdescription TEXT, \n\tPRIMARY KEY (category_id)\n)\n\n/*\n3 rows from categories table:\ncategory_id\tcategory_name\tdescription\n1\tMobiles\tSmartphones and accessories\n2\tClothing\tMen and Women fashion\n3\tComputers\tLaptops and peripherals\n*/\n\n\nCREATE TABLE coupons (\n\tcoupon_id INTEGER, \n\tcode TEXT, \n\tdiscount_percent INTEGER, \n\tvalid_from DATE, \n\tvalid_to DATE, \n\tPRIMARY KEY (coupon_id), \n\tUNIQUE (code), \n\tCHECK (discount_percent BETWEEN 1 AND 100)\n)\n\n/*\n3 rows from coupons table:\ncoupon_id\tcode\tdiscount_percent\tvalid_from\tvalid_to\n1\tNEPAL10\t10\t2025-07-01\t2025-12-31\n2\tFEST20\t20\t2025-07-01\t2025-12-31\n3\tWELCOME5\t5\t2025-07-01\t2025-12-31\n*/\n\n\nCREATE TABLE order_coupons (\n\tid INTEGER, \n\torder_id INTEGER, \n\tcoupon_id INTEGER, \n\tPRIMARY KEY (id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(coupon_id) REFERENCES coupons (coupon_id)\n)\n\n/*\n3 rows from order_coupons table:\nid\torder_id\tcoupon_id\n1\t1\t1\n2\t2\t2\n3\t3\t3\n*/\n\n\nCREATE TABLE order_items (\n\torder_item_id INTEGER, \n\torder_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tprice REAL NOT NULL, \n\tPRIMARY KEY (order_item_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from order_items table:\norder_item_id\torder_id\tproduct_id\tquantity\tprice\n1\t1\t1\t1\t550.0\n2\t2\t3\t1\t120.0\n3\t3\t4\t1\t1300.0\n*/\n\n\nCREATE TABLE orders (\n\torder_id INTEGER, \n\tuser_id INTEGER, \n\torder_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tstatus TEXT DEFAULT 'Pending', \n\ttotal_amount REAL, \n\tPRIMARY KEY (order_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from orders table:\norder_id\tuser_id\torder_date\tstatus\ttotal_amount\n1\t1\t2025-07-28 17:03:54\tPending\t550.0\n2\t2\t2025-07-28 17:03:54\tPending\t120.0\n3\t3\t2025-07-28 17:03:54\tPending\t1300.0\n*/\n\n\nCREATE TABLE payments (\n\tpayment_id INTEGER, \n\torder_id INTEGER, \n\tpayment_method TEXT, \n\tamount REAL, \n\tpayment_status TEXT DEFAULT 'Pending', \n\tpaid_at TIMESTAMP, \n\tPRIMARY KEY (payment_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from payments table:\npayment_id\torder_id\tpayment_method\tamount\tpayment_status\tpaid_at\n1\t1\tEsewa\t550.0\tCompleted\tNone\n2\t2\tKhalti\t120.0\tCompleted\tNone\n3\t3\tCash\t1300.0\tPending\tNone\n*/\n\n\nCREATE TABLE product_images (\n\timage_id INTEGER, \n\tproduct_id INTEGER, \n\timage_url TEXT NOT NULL, \n\tPRIMARY KEY (image_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from product_images table:\nimage_id\tproduct_id\timage_url\n1\t1\tsamsung.jpg\n2\t2\tiphone.jpg\n3\t3\tcoat.jpg\n*/\n\n\nCREATE TABLE products (\n\tproduct_id INTEGER, \n\tcategory_id INTEGER, \n\tname TEXT NOT NULL, \n\tdescription TEXT, \n\tprice REAL NOT NULL, \n\tstock INTEGER DEFAULT 0, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (product_id), \n\tFOREIGN KEY(category_id) REFERENCES categories (category_id)\n)\n\n/*\n3 rows from products table:\nproduct_id\tcategory_id\tname\tdescription\tprice\tstock\tcreated_at\n1\t1\tSamsung Galaxy A55\t5G smartphone with AMOLED display\t550.0\t50\t2025-07-28 17:03:54\n2\t1\tiPhone 15\tLatest Apple flagship smartphone\t999.0\t30\t2025-07-28 17:03:54\n3\t2\tWinter Coat\tStylish warm coat for winter\t120.0\t25\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE reviews (\n\treview_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\trating INTEGER, \n\tcomment TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (review_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id), \n\tCHECK (rating BETWEEN 1 AND 5)\n)\n\n/*\n3 rows from reviews table:\nreview_id\tuser_id\tproduct_id\trating\tcomment\tcreated_at\n1\t1\t1\t5\tExcellent smartphone!\t2025-07-28 17:03:54\n2\t2\t3\t4\tCoat is warm and stylish.\t2025-07-28 17:03:54\n3\t3\t4\t5\tLaptop is powerful.\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE shipping (\n\tshipping_id INTEGER, \n\torder_id INTEGER, \n\ttracking_number TEXT, \n\tshipping_address TEXT, \n\tshipping_date TIMESTAMP, \n\tdelivery_date TIMESTAMP, \n\tstatus TEXT DEFAULT 'Preparing', \n\tPRIMARY KEY (shipping_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from shipping table:\nshipping_id\torder_id\ttracking_number\tshipping_address\tshipping_date\tdelivery_date\tstatus\n1\t1\tTRK001\tKathmandu\t2025-07-01 00:00:00\t2025-07-05 00:00:00\tDelivered\n2\t2\tTRK002\tPokhara\t2025-07-02 00:00:00\t2025-07-06 00:00:00\tDelivered\n3\t3\tTRK003\tButwal\t2025-07-03 00:00:00\t2025-07-08 00:00:00\tShipped\n*/\n\n\nCREATE TABLE users (\n\tuser_id INTEGER, \n\tname TEXT, \n\temail TEXT, \n\tpassword TEXT, \n\tphone TEXT, \n\taddress TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (user_id), \n\tUNIQUE (email)\n)\n\n/*\n3 rows from users table:\nuser_id\tname\temail\tpassword\tphone\taddress\tcreated_at\n1\tArun Pandey\tarun@example.com\tpass\t9801111111\tKathmandu\t2025-07-28 17:03:54\n2\tSita Sharma\tsita@example.com\tpass\t9802222222\tPokhara\t2025-07-28 17:03:54\n3\tRam Thapa\tram@example.com\tpass\t9803333333\tButwal\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE wishlist (\n\twishlist_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\tadded_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (wishlist_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from wishlist table:\nwishlist_id\tuser_id\tproduct_id\tadded_at\n1\t1\t2\t2025-07-28 17:03:54\n2\t2\t3\t2025-07-28 17:03:54\n3\t3\t1\t2025-07-28 17:03:54\n*/"), ('AIMessage', "SELECT email FROM users WHERE name = 'Arun Pandey';"), ('ToolMessage', "[('arun@example.com',)]")]
2025-07-29 20:36:25 [INFO    ] SQLAgent: Invoking LLM for result interpretation...
2025-07-29 20:36:45 [INFO    ] SQLAgent: LLM interpretation completed in 20.24 seconds.
2025-07-29 20:36:45 [DEBUG   ] SQLAgent: Interpretation result: Answer: The email of Arun Pandey is arun@example.com.
2025-07-29 20:36:45 [INFO    ] SQLAgent: Final answer generated. Ending workflow.
2025-07-29 20:36:45 [INFO    ] SQLAgent: Agent workflow completed in 33.77 seconds.
2025-07-29 20:36:45 [DEBUG   ] SQLAgent: Extracting final SQL query from message history.
2025-07-29 20:36:45 [DEBUG   ] SQLAgent: Extracted SQL query: SELECT email FROM users WHERE name = 'Arun Pandey';
2025-07-29 20:36:45 [INFO    ] SQLAgent: Final SQL Query: SELECT email FROM users WHERE name = 'Arun Pandey';
2025-07-29 20:36:45 [INFO    ] SQLAgent: Final Answer: Answer: The email of Arun Pandey is arun@example.com.
2025-07-29 20:36:45 [INFO    ] SQLAgent: ===  Query Execution Completed ===
