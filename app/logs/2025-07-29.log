2025-07-29 22:08:31 [INFO    ] SQLAgent: === SQL Agent Logger Initialized (Console Output Disabled, ALL Log Levels Captured) ===
2025-07-29 22:08:31 [DEBUG   ] SQLAgent: DEBUG level logging enabled - all detailed information will be captured
2025-07-29 22:08:31 [WARNING ] SQLAgent: WARNING level logging enabled - all warnings will be captured
2025-07-29 22:08:31 [ERROR   ] SQLAgent: ERROR level logging enabled - all errors will be captured
2025-07-29 22:08:31 [CRITICAL] SQLAgent: CRITICAL level logging enabled - all critical issues will be captured
2025-07-29 22:08:45 [INFO    ] SQLAgent: === SQL Agent Logger Initialized (Console Output Disabled, ALL Log Levels Captured) ===
2025-07-29 22:08:45 [DEBUG   ] SQLAgent: DEBUG level logging enabled - all detailed information will be captured
2025-07-29 22:08:45 [WARNING ] SQLAgent: WARNING level logging enabled - all warnings will be captured
2025-07-29 22:08:45 [ERROR   ] SQLAgent: ERROR level logging enabled - all errors will be captured
2025-07-29 22:08:45 [CRITICAL] SQLAgent: CRITICAL level logging enabled - all critical issues will be captured
2025-07-29 22:08:47 [INFO    ] SQLAgent: === SQL Agent Logger Initialized (Console Output Disabled, ALL Log Levels Captured) ===
2025-07-29 22:08:47 [DEBUG   ] SQLAgent: DEBUG level logging enabled - all detailed information will be captured
2025-07-29 22:08:47 [WARNING ] SQLAgent: WARNING level logging enabled - all warnings will be captured
2025-07-29 22:08:47 [ERROR   ] SQLAgent: ERROR level logging enabled - all errors will be captured
2025-07-29 22:08:47 [CRITICAL] SQLAgent: CRITICAL level logging enabled - all critical issues will be captured
2025-07-29 22:08:47 [INFO    ] SQLAgent: Initializing SQLAgent...
2025-07-29 22:08:47 [DEBUG   ] SQLAgent: Input - db_path: D:\ML(ExtraClass Project)\AGENT AI\SQL-Sage-Intelligent-DB-Agent-with-Gemini-LangGraph\database\final_ecommerce.db, model_name: llama-3.1-8b-instant
2025-07-29 22:08:47 [DEBUG   ] SQLAgent: Connection string created: sqlite:///D:\ML(ExtraClass Project)\AGENT AI\SQL-Sage-Intelligent-DB-Agent-with-Gemini-LangGraph\database\final_ecommerce.db
2025-07-29 22:08:47 [INFO    ] SQLAgent: Connected to SQLite database.
2025-07-29 22:08:47 [DEBUG   ] SQLAgent: Database usable tables: ['cart', 'cart_items', 'categories', 'coupons', 'order_coupons', 'order_items', 'orders', 'payments', 'product_images', 'products', 'reviews', 'shipping', 'users', 'wishlist']
2025-07-29 22:08:48 [INFO    ] SQLAgent: Groq LLM initialized with model: llama-3.1-8b-instant
2025-07-29 22:08:48 [INFO    ] SQLAgent: Starting _setup_tools...
2025-07-29 22:08:48 [DEBUG   ] SQLAgent: Fetched 4 tools from toolkit: ['sql_db_query', 'sql_db_schema', 'sql_db_list_tables', 'sql_db_query_checker']
2025-07-29 22:08:48 [DEBUG   ] SQLAgent: Tool 'sql_db_list_tables' loaded.
2025-07-29 22:08:48 [DEBUG   ] SQLAgent: Tool 'sql_db_schema' loaded.
2025-07-29 22:08:48 [INFO    ] SQLAgent: All tools setup completed.
2025-07-29 22:08:48 [INFO    ] SQLAgent: Setting up prompts...
2025-07-29 22:08:48 [DEBUG   ] SQLAgent: Query generation prompt created.
2025-07-29 22:08:48 [DEBUG   ] SQLAgent: Interpretation prompt created.
2025-07-29 22:08:48 [INFO    ] SQLAgent: Prompts setup completed.
2025-07-29 22:08:48 [DEBUG   ] SQLAgent: Intent classification prompt added.
2025-07-29 22:08:48 [INFO    ] SQLAgent: Building LangGraph workflow...
2025-07-29 22:08:48 [DEBUG   ] SQLAgent: Node 'first_tool_call' added to graph.
2025-07-29 22:08:48 [DEBUG   ] SQLAgent: Creating tool node with fallback for tools: ['sql_db_list_tables']
2025-07-29 22:08:48 [DEBUG   ] SQLAgent: Tool node with fallback created.
2025-07-29 22:08:48 [DEBUG   ] SQLAgent: Node 'list_tables_tool' added to graph.
2025-07-29 22:08:48 [DEBUG   ] SQLAgent: Node 'model_get_schema' added to graph.
2025-07-29 22:08:48 [DEBUG   ] SQLAgent: Creating tool node with fallback for tools: ['sql_db_schema']
2025-07-29 22:08:48 [DEBUG   ] SQLAgent: Tool node with fallback created.
2025-07-29 22:08:48 [DEBUG   ] SQLAgent: Node 'get_schema_tool' added to graph.
2025-07-29 22:08:48 [DEBUG   ] SQLAgent: Node 'query_gen' added to graph.
2025-07-29 22:08:48 [DEBUG   ] SQLAgent: Node 'execute_query' added to graph.
2025-07-29 22:08:48 [DEBUG   ] SQLAgent: Node 'interpret_results' added to graph.
2025-07-29 22:08:48 [DEBUG   ] SQLAgent: Edge: START → first_tool_call
2025-07-29 22:08:48 [DEBUG   ] SQLAgent: Edge: first_tool_call → list_tables_tool
2025-07-29 22:08:48 [DEBUG   ] SQLAgent: Edge: list_tables_tool → model_get_schema
2025-07-29 22:08:48 [DEBUG   ] SQLAgent: Edge: model_get_schema → get_schema_tool
2025-07-29 22:08:48 [DEBUG   ] SQLAgent: Edge: get_schema_tool → query_gen
2025-07-29 22:08:48 [DEBUG   ] SQLAgent: Conditional edges added from 'query_gen'
2025-07-29 22:08:48 [DEBUG   ] SQLAgent: Conditional edges added from 'execute_query'
2025-07-29 22:08:48 [DEBUG   ] SQLAgent: Conditional edges added from 'interpret_results'
2025-07-29 22:08:48 [INFO    ] SQLAgent: LangGraph workflow compiled successfully.
2025-07-29 22:08:48 [INFO    ] SQLAgent: SQLAgent initialization completed.
2025-07-29 22:08:53 [INFO    ] SQLAgent: === SQL Agent Logger Initialized (Console Output Disabled, ALL Log Levels Captured) ===
2025-07-29 22:08:53 [DEBUG   ] SQLAgent: DEBUG level logging enabled - all detailed information will be captured
2025-07-29 22:08:53 [WARNING ] SQLAgent: WARNING level logging enabled - all warnings will be captured
2025-07-29 22:08:53 [ERROR   ] SQLAgent: ERROR level logging enabled - all errors will be captured
2025-07-29 22:08:53 [CRITICAL] SQLAgent: CRITICAL level logging enabled - all critical issues will be captured
2025-07-29 22:08:53 [INFO    ] SQLAgent: Received query: 'Hi '
2025-07-29 22:08:54 [INFO    ] SQLAgent: Intent classification result: 'greeting'
2025-07-29 22:08:54 [INFO    ] SQLAgent: Pure greeting detected via LLM. Responding directly.
2025-07-29 22:09:20 [INFO    ] SQLAgent: === SQL Agent Logger Initialized (Console Output Disabled, ALL Log Levels Captured) ===
2025-07-29 22:09:20 [DEBUG   ] SQLAgent: DEBUG level logging enabled - all detailed information will be captured
2025-07-29 22:09:20 [WARNING ] SQLAgent: WARNING level logging enabled - all warnings will be captured
2025-07-29 22:09:20 [ERROR   ] SQLAgent: ERROR level logging enabled - all errors will be captured
2025-07-29 22:09:20 [CRITICAL] SQLAgent: CRITICAL level logging enabled - all critical issues will be captured
2025-07-29 22:09:20 [INFO    ] SQLAgent: Received query: 'show me the details records of user name Arun Pandey'
2025-07-29 22:09:20 [INFO    ] SQLAgent: Intent classification result: 'query'
2025-07-29 22:09:20 [INFO    ] SQLAgent: Setting recursion limit: 15
2025-07-29 22:09:20 [INFO    ] SQLAgent: Invoking agent workflow...
2025-07-29 22:09:20 [INFO    ] SQLAgent: Executing first_tool_call: requesting list of tables.
2025-07-29 22:09:20 [DEBUG   ] SQLAgent: first_tool_call response prepared.
2025-07-29 22:09:20 [INFO    ] SQLAgent: Calling model_get_schema to fetch schema.
2025-07-29 22:09:20 [DEBUG   ] SQLAgent: Current message history: [('HumanMessage', 'show me the details records of user name Arun Pandey'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist')]
2025-07-29 22:09:20 [INFO    ] SQLAgent: LLM schema request took 0.18 seconds.
2025-07-29 22:09:20 [DEBUG   ] SQLAgent: Schema response: content='' additional_kwargs={'tool_calls': [{'id': 'bzc5wa4mw', 'function': {'arguments': '{"table_names":"users"}', 'name': 'sql_db_schema'}, 'type': 'function'}]} response_metadata={'token_usage': {'completion_tokens': 17, 'prompt_tokens': 399, 'total_tokens': 416, 'completion_time': 0.023382375, 'prompt_time': 0.03393708, 'queue_time': 0.050902328000000004, 'total_time': 0.057319455}, 'model_name': 'llama-3.1-8b-instant', 'system_fingerprint': 'fp_c523237e5d', 'service_tier': 'on_demand', 'finish_reason': 'tool_calls', 'logprobs': None} id='run--9be3f8bc-6df7-4bf5-a52b-dab6edf56289-0' tool_calls=[{'name': 'sql_db_schema', 'args': {'table_names': 'users'}, 'id': 'bzc5wa4mw', 'type': 'tool_call'}] usage_metadata={'input_tokens': 399, 'output_tokens': 17, 'total_tokens': 416}
2025-07-29 22:09:20 [INFO    ] SQLAgent: Entering query_gen_node to generate SQL query.
2025-07-29 22:09:20 [DEBUG   ] SQLAgent: Message history: [('HumanMessage', 'show me the details records of user name Arun Pandey'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist'), ('AIMessage', ''), ('ToolMessage', '\nCREATE TABLE users (\n\tuser_id INTEGER, \n\tname TEXT, \n\temail TEXT, \n\tpassword TEXT, \n\tphone TEXT, \n\taddress TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (user_id), \n\tUNIQUE (email)\n)\n\n/*\n3 rows from users table:\nuser_id\tname\temail\tpassword\tphone\taddress\tcreated_at\n1\tArun Pandey\tarun@example.com\tpass\t9801111111\tKathmandu\t2025-07-28 17:03:54\n2\tSita Sharma\tsita@example.com\tpass\t9802222222\tPokhara\t2025-07-28 17:03:54\n3\tRam Thapa\tram@example.com\tpass\t9803333333\tButwal\t2025-07-28 17:03:54\n*/')]
2025-07-29 22:09:20 [DEBUG   ] SQLAgent: Query attempt #1
2025-07-29 22:09:20 [INFO    ] SQLAgent: Invoking LLM for SQL generation...
2025-07-29 22:09:20 [INFO    ] SQLAgent: LLM generated SQL in 0.19 seconds.
2025-07-29 22:09:20 [DEBUG   ] SQLAgent: LLM response content: SELECT * FROM users WHERE name = 'Arun Pandey' LIMIT 1;
2025-07-29 22:09:20 [INFO    ] SQLAgent: Valid SELECT query detected. Proceeding to execute_query.
2025-07-29 22:09:20 [INFO    ] SQLAgent: Executing SQL query from last message.
2025-07-29 22:09:20 [DEBUG   ] SQLAgent: Last message type: AIMessage, content: SELECT * FROM users WHERE name = 'Arun Pandey' LIMIT 1;
2025-07-29 22:09:20 [DEBUG   ] SQLAgent: Raw SQL content: SELECT * FROM users WHERE name = 'Arun Pandey' LIMIT 1;
2025-07-29 22:09:20 [INFO    ] SQLAgent: Extracted SQL query: SELECT * FROM users WHERE name = 'Arun Pandey' LIMIT 1;
2025-07-29 22:09:20 [INFO    ] SQLAgent: Query executed in 0.00 seconds.
2025-07-29 22:09:20 [INFO    ] SQLAgent: Query result: [(1, 'Arun Pandey', 'arun@example.com', 'pass', '9801111111', 'Kathmandu', '2025-07-28 17:03:54')]
2025-07-29 22:09:20 [INFO    ] SQLAgent: Query executed successfully. Proceeding to interpretation.
2025-07-29 22:09:20 [INFO    ] SQLAgent: Interpreting query results into natural language answer.
2025-07-29 22:09:20 [DEBUG   ] SQLAgent: Message history for interpretation: [('HumanMessage', 'show me the details records of user name Arun Pandey'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist'), ('AIMessage', ''), ('ToolMessage', '\nCREATE TABLE users (\n\tuser_id INTEGER, \n\tname TEXT, \n\temail TEXT, \n\tpassword TEXT, \n\tphone TEXT, \n\taddress TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (user_id), \n\tUNIQUE (email)\n)\n\n/*\n3 rows from users table:\nuser_id\tname\temail\tpassword\tphone\taddress\tcreated_at\n1\tArun Pandey\tarun@example.com\tpass\t9801111111\tKathmandu\t2025-07-28 17:03:54\n2\tSita Sharma\tsita@example.com\tpass\t9802222222\tPokhara\t2025-07-28 17:03:54\n3\tRam Thapa\tram@example.com\tpass\t9803333333\tButwal\t2025-07-28 17:03:54\n*/'), ('AIMessage', "SELECT * FROM users WHERE name = 'Arun Pandey' LIMIT 1;"), ('ToolMessage', "[(1, 'Arun Pandey', 'arun@example.com', 'pass', '9801111111', 'Kathmandu', '2025-07-28 17:03:54')]")]
2025-07-29 22:09:20 [INFO    ] SQLAgent: Invoking LLM for result interpretation...
2025-07-29 22:09:21 [INFO    ] SQLAgent: LLM interpretation completed in 0.53 seconds.
2025-07-29 22:09:21 [DEBUG   ] SQLAgent: Interpretation result: Answer: The user with the name 'Arun Pandey' has a user ID of 1, email 'arun@example.com', password 'pass', phone number '9801111111', address 'Kathmandu', and created at '2025-07-28 17:03:54'.
2025-07-29 22:09:21 [INFO    ] SQLAgent: Final answer generated. Ending workflow.
2025-07-29 22:09:21 [INFO    ] SQLAgent: Agent workflow completed in 0.92 seconds.
2025-07-29 22:09:21 [DEBUG   ] SQLAgent: Extracting final SQL query from message history.
2025-07-29 22:09:21 [DEBUG   ] SQLAgent: Extracted SQL query: SELECT * FROM users WHERE name = 'Arun Pandey' LIMIT 1;
2025-07-29 22:09:21 [INFO    ] SQLAgent: Final SQL Query: SELECT * FROM users WHERE name = 'Arun Pandey' LIMIT 1;
2025-07-29 22:09:21 [INFO    ] SQLAgent: Final Answer: Answer: The user with the name 'Arun Pandey' has a user ID of 1, email 'arun@example.com', password 'pass', phone number '9801111111', address 'Kathmandu', and created at '2025-07-28 17:03:54'.
2025-07-29 22:09:39 [INFO    ] SQLAgent: === SQL Agent Logger Initialized (Console Output Disabled, ALL Log Levels Captured) ===
2025-07-29 22:09:39 [DEBUG   ] SQLAgent: DEBUG level logging enabled - all detailed information will be captured
2025-07-29 22:09:39 [WARNING ] SQLAgent: WARNING level logging enabled - all warnings will be captured
2025-07-29 22:09:39 [ERROR   ] SQLAgent: ERROR level logging enabled - all errors will be captured
2025-07-29 22:09:39 [CRITICAL] SQLAgent: CRITICAL level logging enabled - all critical issues will be captured
2025-07-29 22:09:39 [INFO    ] SQLAgent: Received query: 'show me the details records of user name Arun Pandey in markdown'
2025-07-29 22:09:39 [INFO    ] SQLAgent: Intent classification result: 'i'm not able to provide you with real data or access to any external systems. however, i can provide you with a sample markdown table that represents the details records of a user named arun pandey.

**user details: arun pandey**
=====================================

| **field** | **value** |
| --- | --- |
| **username** | arun pandey |
| **email** | arun.pandey@example.com |
| **phone number** | +91 1234567890 |
| **address** | 123, main street, anytown, usa |
| **balance** | $100.00 |
| **orders** | order #123, order #456 |
| **last login** | 2022-01-01 12:00:00 |
| **created on** | 2021-01-01 12:00:00 |

please note that this is a sample data and not real data. if you need to retrieve actual data, you would need to integrate with a database or a system that stores user data.'
2025-07-29 22:09:39 [INFO    ] SQLAgent: Setting recursion limit: 15
2025-07-29 22:09:39 [INFO    ] SQLAgent: Invoking agent workflow...
2025-07-29 22:09:39 [INFO    ] SQLAgent: Executing first_tool_call: requesting list of tables.
2025-07-29 22:09:39 [DEBUG   ] SQLAgent: first_tool_call response prepared.
2025-07-29 22:09:39 [INFO    ] SQLAgent: Calling model_get_schema to fetch schema.
2025-07-29 22:09:39 [DEBUG   ] SQLAgent: Current message history: [('HumanMessage', 'show me the details records of user name Arun Pandey in markdown'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist')]
2025-07-29 22:09:40 [INFO    ] SQLAgent: LLM schema request took 0.26 seconds.
2025-07-29 22:09:40 [DEBUG   ] SQLAgent: Schema response: content='' additional_kwargs={'tool_calls': [{'id': 'mjndxvfdg', 'function': {'arguments': '{"table_names":"users, orders, order_items, payments, reviews, products, product_images, shipping, cart, cart_items, wishlist, coupons, order_coupons, categories"}', 'name': 'sql_db_schema'}, 'type': 'function'}]} response_metadata={'token_usage': {'completion_tokens': 48, 'prompt_tokens': 401, 'total_tokens': 449, 'completion_time': 0.077260405, 'prompt_time': 0.049858262, 'queue_time': 0.052594718, 'total_time': 0.127118667}, 'model_name': 'llama-3.1-8b-instant', 'system_fingerprint': 'fp_c523237e5d', 'service_tier': 'on_demand', 'finish_reason': 'tool_calls', 'logprobs': None} id='run--567cf666-1f56-43df-9e1d-db4ec6b40368-0' tool_calls=[{'name': 'sql_db_schema', 'args': {'table_names': 'users, orders, order_items, payments, reviews, products, product_images, shipping, cart, cart_items, wishlist, coupons, order_coupons, categories'}, 'id': 'mjndxvfdg', 'type': 'tool_call'}] usage_metadata={'input_tokens': 401, 'output_tokens': 48, 'total_tokens': 449}
2025-07-29 22:09:40 [INFO    ] SQLAgent: Entering query_gen_node to generate SQL query.
2025-07-29 22:09:40 [DEBUG   ] SQLAgent: Message history: [('HumanMessage', 'show me the details records of user name Arun Pandey in markdown'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist'), ('AIMessage', ''), ('ToolMessage', "\nCREATE TABLE cart (\n\tcart_id INTEGER, \n\tuser_id INTEGER, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (cart_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from cart table:\ncart_id\tuser_id\tcreated_at\n1\t1\t2025-07-28 17:03:54\n2\t2\t2025-07-28 17:03:54\n3\t3\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE cart_items (\n\tcart_item_id INTEGER, \n\tcart_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tPRIMARY KEY (cart_item_id), \n\tFOREIGN KEY(cart_id) REFERENCES cart (cart_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from cart_items table:\ncart_item_id\tcart_id\tproduct_id\tquantity\n1\t1\t3\t1\n2\t2\t4\t2\n3\t3\t2\t1\n*/\n\n\nCREATE TABLE categories (\n\tcategory_id INTEGER, \n\tcategory_name TEXT NOT NULL, \n\tdescription TEXT, \n\tPRIMARY KEY (category_id)\n)\n\n/*\n3 rows from categories table:\ncategory_id\tcategory_name\tdescription\n1\tMobiles\tSmartphones and accessories\n2\tClothing\tMen and Women fashion\n3\tComputers\tLaptops and peripherals\n*/\n\n\nCREATE TABLE coupons (\n\tcoupon_id INTEGER, \n\tcode TEXT, \n\tdiscount_percent INTEGER, \n\tvalid_from DATE, \n\tvalid_to DATE, \n\tPRIMARY KEY (coupon_id), \n\tUNIQUE (code), \n\tCHECK (discount_percent BETWEEN 1 AND 100)\n)\n\n/*\n3 rows from coupons table:\ncoupon_id\tcode\tdiscount_percent\tvalid_from\tvalid_to\n1\tNEPAL10\t10\t2025-07-01\t2025-12-31\n2\tFEST20\t20\t2025-07-01\t2025-12-31\n3\tWELCOME5\t5\t2025-07-01\t2025-12-31\n*/\n\n\nCREATE TABLE order_coupons (\n\tid INTEGER, \n\torder_id INTEGER, \n\tcoupon_id INTEGER, \n\tPRIMARY KEY (id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(coupon_id) REFERENCES coupons (coupon_id)\n)\n\n/*\n3 rows from order_coupons table:\nid\torder_id\tcoupon_id\n1\t1\t1\n2\t2\t2\n3\t3\t3\n*/\n\n\nCREATE TABLE order_items (\n\torder_item_id INTEGER, \n\torder_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tprice REAL NOT NULL, \n\tPRIMARY KEY (order_item_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from order_items table:\norder_item_id\torder_id\tproduct_id\tquantity\tprice\n1\t1\t1\t1\t550.0\n2\t2\t3\t1\t120.0\n3\t3\t4\t1\t1300.0\n*/\n\n\nCREATE TABLE orders (\n\torder_id INTEGER, \n\tuser_id INTEGER, \n\torder_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tstatus TEXT DEFAULT 'Pending', \n\ttotal_amount REAL, \n\tPRIMARY KEY (order_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from orders table:\norder_id\tuser_id\torder_date\tstatus\ttotal_amount\n1\t1\t2025-07-28 17:03:54\tPending\t550.0\n2\t2\t2025-07-28 17:03:54\tPending\t120.0\n3\t3\t2025-07-28 17:03:54\tPending\t1300.0\n*/\n\n\nCREATE TABLE payments (\n\tpayment_id INTEGER, \n\torder_id INTEGER, \n\tpayment_method TEXT, \n\tamount REAL, \n\tpayment_status TEXT DEFAULT 'Pending', \n\tpaid_at TIMESTAMP, \n\tPRIMARY KEY (payment_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from payments table:\npayment_id\torder_id\tpayment_method\tamount\tpayment_status\tpaid_at\n1\t1\tEsewa\t550.0\tCompleted\tNone\n2\t2\tKhalti\t120.0\tCompleted\tNone\n3\t3\tCash\t1300.0\tPending\tNone\n*/\n\n\nCREATE TABLE product_images (\n\timage_id INTEGER, \n\tproduct_id INTEGER, \n\timage_url TEXT NOT NULL, \n\tPRIMARY KEY (image_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from product_images table:\nimage_id\tproduct_id\timage_url\n1\t1\tsamsung.jpg\n2\t2\tiphone.jpg\n3\t3\tcoat.jpg\n*/\n\n\nCREATE TABLE products (\n\tproduct_id INTEGER, \n\tcategory_id INTEGER, \n\tname TEXT NOT NULL, \n\tdescription TEXT, \n\tprice REAL NOT NULL, \n\tstock INTEGER DEFAULT 0, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (product_id), \n\tFOREIGN KEY(category_id) REFERENCES categories (category_id)\n)\n\n/*\n3 rows from products table:\nproduct_id\tcategory_id\tname\tdescription\tprice\tstock\tcreated_at\n1\t1\tSamsung Galaxy A55\t5G smartphone with AMOLED display\t550.0\t50\t2025-07-28 17:03:54\n2\t1\tiPhone 15\tLatest Apple flagship smartphone\t999.0\t30\t2025-07-28 17:03:54\n3\t2\tWinter Coat\tStylish warm coat for winter\t120.0\t25\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE reviews (\n\treview_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\trating INTEGER, \n\tcomment TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (review_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id), \n\tCHECK (rating BETWEEN 1 AND 5)\n)\n\n/*\n3 rows from reviews table:\nreview_id\tuser_id\tproduct_id\trating\tcomment\tcreated_at\n1\t1\t1\t5\tExcellent smartphone!\t2025-07-28 17:03:54\n2\t2\t3\t4\tCoat is warm and stylish.\t2025-07-28 17:03:54\n3\t3\t4\t5\tLaptop is powerful.\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE shipping (\n\tshipping_id INTEGER, \n\torder_id INTEGER, \n\ttracking_number TEXT, \n\tshipping_address TEXT, \n\tshipping_date TIMESTAMP, \n\tdelivery_date TIMESTAMP, \n\tstatus TEXT DEFAULT 'Preparing', \n\tPRIMARY KEY (shipping_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from shipping table:\nshipping_id\torder_id\ttracking_number\tshipping_address\tshipping_date\tdelivery_date\tstatus\n1\t1\tTRK001\tKathmandu\t2025-07-01 00:00:00\t2025-07-05 00:00:00\tDelivered\n2\t2\tTRK002\tPokhara\t2025-07-02 00:00:00\t2025-07-06 00:00:00\tDelivered\n3\t3\tTRK003\tButwal\t2025-07-03 00:00:00\t2025-07-08 00:00:00\tShipped\n*/\n\n\nCREATE TABLE users (\n\tuser_id INTEGER, \n\tname TEXT, \n\temail TEXT, \n\tpassword TEXT, \n\tphone TEXT, \n\taddress TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (user_id), \n\tUNIQUE (email)\n)\n\n/*\n3 rows from users table:\nuser_id\tname\temail\tpassword\tphone\taddress\tcreated_at\n1\tArun Pandey\tarun@example.com\tpass\t9801111111\tKathmandu\t2025-07-28 17:03:54\n2\tSita Sharma\tsita@example.com\tpass\t9802222222\tPokhara\t2025-07-28 17:03:54\n3\tRam Thapa\tram@example.com\tpass\t9803333333\tButwal\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE wishlist (\n\twishlist_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\tadded_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (wishlist_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from wishlist table:\nwishlist_id\tuser_id\tproduct_id\tadded_at\n1\t1\t2\t2025-07-28 17:03:54\n2\t2\t3\t2025-07-28 17:03:54\n3\t3\t1\t2025-07-28 17:03:54\n*/")]
2025-07-29 22:09:40 [DEBUG   ] SQLAgent: Query attempt #1
2025-07-29 22:09:40 [INFO    ] SQLAgent: Invoking LLM for SQL generation...
2025-07-29 22:09:40 [INFO    ] SQLAgent: LLM generated SQL in 0.33 seconds.
2025-07-29 22:09:40 [DEBUG   ] SQLAgent: LLM response content: SELECT * FROM users WHERE name = 'Arun Pandey' LIMIT 1;
2025-07-29 22:09:40 [INFO    ] SQLAgent: Valid SELECT query detected. Proceeding to execute_query.
2025-07-29 22:09:40 [INFO    ] SQLAgent: Executing SQL query from last message.
2025-07-29 22:09:40 [DEBUG   ] SQLAgent: Last message type: AIMessage, content: SELECT * FROM users WHERE name = 'Arun Pandey' LIMIT 1;
2025-07-29 22:09:40 [DEBUG   ] SQLAgent: Raw SQL content: SELECT * FROM users WHERE name = 'Arun Pandey' LIMIT 1;
2025-07-29 22:09:40 [INFO    ] SQLAgent: Extracted SQL query: SELECT * FROM users WHERE name = 'Arun Pandey' LIMIT 1;
2025-07-29 22:09:40 [INFO    ] SQLAgent: Query executed in 0.00 seconds.
2025-07-29 22:09:40 [INFO    ] SQLAgent: Query result: [(1, 'Arun Pandey', 'arun@example.com', 'pass', '9801111111', 'Kathmandu', '2025-07-28 17:03:54')]
2025-07-29 22:09:40 [INFO    ] SQLAgent: Query executed successfully. Proceeding to interpretation.
2025-07-29 22:09:40 [INFO    ] SQLAgent: Interpreting query results into natural language answer.
2025-07-29 22:09:40 [DEBUG   ] SQLAgent: Message history for interpretation: [('HumanMessage', 'show me the details records of user name Arun Pandey in markdown'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist'), ('AIMessage', ''), ('ToolMessage', "\nCREATE TABLE cart (\n\tcart_id INTEGER, \n\tuser_id INTEGER, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (cart_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from cart table:\ncart_id\tuser_id\tcreated_at\n1\t1\t2025-07-28 17:03:54\n2\t2\t2025-07-28 17:03:54\n3\t3\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE cart_items (\n\tcart_item_id INTEGER, \n\tcart_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tPRIMARY KEY (cart_item_id), \n\tFOREIGN KEY(cart_id) REFERENCES cart (cart_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from cart_items table:\ncart_item_id\tcart_id\tproduct_id\tquantity\n1\t1\t3\t1\n2\t2\t4\t2\n3\t3\t2\t1\n*/\n\n\nCREATE TABLE categories (\n\tcategory_id INTEGER, \n\tcategory_name TEXT NOT NULL, \n\tdescription TEXT, \n\tPRIMARY KEY (category_id)\n)\n\n/*\n3 rows from categories table:\ncategory_id\tcategory_name\tdescription\n1\tMobiles\tSmartphones and accessories\n2\tClothing\tMen and Women fashion\n3\tComputers\tLaptops and peripherals\n*/\n\n\nCREATE TABLE coupons (\n\tcoupon_id INTEGER, \n\tcode TEXT, \n\tdiscount_percent INTEGER, \n\tvalid_from DATE, \n\tvalid_to DATE, \n\tPRIMARY KEY (coupon_id), \n\tUNIQUE (code), \n\tCHECK (discount_percent BETWEEN 1 AND 100)\n)\n\n/*\n3 rows from coupons table:\ncoupon_id\tcode\tdiscount_percent\tvalid_from\tvalid_to\n1\tNEPAL10\t10\t2025-07-01\t2025-12-31\n2\tFEST20\t20\t2025-07-01\t2025-12-31\n3\tWELCOME5\t5\t2025-07-01\t2025-12-31\n*/\n\n\nCREATE TABLE order_coupons (\n\tid INTEGER, \n\torder_id INTEGER, \n\tcoupon_id INTEGER, \n\tPRIMARY KEY (id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(coupon_id) REFERENCES coupons (coupon_id)\n)\n\n/*\n3 rows from order_coupons table:\nid\torder_id\tcoupon_id\n1\t1\t1\n2\t2\t2\n3\t3\t3\n*/\n\n\nCREATE TABLE order_items (\n\torder_item_id INTEGER, \n\torder_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tprice REAL NOT NULL, \n\tPRIMARY KEY (order_item_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from order_items table:\norder_item_id\torder_id\tproduct_id\tquantity\tprice\n1\t1\t1\t1\t550.0\n2\t2\t3\t1\t120.0\n3\t3\t4\t1\t1300.0\n*/\n\n\nCREATE TABLE orders (\n\torder_id INTEGER, \n\tuser_id INTEGER, \n\torder_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tstatus TEXT DEFAULT 'Pending', \n\ttotal_amount REAL, \n\tPRIMARY KEY (order_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from orders table:\norder_id\tuser_id\torder_date\tstatus\ttotal_amount\n1\t1\t2025-07-28 17:03:54\tPending\t550.0\n2\t2\t2025-07-28 17:03:54\tPending\t120.0\n3\t3\t2025-07-28 17:03:54\tPending\t1300.0\n*/\n\n\nCREATE TABLE payments (\n\tpayment_id INTEGER, \n\torder_id INTEGER, \n\tpayment_method TEXT, \n\tamount REAL, \n\tpayment_status TEXT DEFAULT 'Pending', \n\tpaid_at TIMESTAMP, \n\tPRIMARY KEY (payment_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from payments table:\npayment_id\torder_id\tpayment_method\tamount\tpayment_status\tpaid_at\n1\t1\tEsewa\t550.0\tCompleted\tNone\n2\t2\tKhalti\t120.0\tCompleted\tNone\n3\t3\tCash\t1300.0\tPending\tNone\n*/\n\n\nCREATE TABLE product_images (\n\timage_id INTEGER, \n\tproduct_id INTEGER, \n\timage_url TEXT NOT NULL, \n\tPRIMARY KEY (image_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from product_images table:\nimage_id\tproduct_id\timage_url\n1\t1\tsamsung.jpg\n2\t2\tiphone.jpg\n3\t3\tcoat.jpg\n*/\n\n\nCREATE TABLE products (\n\tproduct_id INTEGER, \n\tcategory_id INTEGER, \n\tname TEXT NOT NULL, \n\tdescription TEXT, \n\tprice REAL NOT NULL, \n\tstock INTEGER DEFAULT 0, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (product_id), \n\tFOREIGN KEY(category_id) REFERENCES categories (category_id)\n)\n\n/*\n3 rows from products table:\nproduct_id\tcategory_id\tname\tdescription\tprice\tstock\tcreated_at\n1\t1\tSamsung Galaxy A55\t5G smartphone with AMOLED display\t550.0\t50\t2025-07-28 17:03:54\n2\t1\tiPhone 15\tLatest Apple flagship smartphone\t999.0\t30\t2025-07-28 17:03:54\n3\t2\tWinter Coat\tStylish warm coat for winter\t120.0\t25\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE reviews (\n\treview_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\trating INTEGER, \n\tcomment TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (review_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id), \n\tCHECK (rating BETWEEN 1 AND 5)\n)\n\n/*\n3 rows from reviews table:\nreview_id\tuser_id\tproduct_id\trating\tcomment\tcreated_at\n1\t1\t1\t5\tExcellent smartphone!\t2025-07-28 17:03:54\n2\t2\t3\t4\tCoat is warm and stylish.\t2025-07-28 17:03:54\n3\t3\t4\t5\tLaptop is powerful.\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE shipping (\n\tshipping_id INTEGER, \n\torder_id INTEGER, \n\ttracking_number TEXT, \n\tshipping_address TEXT, \n\tshipping_date TIMESTAMP, \n\tdelivery_date TIMESTAMP, \n\tstatus TEXT DEFAULT 'Preparing', \n\tPRIMARY KEY (shipping_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from shipping table:\nshipping_id\torder_id\ttracking_number\tshipping_address\tshipping_date\tdelivery_date\tstatus\n1\t1\tTRK001\tKathmandu\t2025-07-01 00:00:00\t2025-07-05 00:00:00\tDelivered\n2\t2\tTRK002\tPokhara\t2025-07-02 00:00:00\t2025-07-06 00:00:00\tDelivered\n3\t3\tTRK003\tButwal\t2025-07-03 00:00:00\t2025-07-08 00:00:00\tShipped\n*/\n\n\nCREATE TABLE users (\n\tuser_id INTEGER, \n\tname TEXT, \n\temail TEXT, \n\tpassword TEXT, \n\tphone TEXT, \n\taddress TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (user_id), \n\tUNIQUE (email)\n)\n\n/*\n3 rows from users table:\nuser_id\tname\temail\tpassword\tphone\taddress\tcreated_at\n1\tArun Pandey\tarun@example.com\tpass\t9801111111\tKathmandu\t2025-07-28 17:03:54\n2\tSita Sharma\tsita@example.com\tpass\t9802222222\tPokhara\t2025-07-28 17:03:54\n3\tRam Thapa\tram@example.com\tpass\t9803333333\tButwal\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE wishlist (\n\twishlist_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\tadded_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (wishlist_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from wishlist table:\nwishlist_id\tuser_id\tproduct_id\tadded_at\n1\t1\t2\t2025-07-28 17:03:54\n2\t2\t3\t2025-07-28 17:03:54\n3\t3\t1\t2025-07-28 17:03:54\n*/"), ('AIMessage', "SELECT * FROM users WHERE name = 'Arun Pandey' LIMIT 1;"), ('ToolMessage', "[(1, 'Arun Pandey', 'arun@example.com', 'pass', '9801111111', 'Kathmandu', '2025-07-28 17:03:54')]")]
2025-07-29 22:09:40 [INFO    ] SQLAgent: Invoking LLM for result interpretation...
2025-07-29 22:09:40 [INFO    ] SQLAgent: LLM interpretation completed in 0.34 seconds.
2025-07-29 22:09:40 [DEBUG   ] SQLAgent: Interpretation result: Answer: The user with the name 'Arun Pandey' has a user ID of 1, email 'arun@example.com', and phone number '9801111111'.
2025-07-29 22:09:40 [INFO    ] SQLAgent: Final answer generated. Ending workflow.
2025-07-29 22:09:40 [INFO    ] SQLAgent: Agent workflow completed in 0.96 seconds.
2025-07-29 22:09:40 [DEBUG   ] SQLAgent: Extracting final SQL query from message history.
2025-07-29 22:09:40 [DEBUG   ] SQLAgent: Extracted SQL query: SELECT * FROM users WHERE name = 'Arun Pandey' LIMIT 1;
2025-07-29 22:09:40 [INFO    ] SQLAgent: Final SQL Query: SELECT * FROM users WHERE name = 'Arun Pandey' LIMIT 1;
2025-07-29 22:09:40 [INFO    ] SQLAgent: Final Answer: Answer: The user with the name 'Arun Pandey' has a user ID of 1, email 'arun@example.com', and phone number '9801111111'.
2025-07-29 22:10:25 [INFO    ] SQLAgent: === SQL Agent Logger Initialized (Console Output Disabled, ALL Log Levels Captured) ===
2025-07-29 22:10:25 [DEBUG   ] SQLAgent: DEBUG level logging enabled - all detailed information will be captured
2025-07-29 22:10:25 [WARNING ] SQLAgent: WARNING level logging enabled - all warnings will be captured
2025-07-29 22:10:25 [ERROR   ] SQLAgent: ERROR level logging enabled - all errors will be captured
2025-07-29 22:10:25 [CRITICAL] SQLAgent: CRITICAL level logging enabled - all critical issues will be captured
2025-07-29 22:10:25 [INFO    ] SQLAgent: Received query: 'show me the cupon discount per code '
2025-07-29 22:10:25 [INFO    ] SQLAgent: Intent classification result: 'query'
2025-07-29 22:10:25 [INFO    ] SQLAgent: Setting recursion limit: 15
2025-07-29 22:10:25 [INFO    ] SQLAgent: Invoking agent workflow...
2025-07-29 22:10:25 [INFO    ] SQLAgent: Executing first_tool_call: requesting list of tables.
2025-07-29 22:10:25 [DEBUG   ] SQLAgent: first_tool_call response prepared.
2025-07-29 22:10:25 [INFO    ] SQLAgent: Calling model_get_schema to fetch schema.
2025-07-29 22:10:25 [DEBUG   ] SQLAgent: Current message history: [('HumanMessage', 'show me the cupon discount per code '), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist')]
2025-07-29 22:10:25 [INFO    ] SQLAgent: LLM schema request took 0.18 seconds.
2025-07-29 22:10:25 [DEBUG   ] SQLAgent: Schema response: content='' additional_kwargs={'tool_calls': [{'id': '89mddt9f4', 'function': {'arguments': '{"table_names":"coupons,order_coupons"}', 'name': 'sql_db_schema'}, 'type': 'function'}]} response_metadata={'token_usage': {'completion_tokens': 22, 'prompt_tokens': 396, 'total_tokens': 418, 'completion_time': 0.029333333, 'prompt_time': 0.028920479, 'queue_time': 0.052027381, 'total_time': 0.058253812}, 'model_name': 'llama-3.1-8b-instant', 'system_fingerprint': 'fp_c523237e5d', 'service_tier': 'on_demand', 'finish_reason': 'tool_calls', 'logprobs': None} id='run--60fe7694-b2a8-4e79-8373-b5d35a588357-0' tool_calls=[{'name': 'sql_db_schema', 'args': {'table_names': 'coupons,order_coupons'}, 'id': '89mddt9f4', 'type': 'tool_call'}] usage_metadata={'input_tokens': 396, 'output_tokens': 22, 'total_tokens': 418}
2025-07-29 22:10:25 [INFO    ] SQLAgent: Entering query_gen_node to generate SQL query.
2025-07-29 22:10:25 [DEBUG   ] SQLAgent: Message history: [('HumanMessage', 'show me the cupon discount per code '), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist'), ('AIMessage', ''), ('ToolMessage', '\nCREATE TABLE coupons (\n\tcoupon_id INTEGER, \n\tcode TEXT, \n\tdiscount_percent INTEGER, \n\tvalid_from DATE, \n\tvalid_to DATE, \n\tPRIMARY KEY (coupon_id), \n\tUNIQUE (code), \n\tCHECK (discount_percent BETWEEN 1 AND 100)\n)\n\n/*\n3 rows from coupons table:\ncoupon_id\tcode\tdiscount_percent\tvalid_from\tvalid_to\n1\tNEPAL10\t10\t2025-07-01\t2025-12-31\n2\tFEST20\t20\t2025-07-01\t2025-12-31\n3\tWELCOME5\t5\t2025-07-01\t2025-12-31\n*/\n\n\nCREATE TABLE order_coupons (\n\tid INTEGER, \n\torder_id INTEGER, \n\tcoupon_id INTEGER, \n\tPRIMARY KEY (id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(coupon_id) REFERENCES coupons (coupon_id)\n)\n\n/*\n3 rows from order_coupons table:\nid\torder_id\tcoupon_id\n1\t1\t1\n2\t2\t2\n3\t3\t3\n*/')]
2025-07-29 22:10:25 [DEBUG   ] SQLAgent: Query attempt #1
2025-07-29 22:10:25 [INFO    ] SQLAgent: Invoking LLM for SQL generation...
2025-07-29 22:10:26 [INFO    ] SQLAgent: LLM generated SQL in 0.18 seconds.
2025-07-29 22:10:26 [DEBUG   ] SQLAgent: LLM response content: SELECT code, discount_percent FROM coupons;
2025-07-29 22:10:26 [INFO    ] SQLAgent: Valid SELECT query detected. Proceeding to execute_query.
2025-07-29 22:10:26 [INFO    ] SQLAgent: Executing SQL query from last message.
2025-07-29 22:10:26 [DEBUG   ] SQLAgent: Last message type: AIMessage, content: SELECT code, discount_percent FROM coupons;
2025-07-29 22:10:26 [DEBUG   ] SQLAgent: Raw SQL content: SELECT code, discount_percent FROM coupons;
2025-07-29 22:10:26 [INFO    ] SQLAgent: Extracted SQL query: SELECT code, discount_percent FROM coupons;
2025-07-29 22:10:26 [INFO    ] SQLAgent: Query executed in 0.00 seconds.
2025-07-29 22:10:26 [INFO    ] SQLAgent: Query result: [('NEPAL10', 10), ('FEST20', 20), ('WELCOME5', 5), ('SALE15', 15), ('NEW30', 30)]
2025-07-29 22:10:26 [INFO    ] SQLAgent: Query executed successfully. Proceeding to interpretation.
2025-07-29 22:10:26 [INFO    ] SQLAgent: Interpreting query results into natural language answer.
2025-07-29 22:10:26 [DEBUG   ] SQLAgent: Message history for interpretation: [('HumanMessage', 'show me the cupon discount per code '), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist'), ('AIMessage', ''), ('ToolMessage', '\nCREATE TABLE coupons (\n\tcoupon_id INTEGER, \n\tcode TEXT, \n\tdiscount_percent INTEGER, \n\tvalid_from DATE, \n\tvalid_to DATE, \n\tPRIMARY KEY (coupon_id), \n\tUNIQUE (code), \n\tCHECK (discount_percent BETWEEN 1 AND 100)\n)\n\n/*\n3 rows from coupons table:\ncoupon_id\tcode\tdiscount_percent\tvalid_from\tvalid_to\n1\tNEPAL10\t10\t2025-07-01\t2025-12-31\n2\tFEST20\t20\t2025-07-01\t2025-12-31\n3\tWELCOME5\t5\t2025-07-01\t2025-12-31\n*/\n\n\nCREATE TABLE order_coupons (\n\tid INTEGER, \n\torder_id INTEGER, \n\tcoupon_id INTEGER, \n\tPRIMARY KEY (id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(coupon_id) REFERENCES coupons (coupon_id)\n)\n\n/*\n3 rows from order_coupons table:\nid\torder_id\tcoupon_id\n1\t1\t1\n2\t2\t2\n3\t3\t3\n*/'), ('AIMessage', 'SELECT code, discount_percent FROM coupons;'), ('ToolMessage', "[('NEPAL10', 10), ('FEST20', 20), ('WELCOME5', 5), ('SALE15', 15), ('NEW30', 30)]")]
2025-07-29 22:10:26 [INFO    ] SQLAgent: Invoking LLM for result interpretation...
2025-07-29 22:10:26 [INFO    ] SQLAgent: LLM interpretation completed in 0.23 seconds.
2025-07-29 22:10:26 [DEBUG   ] SQLAgent: Interpretation result: Answer: The coupon discount per code is as follows:
- NEPAL10: 10%
- FEST20: 20%
- WELCOME5: 5%
- SALE15: 15%
- NEW30: 30%
2025-07-29 22:10:26 [INFO    ] SQLAgent: Final answer generated. Ending workflow.
2025-07-29 22:10:26 [INFO    ] SQLAgent: Agent workflow completed in 0.61 seconds.
2025-07-29 22:10:26 [DEBUG   ] SQLAgent: Extracting final SQL query from message history.
2025-07-29 22:10:26 [DEBUG   ] SQLAgent: Extracted SQL query: SELECT code, discount_percent FROM coupons;
2025-07-29 22:10:26 [INFO    ] SQLAgent: Final SQL Query: SELECT code, discount_percent FROM coupons;
2025-07-29 22:10:26 [INFO    ] SQLAgent: Final Answer: Answer: The coupon discount per code is as follows:
- NEPAL10: 10%
- FEST20: 20%
- WELCOME5: 5%
- SALE15: 15%
- NEW30: 30%
2025-07-29 22:11:51 [INFO    ] SQLAgent: === SQL Agent Logger Initialized (Console Output Disabled, ALL Log Levels Captured) ===
2025-07-29 22:11:51 [DEBUG   ] SQLAgent: DEBUG level logging enabled - all detailed information will be captured
2025-07-29 22:11:51 [WARNING ] SQLAgent: WARNING level logging enabled - all warnings will be captured
2025-07-29 22:11:51 [ERROR   ] SQLAgent: ERROR level logging enabled - all errors will be captured
2025-07-29 22:11:51 [CRITICAL] SQLAgent: CRITICAL level logging enabled - all critical issues will be captured
2025-07-29 22:11:51 [INFO    ] SQLAgent: Initializing SQLAgent...
2025-07-29 22:11:51 [DEBUG   ] SQLAgent: Input - db_path: D:\ML(ExtraClass Project)\AGENT AI\SQL-Sage-Intelligent-DB-Agent-with-Gemini-LangGraph\database\final_ecommerce.db, model_name: llama-3.1-8b-instant
2025-07-29 22:11:51 [DEBUG   ] SQLAgent: Connection string created: sqlite:///D:\ML(ExtraClass Project)\AGENT AI\SQL-Sage-Intelligent-DB-Agent-with-Gemini-LangGraph\database\final_ecommerce.db
2025-07-29 22:11:51 [INFO    ] SQLAgent: Connected to SQLite database.
2025-07-29 22:11:51 [DEBUG   ] SQLAgent: Database usable tables: ['cart', 'cart_items', 'categories', 'coupons', 'order_coupons', 'order_items', 'orders', 'payments', 'product_images', 'products', 'reviews', 'shipping', 'users', 'wishlist']
2025-07-29 22:11:52 [INFO    ] SQLAgent: Groq LLM initialized with model: llama-3.1-8b-instant
2025-07-29 22:11:52 [INFO    ] SQLAgent: Starting _setup_tools...
2025-07-29 22:11:52 [DEBUG   ] SQLAgent: Fetched 4 tools from toolkit: ['sql_db_query', 'sql_db_schema', 'sql_db_list_tables', 'sql_db_query_checker']
2025-07-29 22:11:52 [DEBUG   ] SQLAgent: Tool 'sql_db_list_tables' loaded.
2025-07-29 22:11:52 [DEBUG   ] SQLAgent: Tool 'sql_db_schema' loaded.
2025-07-29 22:11:52 [INFO    ] SQLAgent: All tools setup completed.
2025-07-29 22:11:52 [INFO    ] SQLAgent: Setting up prompts...
2025-07-29 22:11:52 [DEBUG   ] SQLAgent: Query generation prompt created.
2025-07-29 22:11:52 [DEBUG   ] SQLAgent: Interpretation prompt created.
2025-07-29 22:11:52 [INFO    ] SQLAgent: Prompts setup completed.
2025-07-29 22:11:52 [DEBUG   ] SQLAgent: Intent classification prompt added.
2025-07-29 22:11:52 [INFO    ] SQLAgent: Building LangGraph workflow...
2025-07-29 22:11:52 [DEBUG   ] SQLAgent: Node 'first_tool_call' added to graph.
2025-07-29 22:11:52 [DEBUG   ] SQLAgent: Creating tool node with fallback for tools: ['sql_db_list_tables']
2025-07-29 22:11:52 [DEBUG   ] SQLAgent: Tool node with fallback created.
2025-07-29 22:11:52 [DEBUG   ] SQLAgent: Node 'list_tables_tool' added to graph.
2025-07-29 22:11:52 [DEBUG   ] SQLAgent: Node 'model_get_schema' added to graph.
2025-07-29 22:11:52 [DEBUG   ] SQLAgent: Creating tool node with fallback for tools: ['sql_db_schema']
2025-07-29 22:11:52 [DEBUG   ] SQLAgent: Tool node with fallback created.
2025-07-29 22:11:52 [DEBUG   ] SQLAgent: Node 'get_schema_tool' added to graph.
2025-07-29 22:11:52 [DEBUG   ] SQLAgent: Node 'query_gen' added to graph.
2025-07-29 22:11:52 [DEBUG   ] SQLAgent: Node 'execute_query' added to graph.
2025-07-29 22:11:52 [DEBUG   ] SQLAgent: Node 'interpret_results' added to graph.
2025-07-29 22:11:52 [DEBUG   ] SQLAgent: Edge: START → first_tool_call
2025-07-29 22:11:52 [DEBUG   ] SQLAgent: Edge: first_tool_call → list_tables_tool
2025-07-29 22:11:52 [DEBUG   ] SQLAgent: Edge: list_tables_tool → model_get_schema
2025-07-29 22:11:52 [DEBUG   ] SQLAgent: Edge: model_get_schema → get_schema_tool
2025-07-29 22:11:52 [DEBUG   ] SQLAgent: Edge: get_schema_tool → query_gen
2025-07-29 22:11:52 [DEBUG   ] SQLAgent: Conditional edges added from 'query_gen'
2025-07-29 22:11:52 [DEBUG   ] SQLAgent: Conditional edges added from 'execute_query'
2025-07-29 22:11:52 [DEBUG   ] SQLAgent: Conditional edges added from 'interpret_results'
2025-07-29 22:11:52 [INFO    ] SQLAgent: LangGraph workflow compiled successfully.
2025-07-29 22:11:52 [INFO    ] SQLAgent: SQLAgent initialization completed.
2025-07-29 22:11:55 [INFO    ] SQLAgent: === SQL Agent Logger Initialized (Console Output Disabled, ALL Log Levels Captured) ===
2025-07-29 22:11:55 [DEBUG   ] SQLAgent: DEBUG level logging enabled - all detailed information will be captured
2025-07-29 22:11:55 [WARNING ] SQLAgent: WARNING level logging enabled - all warnings will be captured
2025-07-29 22:11:55 [ERROR   ] SQLAgent: ERROR level logging enabled - all errors will be captured
2025-07-29 22:11:55 [CRITICAL] SQLAgent: CRITICAL level logging enabled - all critical issues will be captured
2025-07-29 22:11:56 [INFO    ] SQLAgent: === SQL Agent Logger Initialized (Console Output Disabled, ALL Log Levels Captured) ===
2025-07-29 22:11:56 [DEBUG   ] SQLAgent: DEBUG level logging enabled - all detailed information will be captured
2025-07-29 22:11:56 [WARNING ] SQLAgent: WARNING level logging enabled - all warnings will be captured
2025-07-29 22:11:56 [ERROR   ] SQLAgent: ERROR level logging enabled - all errors will be captured
2025-07-29 22:11:56 [CRITICAL] SQLAgent: CRITICAL level logging enabled - all critical issues will be captured
2025-07-29 22:12:21 [INFO    ] SQLAgent: === SQL Agent Logger Initialized (Console Output Disabled, ALL Log Levels Captured) ===
2025-07-29 22:12:21 [DEBUG   ] SQLAgent: DEBUG level logging enabled - all detailed information will be captured
2025-07-29 22:12:21 [WARNING ] SQLAgent: WARNING level logging enabled - all warnings will be captured
2025-07-29 22:12:21 [ERROR   ] SQLAgent: ERROR level logging enabled - all errors will be captured
2025-07-29 22:12:21 [CRITICAL] SQLAgent: CRITICAL level logging enabled - all critical issues will be captured
2025-07-29 22:12:21 [INFO    ] SQLAgent: Received query: 'Hi Agent what's up'
2025-07-29 22:12:21 [INFO    ] SQLAgent: Intent classification result: 'greeting'
2025-07-29 22:12:21 [INFO    ] SQLAgent: Pure greeting detected via LLM. Responding directly.
2025-07-29 22:12:35 [INFO    ] SQLAgent: === SQL Agent Logger Initialized (Console Output Disabled, ALL Log Levels Captured) ===
2025-07-29 22:12:35 [DEBUG   ] SQLAgent: DEBUG level logging enabled - all detailed information will be captured
2025-07-29 22:12:35 [WARNING ] SQLAgent: WARNING level logging enabled - all warnings will be captured
2025-07-29 22:12:35 [ERROR   ] SQLAgent: ERROR level logging enabled - all errors will be captured
2025-07-29 22:12:35 [CRITICAL] SQLAgent: CRITICAL level logging enabled - all critical issues will be captured
2025-07-29 22:12:35 [INFO    ] SQLAgent: Received query: 'Show me the cupon avilable per code'
2025-07-29 22:12:36 [INFO    ] SQLAgent: Intent classification result: 'i'm not aware of any information about a "coupon available per code". could you please provide more context or clarify what you are referring to?'
2025-07-29 22:12:36 [INFO    ] SQLAgent: Setting recursion limit: 15
2025-07-29 22:12:36 [INFO    ] SQLAgent: Invoking agent workflow...
2025-07-29 22:12:36 [INFO    ] SQLAgent: Executing first_tool_call: requesting list of tables.
2025-07-29 22:12:36 [DEBUG   ] SQLAgent: first_tool_call response prepared.
2025-07-29 22:12:36 [INFO    ] SQLAgent: Calling model_get_schema to fetch schema.
2025-07-29 22:12:36 [DEBUG   ] SQLAgent: Current message history: [('HumanMessage', 'Show me the cupon avilable per code'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist')]
2025-07-29 22:12:36 [INFO    ] SQLAgent: LLM schema request took 0.23 seconds.
2025-07-29 22:12:36 [DEBUG   ] SQLAgent: Schema response: content='' additional_kwargs={'tool_calls': [{'id': 'dcwpmnz8k', 'function': {'arguments': '{"table_names":"cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist"}', 'name': 'sql_db_schema'}, 'type': 'function'}]} response_metadata={'token_usage': {'completion_tokens': 48, 'prompt_tokens': 397, 'total_tokens': 445, 'completion_time': 0.064, 'prompt_time': 0.025747538, 'queue_time': 0.051224462, 'total_time': 0.089747538}, 'model_name': 'llama-3.1-8b-instant', 'system_fingerprint': 'fp_c523237e5d', 'service_tier': 'on_demand', 'finish_reason': 'tool_calls', 'logprobs': None} id='run--82717319-3c94-4021-b643-5d20f31225c6-0' tool_calls=[{'name': 'sql_db_schema', 'args': {'table_names': 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist'}, 'id': 'dcwpmnz8k', 'type': 'tool_call'}] usage_metadata={'input_tokens': 397, 'output_tokens': 48, 'total_tokens': 445}
2025-07-29 22:12:36 [INFO    ] SQLAgent: Entering query_gen_node to generate SQL query.
2025-07-29 22:12:36 [DEBUG   ] SQLAgent: Message history: [('HumanMessage', 'Show me the cupon avilable per code'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist'), ('AIMessage', ''), ('ToolMessage', "\nCREATE TABLE cart (\n\tcart_id INTEGER, \n\tuser_id INTEGER, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (cart_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from cart table:\ncart_id\tuser_id\tcreated_at\n1\t1\t2025-07-28 17:03:54\n2\t2\t2025-07-28 17:03:54\n3\t3\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE cart_items (\n\tcart_item_id INTEGER, \n\tcart_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tPRIMARY KEY (cart_item_id), \n\tFOREIGN KEY(cart_id) REFERENCES cart (cart_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from cart_items table:\ncart_item_id\tcart_id\tproduct_id\tquantity\n1\t1\t3\t1\n2\t2\t4\t2\n3\t3\t2\t1\n*/\n\n\nCREATE TABLE categories (\n\tcategory_id INTEGER, \n\tcategory_name TEXT NOT NULL, \n\tdescription TEXT, \n\tPRIMARY KEY (category_id)\n)\n\n/*\n3 rows from categories table:\ncategory_id\tcategory_name\tdescription\n1\tMobiles\tSmartphones and accessories\n2\tClothing\tMen and Women fashion\n3\tComputers\tLaptops and peripherals\n*/\n\n\nCREATE TABLE coupons (\n\tcoupon_id INTEGER, \n\tcode TEXT, \n\tdiscount_percent INTEGER, \n\tvalid_from DATE, \n\tvalid_to DATE, \n\tPRIMARY KEY (coupon_id), \n\tUNIQUE (code), \n\tCHECK (discount_percent BETWEEN 1 AND 100)\n)\n\n/*\n3 rows from coupons table:\ncoupon_id\tcode\tdiscount_percent\tvalid_from\tvalid_to\n1\tNEPAL10\t10\t2025-07-01\t2025-12-31\n2\tFEST20\t20\t2025-07-01\t2025-12-31\n3\tWELCOME5\t5\t2025-07-01\t2025-12-31\n*/\n\n\nCREATE TABLE order_coupons (\n\tid INTEGER, \n\torder_id INTEGER, \n\tcoupon_id INTEGER, \n\tPRIMARY KEY (id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(coupon_id) REFERENCES coupons (coupon_id)\n)\n\n/*\n3 rows from order_coupons table:\nid\torder_id\tcoupon_id\n1\t1\t1\n2\t2\t2\n3\t3\t3\n*/\n\n\nCREATE TABLE order_items (\n\torder_item_id INTEGER, \n\torder_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tprice REAL NOT NULL, \n\tPRIMARY KEY (order_item_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from order_items table:\norder_item_id\torder_id\tproduct_id\tquantity\tprice\n1\t1\t1\t1\t550.0\n2\t2\t3\t1\t120.0\n3\t3\t4\t1\t1300.0\n*/\n\n\nCREATE TABLE orders (\n\torder_id INTEGER, \n\tuser_id INTEGER, \n\torder_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tstatus TEXT DEFAULT 'Pending', \n\ttotal_amount REAL, \n\tPRIMARY KEY (order_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from orders table:\norder_id\tuser_id\torder_date\tstatus\ttotal_amount\n1\t1\t2025-07-28 17:03:54\tPending\t550.0\n2\t2\t2025-07-28 17:03:54\tPending\t120.0\n3\t3\t2025-07-28 17:03:54\tPending\t1300.0\n*/\n\n\nCREATE TABLE payments (\n\tpayment_id INTEGER, \n\torder_id INTEGER, \n\tpayment_method TEXT, \n\tamount REAL, \n\tpayment_status TEXT DEFAULT 'Pending', \n\tpaid_at TIMESTAMP, \n\tPRIMARY KEY (payment_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from payments table:\npayment_id\torder_id\tpayment_method\tamount\tpayment_status\tpaid_at\n1\t1\tEsewa\t550.0\tCompleted\tNone\n2\t2\tKhalti\t120.0\tCompleted\tNone\n3\t3\tCash\t1300.0\tPending\tNone\n*/\n\n\nCREATE TABLE product_images (\n\timage_id INTEGER, \n\tproduct_id INTEGER, \n\timage_url TEXT NOT NULL, \n\tPRIMARY KEY (image_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from product_images table:\nimage_id\tproduct_id\timage_url\n1\t1\tsamsung.jpg\n2\t2\tiphone.jpg\n3\t3\tcoat.jpg\n*/\n\n\nCREATE TABLE products (\n\tproduct_id INTEGER, \n\tcategory_id INTEGER, \n\tname TEXT NOT NULL, \n\tdescription TEXT, \n\tprice REAL NOT NULL, \n\tstock INTEGER DEFAULT 0, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (product_id), \n\tFOREIGN KEY(category_id) REFERENCES categories (category_id)\n)\n\n/*\n3 rows from products table:\nproduct_id\tcategory_id\tname\tdescription\tprice\tstock\tcreated_at\n1\t1\tSamsung Galaxy A55\t5G smartphone with AMOLED display\t550.0\t50\t2025-07-28 17:03:54\n2\t1\tiPhone 15\tLatest Apple flagship smartphone\t999.0\t30\t2025-07-28 17:03:54\n3\t2\tWinter Coat\tStylish warm coat for winter\t120.0\t25\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE reviews (\n\treview_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\trating INTEGER, \n\tcomment TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (review_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id), \n\tCHECK (rating BETWEEN 1 AND 5)\n)\n\n/*\n3 rows from reviews table:\nreview_id\tuser_id\tproduct_id\trating\tcomment\tcreated_at\n1\t1\t1\t5\tExcellent smartphone!\t2025-07-28 17:03:54\n2\t2\t3\t4\tCoat is warm and stylish.\t2025-07-28 17:03:54\n3\t3\t4\t5\tLaptop is powerful.\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE shipping (\n\tshipping_id INTEGER, \n\torder_id INTEGER, \n\ttracking_number TEXT, \n\tshipping_address TEXT, \n\tshipping_date TIMESTAMP, \n\tdelivery_date TIMESTAMP, \n\tstatus TEXT DEFAULT 'Preparing', \n\tPRIMARY KEY (shipping_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from shipping table:\nshipping_id\torder_id\ttracking_number\tshipping_address\tshipping_date\tdelivery_date\tstatus\n1\t1\tTRK001\tKathmandu\t2025-07-01 00:00:00\t2025-07-05 00:00:00\tDelivered\n2\t2\tTRK002\tPokhara\t2025-07-02 00:00:00\t2025-07-06 00:00:00\tDelivered\n3\t3\tTRK003\tButwal\t2025-07-03 00:00:00\t2025-07-08 00:00:00\tShipped\n*/\n\n\nCREATE TABLE users (\n\tuser_id INTEGER, \n\tname TEXT, \n\temail TEXT, \n\tpassword TEXT, \n\tphone TEXT, \n\taddress TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (user_id), \n\tUNIQUE (email)\n)\n\n/*\n3 rows from users table:\nuser_id\tname\temail\tpassword\tphone\taddress\tcreated_at\n1\tArun Pandey\tarun@example.com\tpass\t9801111111\tKathmandu\t2025-07-28 17:03:54\n2\tSita Sharma\tsita@example.com\tpass\t9802222222\tPokhara\t2025-07-28 17:03:54\n3\tRam Thapa\tram@example.com\tpass\t9803333333\tButwal\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE wishlist (\n\twishlist_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\tadded_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (wishlist_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from wishlist table:\nwishlist_id\tuser_id\tproduct_id\tadded_at\n1\t1\t2\t2025-07-28 17:03:54\n2\t2\t3\t2025-07-28 17:03:54\n3\t3\t1\t2025-07-28 17:03:54\n*/")]
2025-07-29 22:12:36 [DEBUG   ] SQLAgent: Query attempt #1
2025-07-29 22:12:36 [INFO    ] SQLAgent: Invoking LLM for SQL generation...
2025-07-29 22:12:36 [INFO    ] SQLAgent: LLM generated SQL in 0.36 seconds.
2025-07-29 22:12:36 [DEBUG   ] SQLAgent: LLM response content: SELECT COUNT(*) FROM coupons;
2025-07-29 22:12:36 [INFO    ] SQLAgent: Valid SELECT query detected. Proceeding to execute_query.
2025-07-29 22:12:36 [INFO    ] SQLAgent: Executing SQL query from last message.
2025-07-29 22:12:36 [DEBUG   ] SQLAgent: Last message type: AIMessage, content: SELECT COUNT(*) FROM coupons;
2025-07-29 22:12:36 [DEBUG   ] SQLAgent: Raw SQL content: SELECT COUNT(*) FROM coupons;
2025-07-29 22:12:36 [INFO    ] SQLAgent: Extracted SQL query: SELECT COUNT(*) FROM coupons;
2025-07-29 22:12:36 [INFO    ] SQLAgent: Query executed in 0.00 seconds.
2025-07-29 22:12:36 [INFO    ] SQLAgent: Query result: [(5,)]
2025-07-29 22:12:36 [INFO    ] SQLAgent: Query executed successfully. Proceeding to interpretation.
2025-07-29 22:12:36 [INFO    ] SQLAgent: Interpreting query results into natural language answer.
2025-07-29 22:12:36 [DEBUG   ] SQLAgent: Message history for interpretation: [('HumanMessage', 'Show me the cupon avilable per code'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist'), ('AIMessage', ''), ('ToolMessage', "\nCREATE TABLE cart (\n\tcart_id INTEGER, \n\tuser_id INTEGER, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (cart_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from cart table:\ncart_id\tuser_id\tcreated_at\n1\t1\t2025-07-28 17:03:54\n2\t2\t2025-07-28 17:03:54\n3\t3\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE cart_items (\n\tcart_item_id INTEGER, \n\tcart_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tPRIMARY KEY (cart_item_id), \n\tFOREIGN KEY(cart_id) REFERENCES cart (cart_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from cart_items table:\ncart_item_id\tcart_id\tproduct_id\tquantity\n1\t1\t3\t1\n2\t2\t4\t2\n3\t3\t2\t1\n*/\n\n\nCREATE TABLE categories (\n\tcategory_id INTEGER, \n\tcategory_name TEXT NOT NULL, \n\tdescription TEXT, \n\tPRIMARY KEY (category_id)\n)\n\n/*\n3 rows from categories table:\ncategory_id\tcategory_name\tdescription\n1\tMobiles\tSmartphones and accessories\n2\tClothing\tMen and Women fashion\n3\tComputers\tLaptops and peripherals\n*/\n\n\nCREATE TABLE coupons (\n\tcoupon_id INTEGER, \n\tcode TEXT, \n\tdiscount_percent INTEGER, \n\tvalid_from DATE, \n\tvalid_to DATE, \n\tPRIMARY KEY (coupon_id), \n\tUNIQUE (code), \n\tCHECK (discount_percent BETWEEN 1 AND 100)\n)\n\n/*\n3 rows from coupons table:\ncoupon_id\tcode\tdiscount_percent\tvalid_from\tvalid_to\n1\tNEPAL10\t10\t2025-07-01\t2025-12-31\n2\tFEST20\t20\t2025-07-01\t2025-12-31\n3\tWELCOME5\t5\t2025-07-01\t2025-12-31\n*/\n\n\nCREATE TABLE order_coupons (\n\tid INTEGER, \n\torder_id INTEGER, \n\tcoupon_id INTEGER, \n\tPRIMARY KEY (id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(coupon_id) REFERENCES coupons (coupon_id)\n)\n\n/*\n3 rows from order_coupons table:\nid\torder_id\tcoupon_id\n1\t1\t1\n2\t2\t2\n3\t3\t3\n*/\n\n\nCREATE TABLE order_items (\n\torder_item_id INTEGER, \n\torder_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tprice REAL NOT NULL, \n\tPRIMARY KEY (order_item_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from order_items table:\norder_item_id\torder_id\tproduct_id\tquantity\tprice\n1\t1\t1\t1\t550.0\n2\t2\t3\t1\t120.0\n3\t3\t4\t1\t1300.0\n*/\n\n\nCREATE TABLE orders (\n\torder_id INTEGER, \n\tuser_id INTEGER, \n\torder_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tstatus TEXT DEFAULT 'Pending', \n\ttotal_amount REAL, \n\tPRIMARY KEY (order_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from orders table:\norder_id\tuser_id\torder_date\tstatus\ttotal_amount\n1\t1\t2025-07-28 17:03:54\tPending\t550.0\n2\t2\t2025-07-28 17:03:54\tPending\t120.0\n3\t3\t2025-07-28 17:03:54\tPending\t1300.0\n*/\n\n\nCREATE TABLE payments (\n\tpayment_id INTEGER, \n\torder_id INTEGER, \n\tpayment_method TEXT, \n\tamount REAL, \n\tpayment_status TEXT DEFAULT 'Pending', \n\tpaid_at TIMESTAMP, \n\tPRIMARY KEY (payment_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from payments table:\npayment_id\torder_id\tpayment_method\tamount\tpayment_status\tpaid_at\n1\t1\tEsewa\t550.0\tCompleted\tNone\n2\t2\tKhalti\t120.0\tCompleted\tNone\n3\t3\tCash\t1300.0\tPending\tNone\n*/\n\n\nCREATE TABLE product_images (\n\timage_id INTEGER, \n\tproduct_id INTEGER, \n\timage_url TEXT NOT NULL, \n\tPRIMARY KEY (image_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from product_images table:\nimage_id\tproduct_id\timage_url\n1\t1\tsamsung.jpg\n2\t2\tiphone.jpg\n3\t3\tcoat.jpg\n*/\n\n\nCREATE TABLE products (\n\tproduct_id INTEGER, \n\tcategory_id INTEGER, \n\tname TEXT NOT NULL, \n\tdescription TEXT, \n\tprice REAL NOT NULL, \n\tstock INTEGER DEFAULT 0, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (product_id), \n\tFOREIGN KEY(category_id) REFERENCES categories (category_id)\n)\n\n/*\n3 rows from products table:\nproduct_id\tcategory_id\tname\tdescription\tprice\tstock\tcreated_at\n1\t1\tSamsung Galaxy A55\t5G smartphone with AMOLED display\t550.0\t50\t2025-07-28 17:03:54\n2\t1\tiPhone 15\tLatest Apple flagship smartphone\t999.0\t30\t2025-07-28 17:03:54\n3\t2\tWinter Coat\tStylish warm coat for winter\t120.0\t25\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE reviews (\n\treview_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\trating INTEGER, \n\tcomment TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (review_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id), \n\tCHECK (rating BETWEEN 1 AND 5)\n)\n\n/*\n3 rows from reviews table:\nreview_id\tuser_id\tproduct_id\trating\tcomment\tcreated_at\n1\t1\t1\t5\tExcellent smartphone!\t2025-07-28 17:03:54\n2\t2\t3\t4\tCoat is warm and stylish.\t2025-07-28 17:03:54\n3\t3\t4\t5\tLaptop is powerful.\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE shipping (\n\tshipping_id INTEGER, \n\torder_id INTEGER, \n\ttracking_number TEXT, \n\tshipping_address TEXT, \n\tshipping_date TIMESTAMP, \n\tdelivery_date TIMESTAMP, \n\tstatus TEXT DEFAULT 'Preparing', \n\tPRIMARY KEY (shipping_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from shipping table:\nshipping_id\torder_id\ttracking_number\tshipping_address\tshipping_date\tdelivery_date\tstatus\n1\t1\tTRK001\tKathmandu\t2025-07-01 00:00:00\t2025-07-05 00:00:00\tDelivered\n2\t2\tTRK002\tPokhara\t2025-07-02 00:00:00\t2025-07-06 00:00:00\tDelivered\n3\t3\tTRK003\tButwal\t2025-07-03 00:00:00\t2025-07-08 00:00:00\tShipped\n*/\n\n\nCREATE TABLE users (\n\tuser_id INTEGER, \n\tname TEXT, \n\temail TEXT, \n\tpassword TEXT, \n\tphone TEXT, \n\taddress TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (user_id), \n\tUNIQUE (email)\n)\n\n/*\n3 rows from users table:\nuser_id\tname\temail\tpassword\tphone\taddress\tcreated_at\n1\tArun Pandey\tarun@example.com\tpass\t9801111111\tKathmandu\t2025-07-28 17:03:54\n2\tSita Sharma\tsita@example.com\tpass\t9802222222\tPokhara\t2025-07-28 17:03:54\n3\tRam Thapa\tram@example.com\tpass\t9803333333\tButwal\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE wishlist (\n\twishlist_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\tadded_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (wishlist_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from wishlist table:\nwishlist_id\tuser_id\tproduct_id\tadded_at\n1\t1\t2\t2025-07-28 17:03:54\n2\t2\t3\t2025-07-28 17:03:54\n3\t3\t1\t2025-07-28 17:03:54\n*/"), ('AIMessage', 'SELECT COUNT(*) FROM coupons;'), ('ToolMessage', '[(5,)]')]
2025-07-29 22:12:36 [INFO    ] SQLAgent: Invoking LLM for result interpretation...
2025-07-29 22:12:37 [INFO    ] SQLAgent: LLM interpretation completed in 0.38 seconds.
2025-07-29 22:12:37 [DEBUG   ] SQLAgent: Interpretation result: Answer: There are 5 coupons available.
2025-07-29 22:12:37 [INFO    ] SQLAgent: Final answer generated. Ending workflow.
2025-07-29 22:12:37 [INFO    ] SQLAgent: Agent workflow completed in 1.01 seconds.
2025-07-29 22:12:37 [DEBUG   ] SQLAgent: Extracting final SQL query from message history.
2025-07-29 22:12:37 [DEBUG   ] SQLAgent: Extracted SQL query: SELECT COUNT(*) FROM coupons;
2025-07-29 22:12:37 [INFO    ] SQLAgent: Final SQL Query: SELECT COUNT(*) FROM coupons;
2025-07-29 22:12:37 [INFO    ] SQLAgent: Final Answer: Answer: There are 5 coupons available.
2025-07-29 22:12:56 [INFO    ] SQLAgent: === SQL Agent Logger Initialized (Console Output Disabled, ALL Log Levels Captured) ===
2025-07-29 22:12:56 [DEBUG   ] SQLAgent: DEBUG level logging enabled - all detailed information will be captured
2025-07-29 22:12:56 [WARNING ] SQLAgent: WARNING level logging enabled - all warnings will be captured
2025-07-29 22:12:56 [ERROR   ] SQLAgent: ERROR level logging enabled - all errors will be captured
2025-07-29 22:12:56 [CRITICAL] SQLAgent: CRITICAL level logging enabled - all critical issues will be captured
2025-07-29 22:12:56 [INFO    ] SQLAgent: Received query: 'Show me the cupon avilable per code all in readable formate'
2025-07-29 22:12:57 [INFO    ] SQLAgent: Intent classification result: 'i'm not aware of any information about coupons available per code. however, i can provide you with a general format for displaying coupon information in a readable format.

**coupon information**

| coupon code | description | discount | expiration date |
| --- | --- | --- | --- |
| coupon1 | 10% off all products | 10% | 2024-02-28 |
| coupon2 | buy one get one free | 100% | 2024-03-31 |
| coupon3 | 20% off all orders over $100 | 20% | 2024-04-30 |

if you have specific coupon codes and information, i can help you format it in a readable way.'
2025-07-29 22:12:57 [INFO    ] SQLAgent: Setting recursion limit: 15
2025-07-29 22:12:57 [INFO    ] SQLAgent: Invoking agent workflow...
2025-07-29 22:12:57 [INFO    ] SQLAgent: Executing first_tool_call: requesting list of tables.
2025-07-29 22:12:57 [DEBUG   ] SQLAgent: first_tool_call response prepared.
2025-07-29 22:12:57 [INFO    ] SQLAgent: Calling model_get_schema to fetch schema.
2025-07-29 22:12:57 [DEBUG   ] SQLAgent: Current message history: [('HumanMessage', 'Show me the cupon avilable per code all in readable formate'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist')]
2025-07-29 22:12:57 [INFO    ] SQLAgent: LLM schema request took 0.53 seconds.
2025-07-29 22:12:57 [DEBUG   ] SQLAgent: Schema response: content='' additional_kwargs={'tool_calls': [{'id': 'e6caqpkwz', 'function': {'arguments': '{"table_names":"cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist"}', 'name': 'sql_db_schema'}, 'type': 'function'}]} response_metadata={'token_usage': {'completion_tokens': 48, 'prompt_tokens': 402, 'total_tokens': 450, 'completion_time': 0.064, 'prompt_time': 0.340452042, 'queue_time': 0.06006509700000001, 'total_time': 0.404452042}, 'model_name': 'llama-3.1-8b-instant', 'system_fingerprint': 'fp_c523237e5d', 'service_tier': 'on_demand', 'finish_reason': 'tool_calls', 'logprobs': None} id='run--02e90b20-e5f7-4681-8d19-aec21211c197-0' tool_calls=[{'name': 'sql_db_schema', 'args': {'table_names': 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist'}, 'id': 'e6caqpkwz', 'type': 'tool_call'}] usage_metadata={'input_tokens': 402, 'output_tokens': 48, 'total_tokens': 450}
2025-07-29 22:12:57 [INFO    ] SQLAgent: Entering query_gen_node to generate SQL query.
2025-07-29 22:12:57 [DEBUG   ] SQLAgent: Message history: [('HumanMessage', 'Show me the cupon avilable per code all in readable formate'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist'), ('AIMessage', ''), ('ToolMessage', "\nCREATE TABLE cart (\n\tcart_id INTEGER, \n\tuser_id INTEGER, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (cart_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from cart table:\ncart_id\tuser_id\tcreated_at\n1\t1\t2025-07-28 17:03:54\n2\t2\t2025-07-28 17:03:54\n3\t3\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE cart_items (\n\tcart_item_id INTEGER, \n\tcart_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tPRIMARY KEY (cart_item_id), \n\tFOREIGN KEY(cart_id) REFERENCES cart (cart_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from cart_items table:\ncart_item_id\tcart_id\tproduct_id\tquantity\n1\t1\t3\t1\n2\t2\t4\t2\n3\t3\t2\t1\n*/\n\n\nCREATE TABLE categories (\n\tcategory_id INTEGER, \n\tcategory_name TEXT NOT NULL, \n\tdescription TEXT, \n\tPRIMARY KEY (category_id)\n)\n\n/*\n3 rows from categories table:\ncategory_id\tcategory_name\tdescription\n1\tMobiles\tSmartphones and accessories\n2\tClothing\tMen and Women fashion\n3\tComputers\tLaptops and peripherals\n*/\n\n\nCREATE TABLE coupons (\n\tcoupon_id INTEGER, \n\tcode TEXT, \n\tdiscount_percent INTEGER, \n\tvalid_from DATE, \n\tvalid_to DATE, \n\tPRIMARY KEY (coupon_id), \n\tUNIQUE (code), \n\tCHECK (discount_percent BETWEEN 1 AND 100)\n)\n\n/*\n3 rows from coupons table:\ncoupon_id\tcode\tdiscount_percent\tvalid_from\tvalid_to\n1\tNEPAL10\t10\t2025-07-01\t2025-12-31\n2\tFEST20\t20\t2025-07-01\t2025-12-31\n3\tWELCOME5\t5\t2025-07-01\t2025-12-31\n*/\n\n\nCREATE TABLE order_coupons (\n\tid INTEGER, \n\torder_id INTEGER, \n\tcoupon_id INTEGER, \n\tPRIMARY KEY (id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(coupon_id) REFERENCES coupons (coupon_id)\n)\n\n/*\n3 rows from order_coupons table:\nid\torder_id\tcoupon_id\n1\t1\t1\n2\t2\t2\n3\t3\t3\n*/\n\n\nCREATE TABLE order_items (\n\torder_item_id INTEGER, \n\torder_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tprice REAL NOT NULL, \n\tPRIMARY KEY (order_item_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from order_items table:\norder_item_id\torder_id\tproduct_id\tquantity\tprice\n1\t1\t1\t1\t550.0\n2\t2\t3\t1\t120.0\n3\t3\t4\t1\t1300.0\n*/\n\n\nCREATE TABLE orders (\n\torder_id INTEGER, \n\tuser_id INTEGER, \n\torder_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tstatus TEXT DEFAULT 'Pending', \n\ttotal_amount REAL, \n\tPRIMARY KEY (order_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from orders table:\norder_id\tuser_id\torder_date\tstatus\ttotal_amount\n1\t1\t2025-07-28 17:03:54\tPending\t550.0\n2\t2\t2025-07-28 17:03:54\tPending\t120.0\n3\t3\t2025-07-28 17:03:54\tPending\t1300.0\n*/\n\n\nCREATE TABLE payments (\n\tpayment_id INTEGER, \n\torder_id INTEGER, \n\tpayment_method TEXT, \n\tamount REAL, \n\tpayment_status TEXT DEFAULT 'Pending', \n\tpaid_at TIMESTAMP, \n\tPRIMARY KEY (payment_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from payments table:\npayment_id\torder_id\tpayment_method\tamount\tpayment_status\tpaid_at\n1\t1\tEsewa\t550.0\tCompleted\tNone\n2\t2\tKhalti\t120.0\tCompleted\tNone\n3\t3\tCash\t1300.0\tPending\tNone\n*/\n\n\nCREATE TABLE product_images (\n\timage_id INTEGER, \n\tproduct_id INTEGER, \n\timage_url TEXT NOT NULL, \n\tPRIMARY KEY (image_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from product_images table:\nimage_id\tproduct_id\timage_url\n1\t1\tsamsung.jpg\n2\t2\tiphone.jpg\n3\t3\tcoat.jpg\n*/\n\n\nCREATE TABLE products (\n\tproduct_id INTEGER, \n\tcategory_id INTEGER, \n\tname TEXT NOT NULL, \n\tdescription TEXT, \n\tprice REAL NOT NULL, \n\tstock INTEGER DEFAULT 0, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (product_id), \n\tFOREIGN KEY(category_id) REFERENCES categories (category_id)\n)\n\n/*\n3 rows from products table:\nproduct_id\tcategory_id\tname\tdescription\tprice\tstock\tcreated_at\n1\t1\tSamsung Galaxy A55\t5G smartphone with AMOLED display\t550.0\t50\t2025-07-28 17:03:54\n2\t1\tiPhone 15\tLatest Apple flagship smartphone\t999.0\t30\t2025-07-28 17:03:54\n3\t2\tWinter Coat\tStylish warm coat for winter\t120.0\t25\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE reviews (\n\treview_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\trating INTEGER, \n\tcomment TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (review_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id), \n\tCHECK (rating BETWEEN 1 AND 5)\n)\n\n/*\n3 rows from reviews table:\nreview_id\tuser_id\tproduct_id\trating\tcomment\tcreated_at\n1\t1\t1\t5\tExcellent smartphone!\t2025-07-28 17:03:54\n2\t2\t3\t4\tCoat is warm and stylish.\t2025-07-28 17:03:54\n3\t3\t4\t5\tLaptop is powerful.\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE shipping (\n\tshipping_id INTEGER, \n\torder_id INTEGER, \n\ttracking_number TEXT, \n\tshipping_address TEXT, \n\tshipping_date TIMESTAMP, \n\tdelivery_date TIMESTAMP, \n\tstatus TEXT DEFAULT 'Preparing', \n\tPRIMARY KEY (shipping_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from shipping table:\nshipping_id\torder_id\ttracking_number\tshipping_address\tshipping_date\tdelivery_date\tstatus\n1\t1\tTRK001\tKathmandu\t2025-07-01 00:00:00\t2025-07-05 00:00:00\tDelivered\n2\t2\tTRK002\tPokhara\t2025-07-02 00:00:00\t2025-07-06 00:00:00\tDelivered\n3\t3\tTRK003\tButwal\t2025-07-03 00:00:00\t2025-07-08 00:00:00\tShipped\n*/\n\n\nCREATE TABLE users (\n\tuser_id INTEGER, \n\tname TEXT, \n\temail TEXT, \n\tpassword TEXT, \n\tphone TEXT, \n\taddress TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (user_id), \n\tUNIQUE (email)\n)\n\n/*\n3 rows from users table:\nuser_id\tname\temail\tpassword\tphone\taddress\tcreated_at\n1\tArun Pandey\tarun@example.com\tpass\t9801111111\tKathmandu\t2025-07-28 17:03:54\n2\tSita Sharma\tsita@example.com\tpass\t9802222222\tPokhara\t2025-07-28 17:03:54\n3\tRam Thapa\tram@example.com\tpass\t9803333333\tButwal\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE wishlist (\n\twishlist_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\tadded_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (wishlist_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from wishlist table:\nwishlist_id\tuser_id\tproduct_id\tadded_at\n1\t1\t2\t2025-07-28 17:03:54\n2\t2\t3\t2025-07-28 17:03:54\n3\t3\t1\t2025-07-28 17:03:54\n*/")]
2025-07-29 22:12:57 [DEBUG   ] SQLAgent: Query attempt #1
2025-07-29 22:12:57 [INFO    ] SQLAgent: Invoking LLM for SQL generation...
2025-07-29 22:12:58 [INFO    ] SQLAgent: LLM generated SQL in 0.38 seconds.
2025-07-29 22:12:58 [DEBUG   ] SQLAgent: LLM response content: SELECT * FROM coupons LIMIT 10;
2025-07-29 22:12:58 [INFO    ] SQLAgent: Valid SELECT query detected. Proceeding to execute_query.
2025-07-29 22:12:58 [INFO    ] SQLAgent: Executing SQL query from last message.
2025-07-29 22:12:58 [DEBUG   ] SQLAgent: Last message type: AIMessage, content: SELECT * FROM coupons LIMIT 10;
2025-07-29 22:12:58 [DEBUG   ] SQLAgent: Raw SQL content: SELECT * FROM coupons LIMIT 10;
2025-07-29 22:12:58 [INFO    ] SQLAgent: Extracted SQL query: SELECT * FROM coupons LIMIT 10;
2025-07-29 22:12:58 [INFO    ] SQLAgent: Query executed in 0.00 seconds.
2025-07-29 22:12:58 [INFO    ] SQLAgent: Query result: [(1, 'NEPAL10', 10, '2025-07-01', '2025-12-31'), (2, 'FEST20', 20, '2025-07-01', '2025-12-31'), (3, 'WELCOME5', 5, '2025-07-01', '2025-12-31'), (4, 'SALE15', 15, '2025-07-01', '2025-12-31'), (5, 'NEW3...
2025-07-29 22:12:58 [INFO    ] SQLAgent: Query executed successfully. Proceeding to interpretation.
2025-07-29 22:12:58 [INFO    ] SQLAgent: Interpreting query results into natural language answer.
2025-07-29 22:12:58 [DEBUG   ] SQLAgent: Message history for interpretation: [('HumanMessage', 'Show me the cupon avilable per code all in readable formate'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist'), ('AIMessage', ''), ('ToolMessage', "\nCREATE TABLE cart (\n\tcart_id INTEGER, \n\tuser_id INTEGER, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (cart_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from cart table:\ncart_id\tuser_id\tcreated_at\n1\t1\t2025-07-28 17:03:54\n2\t2\t2025-07-28 17:03:54\n3\t3\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE cart_items (\n\tcart_item_id INTEGER, \n\tcart_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tPRIMARY KEY (cart_item_id), \n\tFOREIGN KEY(cart_id) REFERENCES cart (cart_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from cart_items table:\ncart_item_id\tcart_id\tproduct_id\tquantity\n1\t1\t3\t1\n2\t2\t4\t2\n3\t3\t2\t1\n*/\n\n\nCREATE TABLE categories (\n\tcategory_id INTEGER, \n\tcategory_name TEXT NOT NULL, \n\tdescription TEXT, \n\tPRIMARY KEY (category_id)\n)\n\n/*\n3 rows from categories table:\ncategory_id\tcategory_name\tdescription\n1\tMobiles\tSmartphones and accessories\n2\tClothing\tMen and Women fashion\n3\tComputers\tLaptops and peripherals\n*/\n\n\nCREATE TABLE coupons (\n\tcoupon_id INTEGER, \n\tcode TEXT, \n\tdiscount_percent INTEGER, \n\tvalid_from DATE, \n\tvalid_to DATE, \n\tPRIMARY KEY (coupon_id), \n\tUNIQUE (code), \n\tCHECK (discount_percent BETWEEN 1 AND 100)\n)\n\n/*\n3 rows from coupons table:\ncoupon_id\tcode\tdiscount_percent\tvalid_from\tvalid_to\n1\tNEPAL10\t10\t2025-07-01\t2025-12-31\n2\tFEST20\t20\t2025-07-01\t2025-12-31\n3\tWELCOME5\t5\t2025-07-01\t2025-12-31\n*/\n\n\nCREATE TABLE order_coupons (\n\tid INTEGER, \n\torder_id INTEGER, \n\tcoupon_id INTEGER, \n\tPRIMARY KEY (id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(coupon_id) REFERENCES coupons (coupon_id)\n)\n\n/*\n3 rows from order_coupons table:\nid\torder_id\tcoupon_id\n1\t1\t1\n2\t2\t2\n3\t3\t3\n*/\n\n\nCREATE TABLE order_items (\n\torder_item_id INTEGER, \n\torder_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tprice REAL NOT NULL, \n\tPRIMARY KEY (order_item_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from order_items table:\norder_item_id\torder_id\tproduct_id\tquantity\tprice\n1\t1\t1\t1\t550.0\n2\t2\t3\t1\t120.0\n3\t3\t4\t1\t1300.0\n*/\n\n\nCREATE TABLE orders (\n\torder_id INTEGER, \n\tuser_id INTEGER, \n\torder_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tstatus TEXT DEFAULT 'Pending', \n\ttotal_amount REAL, \n\tPRIMARY KEY (order_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from orders table:\norder_id\tuser_id\torder_date\tstatus\ttotal_amount\n1\t1\t2025-07-28 17:03:54\tPending\t550.0\n2\t2\t2025-07-28 17:03:54\tPending\t120.0\n3\t3\t2025-07-28 17:03:54\tPending\t1300.0\n*/\n\n\nCREATE TABLE payments (\n\tpayment_id INTEGER, \n\torder_id INTEGER, \n\tpayment_method TEXT, \n\tamount REAL, \n\tpayment_status TEXT DEFAULT 'Pending', \n\tpaid_at TIMESTAMP, \n\tPRIMARY KEY (payment_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from payments table:\npayment_id\torder_id\tpayment_method\tamount\tpayment_status\tpaid_at\n1\t1\tEsewa\t550.0\tCompleted\tNone\n2\t2\tKhalti\t120.0\tCompleted\tNone\n3\t3\tCash\t1300.0\tPending\tNone\n*/\n\n\nCREATE TABLE product_images (\n\timage_id INTEGER, \n\tproduct_id INTEGER, \n\timage_url TEXT NOT NULL, \n\tPRIMARY KEY (image_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from product_images table:\nimage_id\tproduct_id\timage_url\n1\t1\tsamsung.jpg\n2\t2\tiphone.jpg\n3\t3\tcoat.jpg\n*/\n\n\nCREATE TABLE products (\n\tproduct_id INTEGER, \n\tcategory_id INTEGER, \n\tname TEXT NOT NULL, \n\tdescription TEXT, \n\tprice REAL NOT NULL, \n\tstock INTEGER DEFAULT 0, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (product_id), \n\tFOREIGN KEY(category_id) REFERENCES categories (category_id)\n)\n\n/*\n3 rows from products table:\nproduct_id\tcategory_id\tname\tdescription\tprice\tstock\tcreated_at\n1\t1\tSamsung Galaxy A55\t5G smartphone with AMOLED display\t550.0\t50\t2025-07-28 17:03:54\n2\t1\tiPhone 15\tLatest Apple flagship smartphone\t999.0\t30\t2025-07-28 17:03:54\n3\t2\tWinter Coat\tStylish warm coat for winter\t120.0\t25\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE reviews (\n\treview_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\trating INTEGER, \n\tcomment TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (review_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id), \n\tCHECK (rating BETWEEN 1 AND 5)\n)\n\n/*\n3 rows from reviews table:\nreview_id\tuser_id\tproduct_id\trating\tcomment\tcreated_at\n1\t1\t1\t5\tExcellent smartphone!\t2025-07-28 17:03:54\n2\t2\t3\t4\tCoat is warm and stylish.\t2025-07-28 17:03:54\n3\t3\t4\t5\tLaptop is powerful.\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE shipping (\n\tshipping_id INTEGER, \n\torder_id INTEGER, \n\ttracking_number TEXT, \n\tshipping_address TEXT, \n\tshipping_date TIMESTAMP, \n\tdelivery_date TIMESTAMP, \n\tstatus TEXT DEFAULT 'Preparing', \n\tPRIMARY KEY (shipping_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from shipping table:\nshipping_id\torder_id\ttracking_number\tshipping_address\tshipping_date\tdelivery_date\tstatus\n1\t1\tTRK001\tKathmandu\t2025-07-01 00:00:00\t2025-07-05 00:00:00\tDelivered\n2\t2\tTRK002\tPokhara\t2025-07-02 00:00:00\t2025-07-06 00:00:00\tDelivered\n3\t3\tTRK003\tButwal\t2025-07-03 00:00:00\t2025-07-08 00:00:00\tShipped\n*/\n\n\nCREATE TABLE users (\n\tuser_id INTEGER, \n\tname TEXT, \n\temail TEXT, \n\tpassword TEXT, \n\tphone TEXT, \n\taddress TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (user_id), \n\tUNIQUE (email)\n)\n\n/*\n3 rows from users table:\nuser_id\tname\temail\tpassword\tphone\taddress\tcreated_at\n1\tArun Pandey\tarun@example.com\tpass\t9801111111\tKathmandu\t2025-07-28 17:03:54\n2\tSita Sharma\tsita@example.com\tpass\t9802222222\tPokhara\t2025-07-28 17:03:54\n3\tRam Thapa\tram@example.com\tpass\t9803333333\tButwal\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE wishlist (\n\twishlist_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\tadded_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (wishlist_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from wishlist table:\nwishlist_id\tuser_id\tproduct_id\tadded_at\n1\t1\t2\t2025-07-28 17:03:54\n2\t2\t3\t2025-07-28 17:03:54\n3\t3\t1\t2025-07-28 17:03:54\n*/"), ('AIMessage', 'SELECT * FROM coupons LIMIT 10;'), ('ToolMessage', "[(1, 'NEPAL10', 10, '2025-07-01', '2025-12-31'), (2, 'FEST20', 20, '2025-07-01', '2025-12-31'), (3, 'WELCOME5', 5, '2025-07-01', '2025-12-31'), (4, 'SALE15', 15, '2025-07-01', '2025-12-31'), (5, 'NEW30', 30, '2025-07-01', '2025-12-31')]")]
2025-07-29 22:12:58 [INFO    ] SQLAgent: Invoking LLM for result interpretation...
2025-07-29 22:13:17 [INFO    ] SQLAgent: LLM interpretation completed in 19.16 seconds.
2025-07-29 22:13:17 [DEBUG   ] SQLAgent: Interpretation result: Answer: There are 5 coupons available. The details of the coupons are as follows:

- Coupon 1: Code - NEPAL10, Discount - 10%, Valid from - 2025-07-01, Valid to - 2025-12-31
- Coupon 2: Code - FEST20, Discount - 20%, Valid from - 2025-07-01, Valid to - 2025-12-31
- Coupon 3: Code - WELCOME5, Discount - 5%, Valid from - 2025-07-01, Valid to - 2025-12-31
- Coupon 4: Code - SALE15, Discount - 15%, Valid from - 2025-07-01, Valid to - 2025-12-31
- Coupon 5: Code - NEW30, Discount - 30%, Valid from - 2025-07-01, Valid to - 2025-12-31
2025-07-29 22:13:17 [INFO    ] SQLAgent: Final answer generated. Ending workflow.
2025-07-29 22:13:17 [INFO    ] SQLAgent: Agent workflow completed in 20.11 seconds.
2025-07-29 22:13:17 [DEBUG   ] SQLAgent: Extracting final SQL query from message history.
2025-07-29 22:13:17 [DEBUG   ] SQLAgent: Extracted SQL query: SELECT * FROM coupons LIMIT 10;
2025-07-29 22:13:17 [INFO    ] SQLAgent: Final SQL Query: SELECT * FROM coupons LIMIT 10;
2025-07-29 22:13:17 [INFO    ] SQLAgent: Final Answer: Answer: There are 5 coupons available. The details of the coupons are as follows:

- Coupon 1: Code - NEPAL10, Discount - 10%, Valid from - 2025-07-01, Valid to - 2025-12-31
- Coupon 2: Code - FEST20, Discount - 20%, Valid from - 2025-07-01, Valid to - 2025-12-31
- Coupon 3: Code - WELCOME5, Discount - 5%, Valid from - 2025-07-01, Valid to - 2025-12-31
- Coupon 4: Code - SALE15, Discount - 15%, Valid from - 2025-07-01, Valid to - 2025-12-31
- Coupon 5: Code - NEW30, Discount - 30%, Valid from - 2025-07-01, Valid to - 2025-12-31
2025-07-29 22:13:34 [INFO    ] SQLAgent: === SQL Agent Logger Initialized (Console Output Disabled, ALL Log Levels Captured) ===
2025-07-29 22:13:34 [DEBUG   ] SQLAgent: DEBUG level logging enabled - all detailed information will be captured
2025-07-29 22:13:34 [WARNING ] SQLAgent: WARNING level logging enabled - all warnings will be captured
2025-07-29 22:13:34 [ERROR   ] SQLAgent: ERROR level logging enabled - all errors will be captured
2025-07-29 22:13:34 [CRITICAL] SQLAgent: CRITICAL level logging enabled - all critical issues will be captured
2025-07-29 22:13:34 [INFO    ] SQLAgent: Received query: 'What is the email of Binisha Chapagain'
2025-07-29 22:13:35 [INFO    ] SQLAgent: Intent classification result: 'query'
2025-07-29 22:13:35 [INFO    ] SQLAgent: Setting recursion limit: 15
2025-07-29 22:13:35 [INFO    ] SQLAgent: Invoking agent workflow...
2025-07-29 22:13:35 [INFO    ] SQLAgent: Executing first_tool_call: requesting list of tables.
2025-07-29 22:13:35 [DEBUG   ] SQLAgent: first_tool_call response prepared.
2025-07-29 22:13:35 [INFO    ] SQLAgent: Calling model_get_schema to fetch schema.
2025-07-29 22:13:35 [DEBUG   ] SQLAgent: Current message history: [('HumanMessage', 'What is the email of Binisha Chapagain'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist')]
2025-07-29 22:13:35 [INFO    ] SQLAgent: LLM schema request took 0.46 seconds.
2025-07-29 22:13:35 [DEBUG   ] SQLAgent: Schema response: content='' additional_kwargs={'tool_calls': [{'id': '289s4fv7a', 'function': {'arguments': '{"table_names":"cart,cart_items,categories,coupons,order_coupons,order_items,orders,payments,product_images,products,reviews,shipping,users,wishlist"}', 'name': 'sql_db_schema'}, 'type': 'function'}]} response_metadata={'token_usage': {'completion_tokens': 50, 'prompt_tokens': 397, 'total_tokens': 447, 'completion_time': 0.293476735, 'prompt_time': 0.036031048, 'queue_time': 0.051877312, 'total_time': 0.329507783}, 'model_name': 'llama-3.1-8b-instant', 'system_fingerprint': 'fp_c523237e5d', 'service_tier': 'on_demand', 'finish_reason': 'tool_calls', 'logprobs': None} id='run--551cb6f8-cd85-467d-bf0e-0dc0b8c37d92-0' tool_calls=[{'name': 'sql_db_schema', 'args': {'table_names': 'cart,cart_items,categories,coupons,order_coupons,order_items,orders,payments,product_images,products,reviews,shipping,users,wishlist'}, 'id': '289s4fv7a', 'type': 'tool_call'}] usage_metadata={'input_tokens': 397, 'output_tokens': 50, 'total_tokens': 447}
2025-07-29 22:13:35 [INFO    ] SQLAgent: Entering query_gen_node to generate SQL query.
2025-07-29 22:13:35 [DEBUG   ] SQLAgent: Message history: [('HumanMessage', 'What is the email of Binisha Chapagain'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist'), ('AIMessage', ''), ('ToolMessage', "\nCREATE TABLE cart (\n\tcart_id INTEGER, \n\tuser_id INTEGER, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (cart_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from cart table:\ncart_id\tuser_id\tcreated_at\n1\t1\t2025-07-28 17:03:54\n2\t2\t2025-07-28 17:03:54\n3\t3\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE cart_items (\n\tcart_item_id INTEGER, \n\tcart_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tPRIMARY KEY (cart_item_id), \n\tFOREIGN KEY(cart_id) REFERENCES cart (cart_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from cart_items table:\ncart_item_id\tcart_id\tproduct_id\tquantity\n1\t1\t3\t1\n2\t2\t4\t2\n3\t3\t2\t1\n*/\n\n\nCREATE TABLE categories (\n\tcategory_id INTEGER, \n\tcategory_name TEXT NOT NULL, \n\tdescription TEXT, \n\tPRIMARY KEY (category_id)\n)\n\n/*\n3 rows from categories table:\ncategory_id\tcategory_name\tdescription\n1\tMobiles\tSmartphones and accessories\n2\tClothing\tMen and Women fashion\n3\tComputers\tLaptops and peripherals\n*/\n\n\nCREATE TABLE coupons (\n\tcoupon_id INTEGER, \n\tcode TEXT, \n\tdiscount_percent INTEGER, \n\tvalid_from DATE, \n\tvalid_to DATE, \n\tPRIMARY KEY (coupon_id), \n\tUNIQUE (code), \n\tCHECK (discount_percent BETWEEN 1 AND 100)\n)\n\n/*\n3 rows from coupons table:\ncoupon_id\tcode\tdiscount_percent\tvalid_from\tvalid_to\n1\tNEPAL10\t10\t2025-07-01\t2025-12-31\n2\tFEST20\t20\t2025-07-01\t2025-12-31\n3\tWELCOME5\t5\t2025-07-01\t2025-12-31\n*/\n\n\nCREATE TABLE order_coupons (\n\tid INTEGER, \n\torder_id INTEGER, \n\tcoupon_id INTEGER, \n\tPRIMARY KEY (id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(coupon_id) REFERENCES coupons (coupon_id)\n)\n\n/*\n3 rows from order_coupons table:\nid\torder_id\tcoupon_id\n1\t1\t1\n2\t2\t2\n3\t3\t3\n*/\n\n\nCREATE TABLE order_items (\n\torder_item_id INTEGER, \n\torder_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tprice REAL NOT NULL, \n\tPRIMARY KEY (order_item_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from order_items table:\norder_item_id\torder_id\tproduct_id\tquantity\tprice\n1\t1\t1\t1\t550.0\n2\t2\t3\t1\t120.0\n3\t3\t4\t1\t1300.0\n*/\n\n\nCREATE TABLE orders (\n\torder_id INTEGER, \n\tuser_id INTEGER, \n\torder_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tstatus TEXT DEFAULT 'Pending', \n\ttotal_amount REAL, \n\tPRIMARY KEY (order_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from orders table:\norder_id\tuser_id\torder_date\tstatus\ttotal_amount\n1\t1\t2025-07-28 17:03:54\tPending\t550.0\n2\t2\t2025-07-28 17:03:54\tPending\t120.0\n3\t3\t2025-07-28 17:03:54\tPending\t1300.0\n*/\n\n\nCREATE TABLE payments (\n\tpayment_id INTEGER, \n\torder_id INTEGER, \n\tpayment_method TEXT, \n\tamount REAL, \n\tpayment_status TEXT DEFAULT 'Pending', \n\tpaid_at TIMESTAMP, \n\tPRIMARY KEY (payment_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from payments table:\npayment_id\torder_id\tpayment_method\tamount\tpayment_status\tpaid_at\n1\t1\tEsewa\t550.0\tCompleted\tNone\n2\t2\tKhalti\t120.0\tCompleted\tNone\n3\t3\tCash\t1300.0\tPending\tNone\n*/\n\n\nCREATE TABLE product_images (\n\timage_id INTEGER, \n\tproduct_id INTEGER, \n\timage_url TEXT NOT NULL, \n\tPRIMARY KEY (image_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from product_images table:\nimage_id\tproduct_id\timage_url\n1\t1\tsamsung.jpg\n2\t2\tiphone.jpg\n3\t3\tcoat.jpg\n*/\n\n\nCREATE TABLE products (\n\tproduct_id INTEGER, \n\tcategory_id INTEGER, \n\tname TEXT NOT NULL, \n\tdescription TEXT, \n\tprice REAL NOT NULL, \n\tstock INTEGER DEFAULT 0, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (product_id), \n\tFOREIGN KEY(category_id) REFERENCES categories (category_id)\n)\n\n/*\n3 rows from products table:\nproduct_id\tcategory_id\tname\tdescription\tprice\tstock\tcreated_at\n1\t1\tSamsung Galaxy A55\t5G smartphone with AMOLED display\t550.0\t50\t2025-07-28 17:03:54\n2\t1\tiPhone 15\tLatest Apple flagship smartphone\t999.0\t30\t2025-07-28 17:03:54\n3\t2\tWinter Coat\tStylish warm coat for winter\t120.0\t25\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE reviews (\n\treview_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\trating INTEGER, \n\tcomment TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (review_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id), \n\tCHECK (rating BETWEEN 1 AND 5)\n)\n\n/*\n3 rows from reviews table:\nreview_id\tuser_id\tproduct_id\trating\tcomment\tcreated_at\n1\t1\t1\t5\tExcellent smartphone!\t2025-07-28 17:03:54\n2\t2\t3\t4\tCoat is warm and stylish.\t2025-07-28 17:03:54\n3\t3\t4\t5\tLaptop is powerful.\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE shipping (\n\tshipping_id INTEGER, \n\torder_id INTEGER, \n\ttracking_number TEXT, \n\tshipping_address TEXT, \n\tshipping_date TIMESTAMP, \n\tdelivery_date TIMESTAMP, \n\tstatus TEXT DEFAULT 'Preparing', \n\tPRIMARY KEY (shipping_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from shipping table:\nshipping_id\torder_id\ttracking_number\tshipping_address\tshipping_date\tdelivery_date\tstatus\n1\t1\tTRK001\tKathmandu\t2025-07-01 00:00:00\t2025-07-05 00:00:00\tDelivered\n2\t2\tTRK002\tPokhara\t2025-07-02 00:00:00\t2025-07-06 00:00:00\tDelivered\n3\t3\tTRK003\tButwal\t2025-07-03 00:00:00\t2025-07-08 00:00:00\tShipped\n*/\n\n\nCREATE TABLE users (\n\tuser_id INTEGER, \n\tname TEXT, \n\temail TEXT, \n\tpassword TEXT, \n\tphone TEXT, \n\taddress TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (user_id), \n\tUNIQUE (email)\n)\n\n/*\n3 rows from users table:\nuser_id\tname\temail\tpassword\tphone\taddress\tcreated_at\n1\tArun Pandey\tarun@example.com\tpass\t9801111111\tKathmandu\t2025-07-28 17:03:54\n2\tSita Sharma\tsita@example.com\tpass\t9802222222\tPokhara\t2025-07-28 17:03:54\n3\tRam Thapa\tram@example.com\tpass\t9803333333\tButwal\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE wishlist (\n\twishlist_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\tadded_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (wishlist_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from wishlist table:\nwishlist_id\tuser_id\tproduct_id\tadded_at\n1\t1\t2\t2025-07-28 17:03:54\n2\t2\t3\t2025-07-28 17:03:54\n3\t3\t1\t2025-07-28 17:03:54\n*/")]
2025-07-29 22:13:35 [DEBUG   ] SQLAgent: Query attempt #1
2025-07-29 22:13:35 [INFO    ] SQLAgent: Invoking LLM for SQL generation...
2025-07-29 22:13:49 [INFO    ] SQLAgent: LLM generated SQL in 13.60 seconds.
2025-07-29 22:13:49 [DEBUG   ] SQLAgent: LLM response content: SELECT email FROM users WHERE name = 'Binisha Chapagain' LIMIT 1;
2025-07-29 22:13:49 [INFO    ] SQLAgent: Valid SELECT query detected. Proceeding to execute_query.
2025-07-29 22:13:49 [INFO    ] SQLAgent: Executing SQL query from last message.
2025-07-29 22:13:49 [DEBUG   ] SQLAgent: Last message type: AIMessage, content: SELECT email FROM users WHERE name = 'Binisha Chapagain' LIMIT 1;
2025-07-29 22:13:49 [DEBUG   ] SQLAgent: Raw SQL content: SELECT email FROM users WHERE name = 'Binisha Chapagain' LIMIT 1;
2025-07-29 22:13:49 [INFO    ] SQLAgent: Extracted SQL query: SELECT email FROM users WHERE name = 'Binisha Chapagain' LIMIT 1;
2025-07-29 22:13:49 [INFO    ] SQLAgent: Query executed in 0.00 seconds.
2025-07-29 22:13:49 [INFO    ] SQLAgent: Query result: [('binisha@example.com',)]
2025-07-29 22:13:49 [INFO    ] SQLAgent: Query executed successfully. Proceeding to interpretation.
2025-07-29 22:13:49 [INFO    ] SQLAgent: Interpreting query results into natural language answer.
2025-07-29 22:13:49 [DEBUG   ] SQLAgent: Message history for interpretation: [('HumanMessage', 'What is the email of Binisha Chapagain'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist'), ('AIMessage', ''), ('ToolMessage', "\nCREATE TABLE cart (\n\tcart_id INTEGER, \n\tuser_id INTEGER, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (cart_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from cart table:\ncart_id\tuser_id\tcreated_at\n1\t1\t2025-07-28 17:03:54\n2\t2\t2025-07-28 17:03:54\n3\t3\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE cart_items (\n\tcart_item_id INTEGER, \n\tcart_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tPRIMARY KEY (cart_item_id), \n\tFOREIGN KEY(cart_id) REFERENCES cart (cart_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from cart_items table:\ncart_item_id\tcart_id\tproduct_id\tquantity\n1\t1\t3\t1\n2\t2\t4\t2\n3\t3\t2\t1\n*/\n\n\nCREATE TABLE categories (\n\tcategory_id INTEGER, \n\tcategory_name TEXT NOT NULL, \n\tdescription TEXT, \n\tPRIMARY KEY (category_id)\n)\n\n/*\n3 rows from categories table:\ncategory_id\tcategory_name\tdescription\n1\tMobiles\tSmartphones and accessories\n2\tClothing\tMen and Women fashion\n3\tComputers\tLaptops and peripherals\n*/\n\n\nCREATE TABLE coupons (\n\tcoupon_id INTEGER, \n\tcode TEXT, \n\tdiscount_percent INTEGER, \n\tvalid_from DATE, \n\tvalid_to DATE, \n\tPRIMARY KEY (coupon_id), \n\tUNIQUE (code), \n\tCHECK (discount_percent BETWEEN 1 AND 100)\n)\n\n/*\n3 rows from coupons table:\ncoupon_id\tcode\tdiscount_percent\tvalid_from\tvalid_to\n1\tNEPAL10\t10\t2025-07-01\t2025-12-31\n2\tFEST20\t20\t2025-07-01\t2025-12-31\n3\tWELCOME5\t5\t2025-07-01\t2025-12-31\n*/\n\n\nCREATE TABLE order_coupons (\n\tid INTEGER, \n\torder_id INTEGER, \n\tcoupon_id INTEGER, \n\tPRIMARY KEY (id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(coupon_id) REFERENCES coupons (coupon_id)\n)\n\n/*\n3 rows from order_coupons table:\nid\torder_id\tcoupon_id\n1\t1\t1\n2\t2\t2\n3\t3\t3\n*/\n\n\nCREATE TABLE order_items (\n\torder_item_id INTEGER, \n\torder_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tprice REAL NOT NULL, \n\tPRIMARY KEY (order_item_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from order_items table:\norder_item_id\torder_id\tproduct_id\tquantity\tprice\n1\t1\t1\t1\t550.0\n2\t2\t3\t1\t120.0\n3\t3\t4\t1\t1300.0\n*/\n\n\nCREATE TABLE orders (\n\torder_id INTEGER, \n\tuser_id INTEGER, \n\torder_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tstatus TEXT DEFAULT 'Pending', \n\ttotal_amount REAL, \n\tPRIMARY KEY (order_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from orders table:\norder_id\tuser_id\torder_date\tstatus\ttotal_amount\n1\t1\t2025-07-28 17:03:54\tPending\t550.0\n2\t2\t2025-07-28 17:03:54\tPending\t120.0\n3\t3\t2025-07-28 17:03:54\tPending\t1300.0\n*/\n\n\nCREATE TABLE payments (\n\tpayment_id INTEGER, \n\torder_id INTEGER, \n\tpayment_method TEXT, \n\tamount REAL, \n\tpayment_status TEXT DEFAULT 'Pending', \n\tpaid_at TIMESTAMP, \n\tPRIMARY KEY (payment_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from payments table:\npayment_id\torder_id\tpayment_method\tamount\tpayment_status\tpaid_at\n1\t1\tEsewa\t550.0\tCompleted\tNone\n2\t2\tKhalti\t120.0\tCompleted\tNone\n3\t3\tCash\t1300.0\tPending\tNone\n*/\n\n\nCREATE TABLE product_images (\n\timage_id INTEGER, \n\tproduct_id INTEGER, \n\timage_url TEXT NOT NULL, \n\tPRIMARY KEY (image_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from product_images table:\nimage_id\tproduct_id\timage_url\n1\t1\tsamsung.jpg\n2\t2\tiphone.jpg\n3\t3\tcoat.jpg\n*/\n\n\nCREATE TABLE products (\n\tproduct_id INTEGER, \n\tcategory_id INTEGER, \n\tname TEXT NOT NULL, \n\tdescription TEXT, \n\tprice REAL NOT NULL, \n\tstock INTEGER DEFAULT 0, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (product_id), \n\tFOREIGN KEY(category_id) REFERENCES categories (category_id)\n)\n\n/*\n3 rows from products table:\nproduct_id\tcategory_id\tname\tdescription\tprice\tstock\tcreated_at\n1\t1\tSamsung Galaxy A55\t5G smartphone with AMOLED display\t550.0\t50\t2025-07-28 17:03:54\n2\t1\tiPhone 15\tLatest Apple flagship smartphone\t999.0\t30\t2025-07-28 17:03:54\n3\t2\tWinter Coat\tStylish warm coat for winter\t120.0\t25\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE reviews (\n\treview_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\trating INTEGER, \n\tcomment TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (review_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id), \n\tCHECK (rating BETWEEN 1 AND 5)\n)\n\n/*\n3 rows from reviews table:\nreview_id\tuser_id\tproduct_id\trating\tcomment\tcreated_at\n1\t1\t1\t5\tExcellent smartphone!\t2025-07-28 17:03:54\n2\t2\t3\t4\tCoat is warm and stylish.\t2025-07-28 17:03:54\n3\t3\t4\t5\tLaptop is powerful.\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE shipping (\n\tshipping_id INTEGER, \n\torder_id INTEGER, \n\ttracking_number TEXT, \n\tshipping_address TEXT, \n\tshipping_date TIMESTAMP, \n\tdelivery_date TIMESTAMP, \n\tstatus TEXT DEFAULT 'Preparing', \n\tPRIMARY KEY (shipping_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from shipping table:\nshipping_id\torder_id\ttracking_number\tshipping_address\tshipping_date\tdelivery_date\tstatus\n1\t1\tTRK001\tKathmandu\t2025-07-01 00:00:00\t2025-07-05 00:00:00\tDelivered\n2\t2\tTRK002\tPokhara\t2025-07-02 00:00:00\t2025-07-06 00:00:00\tDelivered\n3\t3\tTRK003\tButwal\t2025-07-03 00:00:00\t2025-07-08 00:00:00\tShipped\n*/\n\n\nCREATE TABLE users (\n\tuser_id INTEGER, \n\tname TEXT, \n\temail TEXT, \n\tpassword TEXT, \n\tphone TEXT, \n\taddress TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (user_id), \n\tUNIQUE (email)\n)\n\n/*\n3 rows from users table:\nuser_id\tname\temail\tpassword\tphone\taddress\tcreated_at\n1\tArun Pandey\tarun@example.com\tpass\t9801111111\tKathmandu\t2025-07-28 17:03:54\n2\tSita Sharma\tsita@example.com\tpass\t9802222222\tPokhara\t2025-07-28 17:03:54\n3\tRam Thapa\tram@example.com\tpass\t9803333333\tButwal\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE wishlist (\n\twishlist_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\tadded_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (wishlist_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from wishlist table:\nwishlist_id\tuser_id\tproduct_id\tadded_at\n1\t1\t2\t2025-07-28 17:03:54\n2\t2\t3\t2025-07-28 17:03:54\n3\t3\t1\t2025-07-28 17:03:54\n*/"), ('AIMessage', "SELECT email FROM users WHERE name = 'Binisha Chapagain' LIMIT 1;"), ('ToolMessage', "[('binisha@example.com',)]")]
2025-07-29 22:13:49 [INFO    ] SQLAgent: Invoking LLM for result interpretation...
2025-07-29 22:14:10 [INFO    ] SQLAgent: LLM interpretation completed in 21.56 seconds.
2025-07-29 22:14:10 [DEBUG   ] SQLAgent: Interpretation result: Answer: The email of Binisha Chapagain is binisha@example.com.
2025-07-29 22:14:10 [INFO    ] SQLAgent: Final answer generated. Ending workflow.
2025-07-29 22:14:10 [INFO    ] SQLAgent: Agent workflow completed in 35.65 seconds.
2025-07-29 22:14:10 [DEBUG   ] SQLAgent: Extracting final SQL query from message history.
2025-07-29 22:14:10 [DEBUG   ] SQLAgent: Extracted SQL query: SELECT email FROM users WHERE name = 'Binisha Chapagain' LIMIT 1;
2025-07-29 22:14:10 [INFO    ] SQLAgent: Final SQL Query: SELECT email FROM users WHERE name = 'Binisha Chapagain' LIMIT 1;
2025-07-29 22:14:10 [INFO    ] SQLAgent: Final Answer: Answer: The email of Binisha Chapagain is binisha@example.com.
2025-07-29 22:15:14 [INFO    ] SQLAgent: === SQL Agent Logger Initialized (Console Output Disabled, ALL Log Levels Captured) ===
2025-07-29 22:15:14 [DEBUG   ] SQLAgent: DEBUG level logging enabled - all detailed information will be captured
2025-07-29 22:15:14 [WARNING ] SQLAgent: WARNING level logging enabled - all warnings will be captured
2025-07-29 22:15:14 [ERROR   ] SQLAgent: ERROR level logging enabled - all errors will be captured
2025-07-29 22:15:14 [CRITICAL] SQLAgent: CRITICAL level logging enabled - all critical issues will be captured
2025-07-29 22:15:14 [INFO    ] SQLAgent: Received query: 'give me the description of 	iPhone 15 '
2025-07-29 22:15:15 [INFO    ] SQLAgent: Intent classification result: 'i'm not able to provide a description of the iphone 15 as it has not been officially released by apple. however, i can provide you with information about the iphone 14 series or previous models if that's helpful.

if you're looking for information about a specific iphone model, please let me know the model number or the features you're interested in, and i'll do my best to provide you with the information.

however, based on the prompt, i should respond with "query" since you're asking for information about a specific product. 

so, the response would be: 
query'
2025-07-29 22:15:15 [INFO    ] SQLAgent: Setting recursion limit: 15
2025-07-29 22:15:15 [INFO    ] SQLAgent: Invoking agent workflow...
2025-07-29 22:15:15 [INFO    ] SQLAgent: Executing first_tool_call: requesting list of tables.
2025-07-29 22:15:15 [DEBUG   ] SQLAgent: first_tool_call response prepared.
2025-07-29 22:15:15 [INFO    ] SQLAgent: Calling model_get_schema to fetch schema.
2025-07-29 22:15:15 [DEBUG   ] SQLAgent: Current message history: [('HumanMessage', 'give me the description of \tiPhone 15 '), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist')]
2025-07-29 22:15:16 [INFO    ] SQLAgent: LLM schema request took 0.45 seconds.
2025-07-29 22:15:16 [DEBUG   ] SQLAgent: Schema response: content='' additional_kwargs={'tool_calls': [{'id': 'syvhnjssv', 'function': {'arguments': '{"table_names":"cart,cart_items,categories,coupons,order_coupons,order_items,orders,payments,product_images,products,reviews,shipping,users,wishlist"}', 'name': 'sql_db_schema'}, 'type': 'function'}]} response_metadata={'token_usage': {'completion_tokens': 50, 'prompt_tokens': 398, 'total_tokens': 448, 'completion_time': 0.066666667, 'prompt_time': 0.223561577, 'queue_time': 0.05197887299999998, 'total_time': 0.290228244}, 'model_name': 'llama-3.1-8b-instant', 'system_fingerprint': 'fp_c523237e5d', 'service_tier': 'on_demand', 'finish_reason': 'tool_calls', 'logprobs': None} id='run--202209a8-66d2-4131-ba3f-dea5800ff612-0' tool_calls=[{'name': 'sql_db_schema', 'args': {'table_names': 'cart,cart_items,categories,coupons,order_coupons,order_items,orders,payments,product_images,products,reviews,shipping,users,wishlist'}, 'id': 'syvhnjssv', 'type': 'tool_call'}] usage_metadata={'input_tokens': 398, 'output_tokens': 50, 'total_tokens': 448}
2025-07-29 22:15:16 [INFO    ] SQLAgent: Entering query_gen_node to generate SQL query.
2025-07-29 22:15:16 [DEBUG   ] SQLAgent: Message history: [('HumanMessage', 'give me the description of \tiPhone 15 '), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist'), ('AIMessage', ''), ('ToolMessage', "\nCREATE TABLE cart (\n\tcart_id INTEGER, \n\tuser_id INTEGER, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (cart_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from cart table:\ncart_id\tuser_id\tcreated_at\n1\t1\t2025-07-28 17:03:54\n2\t2\t2025-07-28 17:03:54\n3\t3\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE cart_items (\n\tcart_item_id INTEGER, \n\tcart_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tPRIMARY KEY (cart_item_id), \n\tFOREIGN KEY(cart_id) REFERENCES cart (cart_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from cart_items table:\ncart_item_id\tcart_id\tproduct_id\tquantity\n1\t1\t3\t1\n2\t2\t4\t2\n3\t3\t2\t1\n*/\n\n\nCREATE TABLE categories (\n\tcategory_id INTEGER, \n\tcategory_name TEXT NOT NULL, \n\tdescription TEXT, \n\tPRIMARY KEY (category_id)\n)\n\n/*\n3 rows from categories table:\ncategory_id\tcategory_name\tdescription\n1\tMobiles\tSmartphones and accessories\n2\tClothing\tMen and Women fashion\n3\tComputers\tLaptops and peripherals\n*/\n\n\nCREATE TABLE coupons (\n\tcoupon_id INTEGER, \n\tcode TEXT, \n\tdiscount_percent INTEGER, \n\tvalid_from DATE, \n\tvalid_to DATE, \n\tPRIMARY KEY (coupon_id), \n\tUNIQUE (code), \n\tCHECK (discount_percent BETWEEN 1 AND 100)\n)\n\n/*\n3 rows from coupons table:\ncoupon_id\tcode\tdiscount_percent\tvalid_from\tvalid_to\n1\tNEPAL10\t10\t2025-07-01\t2025-12-31\n2\tFEST20\t20\t2025-07-01\t2025-12-31\n3\tWELCOME5\t5\t2025-07-01\t2025-12-31\n*/\n\n\nCREATE TABLE order_coupons (\n\tid INTEGER, \n\torder_id INTEGER, \n\tcoupon_id INTEGER, \n\tPRIMARY KEY (id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(coupon_id) REFERENCES coupons (coupon_id)\n)\n\n/*\n3 rows from order_coupons table:\nid\torder_id\tcoupon_id\n1\t1\t1\n2\t2\t2\n3\t3\t3\n*/\n\n\nCREATE TABLE order_items (\n\torder_item_id INTEGER, \n\torder_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tprice REAL NOT NULL, \n\tPRIMARY KEY (order_item_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from order_items table:\norder_item_id\torder_id\tproduct_id\tquantity\tprice\n1\t1\t1\t1\t550.0\n2\t2\t3\t1\t120.0\n3\t3\t4\t1\t1300.0\n*/\n\n\nCREATE TABLE orders (\n\torder_id INTEGER, \n\tuser_id INTEGER, \n\torder_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tstatus TEXT DEFAULT 'Pending', \n\ttotal_amount REAL, \n\tPRIMARY KEY (order_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from orders table:\norder_id\tuser_id\torder_date\tstatus\ttotal_amount\n1\t1\t2025-07-28 17:03:54\tPending\t550.0\n2\t2\t2025-07-28 17:03:54\tPending\t120.0\n3\t3\t2025-07-28 17:03:54\tPending\t1300.0\n*/\n\n\nCREATE TABLE payments (\n\tpayment_id INTEGER, \n\torder_id INTEGER, \n\tpayment_method TEXT, \n\tamount REAL, \n\tpayment_status TEXT DEFAULT 'Pending', \n\tpaid_at TIMESTAMP, \n\tPRIMARY KEY (payment_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from payments table:\npayment_id\torder_id\tpayment_method\tamount\tpayment_status\tpaid_at\n1\t1\tEsewa\t550.0\tCompleted\tNone\n2\t2\tKhalti\t120.0\tCompleted\tNone\n3\t3\tCash\t1300.0\tPending\tNone\n*/\n\n\nCREATE TABLE product_images (\n\timage_id INTEGER, \n\tproduct_id INTEGER, \n\timage_url TEXT NOT NULL, \n\tPRIMARY KEY (image_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from product_images table:\nimage_id\tproduct_id\timage_url\n1\t1\tsamsung.jpg\n2\t2\tiphone.jpg\n3\t3\tcoat.jpg\n*/\n\n\nCREATE TABLE products (\n\tproduct_id INTEGER, \n\tcategory_id INTEGER, \n\tname TEXT NOT NULL, \n\tdescription TEXT, \n\tprice REAL NOT NULL, \n\tstock INTEGER DEFAULT 0, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (product_id), \n\tFOREIGN KEY(category_id) REFERENCES categories (category_id)\n)\n\n/*\n3 rows from products table:\nproduct_id\tcategory_id\tname\tdescription\tprice\tstock\tcreated_at\n1\t1\tSamsung Galaxy A55\t5G smartphone with AMOLED display\t550.0\t50\t2025-07-28 17:03:54\n2\t1\tiPhone 15\tLatest Apple flagship smartphone\t999.0\t30\t2025-07-28 17:03:54\n3\t2\tWinter Coat\tStylish warm coat for winter\t120.0\t25\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE reviews (\n\treview_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\trating INTEGER, \n\tcomment TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (review_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id), \n\tCHECK (rating BETWEEN 1 AND 5)\n)\n\n/*\n3 rows from reviews table:\nreview_id\tuser_id\tproduct_id\trating\tcomment\tcreated_at\n1\t1\t1\t5\tExcellent smartphone!\t2025-07-28 17:03:54\n2\t2\t3\t4\tCoat is warm and stylish.\t2025-07-28 17:03:54\n3\t3\t4\t5\tLaptop is powerful.\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE shipping (\n\tshipping_id INTEGER, \n\torder_id INTEGER, \n\ttracking_number TEXT, \n\tshipping_address TEXT, \n\tshipping_date TIMESTAMP, \n\tdelivery_date TIMESTAMP, \n\tstatus TEXT DEFAULT 'Preparing', \n\tPRIMARY KEY (shipping_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from shipping table:\nshipping_id\torder_id\ttracking_number\tshipping_address\tshipping_date\tdelivery_date\tstatus\n1\t1\tTRK001\tKathmandu\t2025-07-01 00:00:00\t2025-07-05 00:00:00\tDelivered\n2\t2\tTRK002\tPokhara\t2025-07-02 00:00:00\t2025-07-06 00:00:00\tDelivered\n3\t3\tTRK003\tButwal\t2025-07-03 00:00:00\t2025-07-08 00:00:00\tShipped\n*/\n\n\nCREATE TABLE users (\n\tuser_id INTEGER, \n\tname TEXT, \n\temail TEXT, \n\tpassword TEXT, \n\tphone TEXT, \n\taddress TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (user_id), \n\tUNIQUE (email)\n)\n\n/*\n3 rows from users table:\nuser_id\tname\temail\tpassword\tphone\taddress\tcreated_at\n1\tArun Pandey\tarun@example.com\tpass\t9801111111\tKathmandu\t2025-07-28 17:03:54\n2\tSita Sharma\tsita@example.com\tpass\t9802222222\tPokhara\t2025-07-28 17:03:54\n3\tRam Thapa\tram@example.com\tpass\t9803333333\tButwal\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE wishlist (\n\twishlist_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\tadded_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (wishlist_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from wishlist table:\nwishlist_id\tuser_id\tproduct_id\tadded_at\n1\t1\t2\t2025-07-28 17:03:54\n2\t2\t3\t2025-07-28 17:03:54\n3\t3\t1\t2025-07-28 17:03:54\n*/")]
2025-07-29 22:15:16 [DEBUG   ] SQLAgent: Query attempt #1
2025-07-29 22:15:16 [INFO    ] SQLAgent: Invoking LLM for SQL generation...
2025-07-29 22:15:16 [INFO    ] SQLAgent: LLM generated SQL in 0.50 seconds.
2025-07-29 22:15:16 [DEBUG   ] SQLAgent: LLM response content: SELECT * FROM products WHERE name = 'iPhone 15';
2025-07-29 22:15:16 [INFO    ] SQLAgent: Valid SELECT query detected. Proceeding to execute_query.
2025-07-29 22:15:16 [INFO    ] SQLAgent: Executing SQL query from last message.
2025-07-29 22:15:16 [DEBUG   ] SQLAgent: Last message type: AIMessage, content: SELECT * FROM products WHERE name = 'iPhone 15';
2025-07-29 22:15:16 [DEBUG   ] SQLAgent: Raw SQL content: SELECT * FROM products WHERE name = 'iPhone 15';
2025-07-29 22:15:16 [INFO    ] SQLAgent: Extracted SQL query: SELECT * FROM products WHERE name = 'iPhone 15';
2025-07-29 22:15:16 [INFO    ] SQLAgent: Query executed in 0.00 seconds.
2025-07-29 22:15:16 [INFO    ] SQLAgent: Query result: [(2, 1, 'iPhone 15', 'Latest Apple flagship smartphone', 999.0, 30, '2025-07-28 17:03:54')]
2025-07-29 22:15:16 [INFO    ] SQLAgent: Query executed successfully. Proceeding to interpretation.
2025-07-29 22:15:16 [INFO    ] SQLAgent: Interpreting query results into natural language answer.
2025-07-29 22:15:16 [DEBUG   ] SQLAgent: Message history for interpretation: [('HumanMessage', 'give me the description of \tiPhone 15 '), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist'), ('AIMessage', ''), ('ToolMessage', "\nCREATE TABLE cart (\n\tcart_id INTEGER, \n\tuser_id INTEGER, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (cart_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from cart table:\ncart_id\tuser_id\tcreated_at\n1\t1\t2025-07-28 17:03:54\n2\t2\t2025-07-28 17:03:54\n3\t3\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE cart_items (\n\tcart_item_id INTEGER, \n\tcart_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tPRIMARY KEY (cart_item_id), \n\tFOREIGN KEY(cart_id) REFERENCES cart (cart_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from cart_items table:\ncart_item_id\tcart_id\tproduct_id\tquantity\n1\t1\t3\t1\n2\t2\t4\t2\n3\t3\t2\t1\n*/\n\n\nCREATE TABLE categories (\n\tcategory_id INTEGER, \n\tcategory_name TEXT NOT NULL, \n\tdescription TEXT, \n\tPRIMARY KEY (category_id)\n)\n\n/*\n3 rows from categories table:\ncategory_id\tcategory_name\tdescription\n1\tMobiles\tSmartphones and accessories\n2\tClothing\tMen and Women fashion\n3\tComputers\tLaptops and peripherals\n*/\n\n\nCREATE TABLE coupons (\n\tcoupon_id INTEGER, \n\tcode TEXT, \n\tdiscount_percent INTEGER, \n\tvalid_from DATE, \n\tvalid_to DATE, \n\tPRIMARY KEY (coupon_id), \n\tUNIQUE (code), \n\tCHECK (discount_percent BETWEEN 1 AND 100)\n)\n\n/*\n3 rows from coupons table:\ncoupon_id\tcode\tdiscount_percent\tvalid_from\tvalid_to\n1\tNEPAL10\t10\t2025-07-01\t2025-12-31\n2\tFEST20\t20\t2025-07-01\t2025-12-31\n3\tWELCOME5\t5\t2025-07-01\t2025-12-31\n*/\n\n\nCREATE TABLE order_coupons (\n\tid INTEGER, \n\torder_id INTEGER, \n\tcoupon_id INTEGER, \n\tPRIMARY KEY (id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(coupon_id) REFERENCES coupons (coupon_id)\n)\n\n/*\n3 rows from order_coupons table:\nid\torder_id\tcoupon_id\n1\t1\t1\n2\t2\t2\n3\t3\t3\n*/\n\n\nCREATE TABLE order_items (\n\torder_item_id INTEGER, \n\torder_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tprice REAL NOT NULL, \n\tPRIMARY KEY (order_item_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from order_items table:\norder_item_id\torder_id\tproduct_id\tquantity\tprice\n1\t1\t1\t1\t550.0\n2\t2\t3\t1\t120.0\n3\t3\t4\t1\t1300.0\n*/\n\n\nCREATE TABLE orders (\n\torder_id INTEGER, \n\tuser_id INTEGER, \n\torder_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tstatus TEXT DEFAULT 'Pending', \n\ttotal_amount REAL, \n\tPRIMARY KEY (order_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from orders table:\norder_id\tuser_id\torder_date\tstatus\ttotal_amount\n1\t1\t2025-07-28 17:03:54\tPending\t550.0\n2\t2\t2025-07-28 17:03:54\tPending\t120.0\n3\t3\t2025-07-28 17:03:54\tPending\t1300.0\n*/\n\n\nCREATE TABLE payments (\n\tpayment_id INTEGER, \n\torder_id INTEGER, \n\tpayment_method TEXT, \n\tamount REAL, \n\tpayment_status TEXT DEFAULT 'Pending', \n\tpaid_at TIMESTAMP, \n\tPRIMARY KEY (payment_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from payments table:\npayment_id\torder_id\tpayment_method\tamount\tpayment_status\tpaid_at\n1\t1\tEsewa\t550.0\tCompleted\tNone\n2\t2\tKhalti\t120.0\tCompleted\tNone\n3\t3\tCash\t1300.0\tPending\tNone\n*/\n\n\nCREATE TABLE product_images (\n\timage_id INTEGER, \n\tproduct_id INTEGER, \n\timage_url TEXT NOT NULL, \n\tPRIMARY KEY (image_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from product_images table:\nimage_id\tproduct_id\timage_url\n1\t1\tsamsung.jpg\n2\t2\tiphone.jpg\n3\t3\tcoat.jpg\n*/\n\n\nCREATE TABLE products (\n\tproduct_id INTEGER, \n\tcategory_id INTEGER, \n\tname TEXT NOT NULL, \n\tdescription TEXT, \n\tprice REAL NOT NULL, \n\tstock INTEGER DEFAULT 0, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (product_id), \n\tFOREIGN KEY(category_id) REFERENCES categories (category_id)\n)\n\n/*\n3 rows from products table:\nproduct_id\tcategory_id\tname\tdescription\tprice\tstock\tcreated_at\n1\t1\tSamsung Galaxy A55\t5G smartphone with AMOLED display\t550.0\t50\t2025-07-28 17:03:54\n2\t1\tiPhone 15\tLatest Apple flagship smartphone\t999.0\t30\t2025-07-28 17:03:54\n3\t2\tWinter Coat\tStylish warm coat for winter\t120.0\t25\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE reviews (\n\treview_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\trating INTEGER, \n\tcomment TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (review_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id), \n\tCHECK (rating BETWEEN 1 AND 5)\n)\n\n/*\n3 rows from reviews table:\nreview_id\tuser_id\tproduct_id\trating\tcomment\tcreated_at\n1\t1\t1\t5\tExcellent smartphone!\t2025-07-28 17:03:54\n2\t2\t3\t4\tCoat is warm and stylish.\t2025-07-28 17:03:54\n3\t3\t4\t5\tLaptop is powerful.\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE shipping (\n\tshipping_id INTEGER, \n\torder_id INTEGER, \n\ttracking_number TEXT, \n\tshipping_address TEXT, \n\tshipping_date TIMESTAMP, \n\tdelivery_date TIMESTAMP, \n\tstatus TEXT DEFAULT 'Preparing', \n\tPRIMARY KEY (shipping_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from shipping table:\nshipping_id\torder_id\ttracking_number\tshipping_address\tshipping_date\tdelivery_date\tstatus\n1\t1\tTRK001\tKathmandu\t2025-07-01 00:00:00\t2025-07-05 00:00:00\tDelivered\n2\t2\tTRK002\tPokhara\t2025-07-02 00:00:00\t2025-07-06 00:00:00\tDelivered\n3\t3\tTRK003\tButwal\t2025-07-03 00:00:00\t2025-07-08 00:00:00\tShipped\n*/\n\n\nCREATE TABLE users (\n\tuser_id INTEGER, \n\tname TEXT, \n\temail TEXT, \n\tpassword TEXT, \n\tphone TEXT, \n\taddress TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (user_id), \n\tUNIQUE (email)\n)\n\n/*\n3 rows from users table:\nuser_id\tname\temail\tpassword\tphone\taddress\tcreated_at\n1\tArun Pandey\tarun@example.com\tpass\t9801111111\tKathmandu\t2025-07-28 17:03:54\n2\tSita Sharma\tsita@example.com\tpass\t9802222222\tPokhara\t2025-07-28 17:03:54\n3\tRam Thapa\tram@example.com\tpass\t9803333333\tButwal\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE wishlist (\n\twishlist_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\tadded_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (wishlist_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from wishlist table:\nwishlist_id\tuser_id\tproduct_id\tadded_at\n1\t1\t2\t2025-07-28 17:03:54\n2\t2\t3\t2025-07-28 17:03:54\n3\t3\t1\t2025-07-28 17:03:54\n*/"), ('AIMessage', "SELECT * FROM products WHERE name = 'iPhone 15';"), ('ToolMessage', "[(2, 1, 'iPhone 15', 'Latest Apple flagship smartphone', 999.0, 30, '2025-07-28 17:03:54')]")]
2025-07-29 22:15:16 [INFO    ] SQLAgent: Invoking LLM for result interpretation...
2025-07-29 22:15:17 [INFO    ] SQLAgent: LLM interpretation completed in 1.03 seconds.
2025-07-29 22:15:17 [DEBUG   ] SQLAgent: Interpretation result: Answer: The iPhone 15 is a smartphone with a price of NPR 999.0, available in stock of 30 units. It was added to the product catalog on 2025-07-28 17:03:54.
2025-07-29 22:15:17 [INFO    ] SQLAgent: Final answer generated. Ending workflow.
2025-07-29 22:15:17 [INFO    ] SQLAgent: Agent workflow completed in 2.03 seconds.
2025-07-29 22:15:17 [DEBUG   ] SQLAgent: Extracting final SQL query from message history.
2025-07-29 22:15:17 [DEBUG   ] SQLAgent: Extracted SQL query: SELECT * FROM products WHERE name = 'iPhone 15';
2025-07-29 22:15:17 [INFO    ] SQLAgent: Final SQL Query: SELECT * FROM products WHERE name = 'iPhone 15';
2025-07-29 22:15:17 [INFO    ] SQLAgent: Final Answer: Answer: The iPhone 15 is a smartphone with a price of NPR 999.0, available in stock of 30 units. It was added to the product catalog on 2025-07-28 17:03:54.
2025-07-29 22:15:40 [INFO    ] SQLAgent: === SQL Agent Logger Initialized (Console Output Disabled, ALL Log Levels Captured) ===
2025-07-29 22:15:40 [DEBUG   ] SQLAgent: DEBUG level logging enabled - all detailed information will be captured
2025-07-29 22:15:40 [WARNING ] SQLAgent: WARNING level logging enabled - all warnings will be captured
2025-07-29 22:15:40 [ERROR   ] SQLAgent: ERROR level logging enabled - all errors will be captured
2025-07-29 22:15:40 [CRITICAL] SQLAgent: CRITICAL level logging enabled - all critical issues will be captured
2025-07-29 22:15:40 [INFO    ] SQLAgent: Received query: '	iPhone 15 discription information only '
2025-07-29 22:15:41 [INFO    ] SQLAgent: Intent classification result: 'query'
2025-07-29 22:15:41 [INFO    ] SQLAgent: Setting recursion limit: 15
2025-07-29 22:15:41 [INFO    ] SQLAgent: Invoking agent workflow...
2025-07-29 22:15:41 [INFO    ] SQLAgent: Executing first_tool_call: requesting list of tables.
2025-07-29 22:15:41 [DEBUG   ] SQLAgent: first_tool_call response prepared.
2025-07-29 22:15:41 [INFO    ] SQLAgent: Calling model_get_schema to fetch schema.
2025-07-29 22:15:41 [DEBUG   ] SQLAgent: Current message history: [('HumanMessage', '\tiPhone 15 discription information only '), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist')]
2025-07-29 22:15:41 [INFO    ] SQLAgent: LLM schema request took 0.26 seconds.
2025-07-29 22:15:41 [DEBUG   ] SQLAgent: Schema response: content='' additional_kwargs={'tool_calls': [{'id': 'a8zdrc6rk', 'function': {'arguments': '{"table_names":"cart,cart_items,categories,coupons,order_coupons,order_items,orders,payments,product_images,products,reviews,shipping,users,wishlist"}', 'name': 'sql_db_schema'}, 'type': 'function'}]} response_metadata={'token_usage': {'completion_tokens': 49, 'prompt_tokens': 396, 'total_tokens': 445, 'completion_time': 0.065333333, 'prompt_time': 0.041315735, 'queue_time': 0.052299307999999996, 'total_time': 0.106649068}, 'model_name': 'llama-3.1-8b-instant', 'system_fingerprint': 'fp_c523237e5d', 'service_tier': 'on_demand', 'finish_reason': 'tool_calls', 'logprobs': None} id='run--99c17234-f6bd-436f-a1b2-136550c6ab0f-0' tool_calls=[{'name': 'sql_db_schema', 'args': {'table_names': 'cart,cart_items,categories,coupons,order_coupons,order_items,orders,payments,product_images,products,reviews,shipping,users,wishlist'}, 'id': 'a8zdrc6rk', 'type': 'tool_call'}] usage_metadata={'input_tokens': 396, 'output_tokens': 49, 'total_tokens': 445}
2025-07-29 22:15:41 [INFO    ] SQLAgent: Entering query_gen_node to generate SQL query.
2025-07-29 22:15:41 [DEBUG   ] SQLAgent: Message history: [('HumanMessage', '\tiPhone 15 discription information only '), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist'), ('AIMessage', ''), ('ToolMessage', "\nCREATE TABLE cart (\n\tcart_id INTEGER, \n\tuser_id INTEGER, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (cart_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from cart table:\ncart_id\tuser_id\tcreated_at\n1\t1\t2025-07-28 17:03:54\n2\t2\t2025-07-28 17:03:54\n3\t3\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE cart_items (\n\tcart_item_id INTEGER, \n\tcart_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tPRIMARY KEY (cart_item_id), \n\tFOREIGN KEY(cart_id) REFERENCES cart (cart_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from cart_items table:\ncart_item_id\tcart_id\tproduct_id\tquantity\n1\t1\t3\t1\n2\t2\t4\t2\n3\t3\t2\t1\n*/\n\n\nCREATE TABLE categories (\n\tcategory_id INTEGER, \n\tcategory_name TEXT NOT NULL, \n\tdescription TEXT, \n\tPRIMARY KEY (category_id)\n)\n\n/*\n3 rows from categories table:\ncategory_id\tcategory_name\tdescription\n1\tMobiles\tSmartphones and accessories\n2\tClothing\tMen and Women fashion\n3\tComputers\tLaptops and peripherals\n*/\n\n\nCREATE TABLE coupons (\n\tcoupon_id INTEGER, \n\tcode TEXT, \n\tdiscount_percent INTEGER, \n\tvalid_from DATE, \n\tvalid_to DATE, \n\tPRIMARY KEY (coupon_id), \n\tUNIQUE (code), \n\tCHECK (discount_percent BETWEEN 1 AND 100)\n)\n\n/*\n3 rows from coupons table:\ncoupon_id\tcode\tdiscount_percent\tvalid_from\tvalid_to\n1\tNEPAL10\t10\t2025-07-01\t2025-12-31\n2\tFEST20\t20\t2025-07-01\t2025-12-31\n3\tWELCOME5\t5\t2025-07-01\t2025-12-31\n*/\n\n\nCREATE TABLE order_coupons (\n\tid INTEGER, \n\torder_id INTEGER, \n\tcoupon_id INTEGER, \n\tPRIMARY KEY (id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(coupon_id) REFERENCES coupons (coupon_id)\n)\n\n/*\n3 rows from order_coupons table:\nid\torder_id\tcoupon_id\n1\t1\t1\n2\t2\t2\n3\t3\t3\n*/\n\n\nCREATE TABLE order_items (\n\torder_item_id INTEGER, \n\torder_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tprice REAL NOT NULL, \n\tPRIMARY KEY (order_item_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from order_items table:\norder_item_id\torder_id\tproduct_id\tquantity\tprice\n1\t1\t1\t1\t550.0\n2\t2\t3\t1\t120.0\n3\t3\t4\t1\t1300.0\n*/\n\n\nCREATE TABLE orders (\n\torder_id INTEGER, \n\tuser_id INTEGER, \n\torder_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tstatus TEXT DEFAULT 'Pending', \n\ttotal_amount REAL, \n\tPRIMARY KEY (order_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from orders table:\norder_id\tuser_id\torder_date\tstatus\ttotal_amount\n1\t1\t2025-07-28 17:03:54\tPending\t550.0\n2\t2\t2025-07-28 17:03:54\tPending\t120.0\n3\t3\t2025-07-28 17:03:54\tPending\t1300.0\n*/\n\n\nCREATE TABLE payments (\n\tpayment_id INTEGER, \n\torder_id INTEGER, \n\tpayment_method TEXT, \n\tamount REAL, \n\tpayment_status TEXT DEFAULT 'Pending', \n\tpaid_at TIMESTAMP, \n\tPRIMARY KEY (payment_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from payments table:\npayment_id\torder_id\tpayment_method\tamount\tpayment_status\tpaid_at\n1\t1\tEsewa\t550.0\tCompleted\tNone\n2\t2\tKhalti\t120.0\tCompleted\tNone\n3\t3\tCash\t1300.0\tPending\tNone\n*/\n\n\nCREATE TABLE product_images (\n\timage_id INTEGER, \n\tproduct_id INTEGER, \n\timage_url TEXT NOT NULL, \n\tPRIMARY KEY (image_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from product_images table:\nimage_id\tproduct_id\timage_url\n1\t1\tsamsung.jpg\n2\t2\tiphone.jpg\n3\t3\tcoat.jpg\n*/\n\n\nCREATE TABLE products (\n\tproduct_id INTEGER, \n\tcategory_id INTEGER, \n\tname TEXT NOT NULL, \n\tdescription TEXT, \n\tprice REAL NOT NULL, \n\tstock INTEGER DEFAULT 0, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (product_id), \n\tFOREIGN KEY(category_id) REFERENCES categories (category_id)\n)\n\n/*\n3 rows from products table:\nproduct_id\tcategory_id\tname\tdescription\tprice\tstock\tcreated_at\n1\t1\tSamsung Galaxy A55\t5G smartphone with AMOLED display\t550.0\t50\t2025-07-28 17:03:54\n2\t1\tiPhone 15\tLatest Apple flagship smartphone\t999.0\t30\t2025-07-28 17:03:54\n3\t2\tWinter Coat\tStylish warm coat for winter\t120.0\t25\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE reviews (\n\treview_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\trating INTEGER, \n\tcomment TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (review_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id), \n\tCHECK (rating BETWEEN 1 AND 5)\n)\n\n/*\n3 rows from reviews table:\nreview_id\tuser_id\tproduct_id\trating\tcomment\tcreated_at\n1\t1\t1\t5\tExcellent smartphone!\t2025-07-28 17:03:54\n2\t2\t3\t4\tCoat is warm and stylish.\t2025-07-28 17:03:54\n3\t3\t4\t5\tLaptop is powerful.\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE shipping (\n\tshipping_id INTEGER, \n\torder_id INTEGER, \n\ttracking_number TEXT, \n\tshipping_address TEXT, \n\tshipping_date TIMESTAMP, \n\tdelivery_date TIMESTAMP, \n\tstatus TEXT DEFAULT 'Preparing', \n\tPRIMARY KEY (shipping_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from shipping table:\nshipping_id\torder_id\ttracking_number\tshipping_address\tshipping_date\tdelivery_date\tstatus\n1\t1\tTRK001\tKathmandu\t2025-07-01 00:00:00\t2025-07-05 00:00:00\tDelivered\n2\t2\tTRK002\tPokhara\t2025-07-02 00:00:00\t2025-07-06 00:00:00\tDelivered\n3\t3\tTRK003\tButwal\t2025-07-03 00:00:00\t2025-07-08 00:00:00\tShipped\n*/\n\n\nCREATE TABLE users (\n\tuser_id INTEGER, \n\tname TEXT, \n\temail TEXT, \n\tpassword TEXT, \n\tphone TEXT, \n\taddress TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (user_id), \n\tUNIQUE (email)\n)\n\n/*\n3 rows from users table:\nuser_id\tname\temail\tpassword\tphone\taddress\tcreated_at\n1\tArun Pandey\tarun@example.com\tpass\t9801111111\tKathmandu\t2025-07-28 17:03:54\n2\tSita Sharma\tsita@example.com\tpass\t9802222222\tPokhara\t2025-07-28 17:03:54\n3\tRam Thapa\tram@example.com\tpass\t9803333333\tButwal\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE wishlist (\n\twishlist_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\tadded_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (wishlist_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from wishlist table:\nwishlist_id\tuser_id\tproduct_id\tadded_at\n1\t1\t2\t2025-07-28 17:03:54\n2\t2\t3\t2025-07-28 17:03:54\n3\t3\t1\t2025-07-28 17:03:54\n*/")]
2025-07-29 22:15:41 [DEBUG   ] SQLAgent: Query attempt #1
2025-07-29 22:15:41 [INFO    ] SQLAgent: Invoking LLM for SQL generation...
2025-07-29 22:15:42 [INFO    ] SQLAgent: LLM generated SQL in 0.89 seconds.
2025-07-29 22:15:42 [DEBUG   ] SQLAgent: LLM response content: SELECT * FROM products WHERE name = 'iPhone 15';
2025-07-29 22:15:42 [INFO    ] SQLAgent: Valid SELECT query detected. Proceeding to execute_query.
2025-07-29 22:15:42 [INFO    ] SQLAgent: Executing SQL query from last message.
2025-07-29 22:15:42 [DEBUG   ] SQLAgent: Last message type: AIMessage, content: SELECT * FROM products WHERE name = 'iPhone 15';
2025-07-29 22:15:42 [DEBUG   ] SQLAgent: Raw SQL content: SELECT * FROM products WHERE name = 'iPhone 15';
2025-07-29 22:15:42 [INFO    ] SQLAgent: Extracted SQL query: SELECT * FROM products WHERE name = 'iPhone 15';
2025-07-29 22:15:42 [INFO    ] SQLAgent: Query executed in 0.00 seconds.
2025-07-29 22:15:42 [INFO    ] SQLAgent: Query result: [(2, 1, 'iPhone 15', 'Latest Apple flagship smartphone', 999.0, 30, '2025-07-28 17:03:54')]
2025-07-29 22:15:42 [INFO    ] SQLAgent: Query executed successfully. Proceeding to interpretation.
2025-07-29 22:15:42 [INFO    ] SQLAgent: Interpreting query results into natural language answer.
2025-07-29 22:15:42 [DEBUG   ] SQLAgent: Message history for interpretation: [('HumanMessage', '\tiPhone 15 discription information only '), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist'), ('AIMessage', ''), ('ToolMessage', "\nCREATE TABLE cart (\n\tcart_id INTEGER, \n\tuser_id INTEGER, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (cart_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from cart table:\ncart_id\tuser_id\tcreated_at\n1\t1\t2025-07-28 17:03:54\n2\t2\t2025-07-28 17:03:54\n3\t3\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE cart_items (\n\tcart_item_id INTEGER, \n\tcart_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tPRIMARY KEY (cart_item_id), \n\tFOREIGN KEY(cart_id) REFERENCES cart (cart_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from cart_items table:\ncart_item_id\tcart_id\tproduct_id\tquantity\n1\t1\t3\t1\n2\t2\t4\t2\n3\t3\t2\t1\n*/\n\n\nCREATE TABLE categories (\n\tcategory_id INTEGER, \n\tcategory_name TEXT NOT NULL, \n\tdescription TEXT, \n\tPRIMARY KEY (category_id)\n)\n\n/*\n3 rows from categories table:\ncategory_id\tcategory_name\tdescription\n1\tMobiles\tSmartphones and accessories\n2\tClothing\tMen and Women fashion\n3\tComputers\tLaptops and peripherals\n*/\n\n\nCREATE TABLE coupons (\n\tcoupon_id INTEGER, \n\tcode TEXT, \n\tdiscount_percent INTEGER, \n\tvalid_from DATE, \n\tvalid_to DATE, \n\tPRIMARY KEY (coupon_id), \n\tUNIQUE (code), \n\tCHECK (discount_percent BETWEEN 1 AND 100)\n)\n\n/*\n3 rows from coupons table:\ncoupon_id\tcode\tdiscount_percent\tvalid_from\tvalid_to\n1\tNEPAL10\t10\t2025-07-01\t2025-12-31\n2\tFEST20\t20\t2025-07-01\t2025-12-31\n3\tWELCOME5\t5\t2025-07-01\t2025-12-31\n*/\n\n\nCREATE TABLE order_coupons (\n\tid INTEGER, \n\torder_id INTEGER, \n\tcoupon_id INTEGER, \n\tPRIMARY KEY (id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(coupon_id) REFERENCES coupons (coupon_id)\n)\n\n/*\n3 rows from order_coupons table:\nid\torder_id\tcoupon_id\n1\t1\t1\n2\t2\t2\n3\t3\t3\n*/\n\n\nCREATE TABLE order_items (\n\torder_item_id INTEGER, \n\torder_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tprice REAL NOT NULL, \n\tPRIMARY KEY (order_item_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from order_items table:\norder_item_id\torder_id\tproduct_id\tquantity\tprice\n1\t1\t1\t1\t550.0\n2\t2\t3\t1\t120.0\n3\t3\t4\t1\t1300.0\n*/\n\n\nCREATE TABLE orders (\n\torder_id INTEGER, \n\tuser_id INTEGER, \n\torder_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tstatus TEXT DEFAULT 'Pending', \n\ttotal_amount REAL, \n\tPRIMARY KEY (order_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from orders table:\norder_id\tuser_id\torder_date\tstatus\ttotal_amount\n1\t1\t2025-07-28 17:03:54\tPending\t550.0\n2\t2\t2025-07-28 17:03:54\tPending\t120.0\n3\t3\t2025-07-28 17:03:54\tPending\t1300.0\n*/\n\n\nCREATE TABLE payments (\n\tpayment_id INTEGER, \n\torder_id INTEGER, \n\tpayment_method TEXT, \n\tamount REAL, \n\tpayment_status TEXT DEFAULT 'Pending', \n\tpaid_at TIMESTAMP, \n\tPRIMARY KEY (payment_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from payments table:\npayment_id\torder_id\tpayment_method\tamount\tpayment_status\tpaid_at\n1\t1\tEsewa\t550.0\tCompleted\tNone\n2\t2\tKhalti\t120.0\tCompleted\tNone\n3\t3\tCash\t1300.0\tPending\tNone\n*/\n\n\nCREATE TABLE product_images (\n\timage_id INTEGER, \n\tproduct_id INTEGER, \n\timage_url TEXT NOT NULL, \n\tPRIMARY KEY (image_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from product_images table:\nimage_id\tproduct_id\timage_url\n1\t1\tsamsung.jpg\n2\t2\tiphone.jpg\n3\t3\tcoat.jpg\n*/\n\n\nCREATE TABLE products (\n\tproduct_id INTEGER, \n\tcategory_id INTEGER, \n\tname TEXT NOT NULL, \n\tdescription TEXT, \n\tprice REAL NOT NULL, \n\tstock INTEGER DEFAULT 0, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (product_id), \n\tFOREIGN KEY(category_id) REFERENCES categories (category_id)\n)\n\n/*\n3 rows from products table:\nproduct_id\tcategory_id\tname\tdescription\tprice\tstock\tcreated_at\n1\t1\tSamsung Galaxy A55\t5G smartphone with AMOLED display\t550.0\t50\t2025-07-28 17:03:54\n2\t1\tiPhone 15\tLatest Apple flagship smartphone\t999.0\t30\t2025-07-28 17:03:54\n3\t2\tWinter Coat\tStylish warm coat for winter\t120.0\t25\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE reviews (\n\treview_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\trating INTEGER, \n\tcomment TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (review_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id), \n\tCHECK (rating BETWEEN 1 AND 5)\n)\n\n/*\n3 rows from reviews table:\nreview_id\tuser_id\tproduct_id\trating\tcomment\tcreated_at\n1\t1\t1\t5\tExcellent smartphone!\t2025-07-28 17:03:54\n2\t2\t3\t4\tCoat is warm and stylish.\t2025-07-28 17:03:54\n3\t3\t4\t5\tLaptop is powerful.\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE shipping (\n\tshipping_id INTEGER, \n\torder_id INTEGER, \n\ttracking_number TEXT, \n\tshipping_address TEXT, \n\tshipping_date TIMESTAMP, \n\tdelivery_date TIMESTAMP, \n\tstatus TEXT DEFAULT 'Preparing', \n\tPRIMARY KEY (shipping_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from shipping table:\nshipping_id\torder_id\ttracking_number\tshipping_address\tshipping_date\tdelivery_date\tstatus\n1\t1\tTRK001\tKathmandu\t2025-07-01 00:00:00\t2025-07-05 00:00:00\tDelivered\n2\t2\tTRK002\tPokhara\t2025-07-02 00:00:00\t2025-07-06 00:00:00\tDelivered\n3\t3\tTRK003\tButwal\t2025-07-03 00:00:00\t2025-07-08 00:00:00\tShipped\n*/\n\n\nCREATE TABLE users (\n\tuser_id INTEGER, \n\tname TEXT, \n\temail TEXT, \n\tpassword TEXT, \n\tphone TEXT, \n\taddress TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (user_id), \n\tUNIQUE (email)\n)\n\n/*\n3 rows from users table:\nuser_id\tname\temail\tpassword\tphone\taddress\tcreated_at\n1\tArun Pandey\tarun@example.com\tpass\t9801111111\tKathmandu\t2025-07-28 17:03:54\n2\tSita Sharma\tsita@example.com\tpass\t9802222222\tPokhara\t2025-07-28 17:03:54\n3\tRam Thapa\tram@example.com\tpass\t9803333333\tButwal\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE wishlist (\n\twishlist_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\tadded_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (wishlist_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from wishlist table:\nwishlist_id\tuser_id\tproduct_id\tadded_at\n1\t1\t2\t2025-07-28 17:03:54\n2\t2\t3\t2025-07-28 17:03:54\n3\t3\t1\t2025-07-28 17:03:54\n*/"), ('AIMessage', "SELECT * FROM products WHERE name = 'iPhone 15';"), ('ToolMessage', "[(2, 1, 'iPhone 15', 'Latest Apple flagship smartphone', 999.0, 30, '2025-07-28 17:03:54')]")]
2025-07-29 22:15:42 [INFO    ] SQLAgent: Invoking LLM for result interpretation...
2025-07-29 22:15:56 [INFO    ] SQLAgent: LLM interpretation completed in 13.80 seconds.
2025-07-29 22:15:56 [DEBUG   ] SQLAgent: Interpretation result: Answer: The iPhone 15 is a smartphone with a price of NPR 999.0, available in stock quantity of 30. It was added to the product catalog on 2025-07-28 17:03:54.
2025-07-29 22:15:56 [INFO    ] SQLAgent: Final answer generated. Ending workflow.
2025-07-29 22:15:56 [INFO    ] SQLAgent: Agent workflow completed in 14.99 seconds.
2025-07-29 22:15:56 [DEBUG   ] SQLAgent: Extracting final SQL query from message history.
2025-07-29 22:15:56 [DEBUG   ] SQLAgent: Extracted SQL query: SELECT * FROM products WHERE name = 'iPhone 15';
2025-07-29 22:15:56 [INFO    ] SQLAgent: Final SQL Query: SELECT * FROM products WHERE name = 'iPhone 15';
2025-07-29 22:15:56 [INFO    ] SQLAgent: Final Answer: Answer: The iPhone 15 is a smartphone with a price of NPR 999.0, available in stock quantity of 30. It was added to the product catalog on 2025-07-28 17:03:54.
2025-07-29 22:16:25 [INFO    ] SQLAgent: === SQL Agent Logger Initialized (Console Output Disabled, ALL Log Levels Captured) ===
2025-07-29 22:16:25 [DEBUG   ] SQLAgent: DEBUG level logging enabled - all detailed information will be captured
2025-07-29 22:16:25 [WARNING ] SQLAgent: WARNING level logging enabled - all warnings will be captured
2025-07-29 22:16:25 [ERROR   ] SQLAgent: ERROR level logging enabled - all errors will be captured
2025-07-29 22:16:25 [CRITICAL] SQLAgent: CRITICAL level logging enabled - all critical issues will be captured
2025-07-29 22:16:25 [INFO    ] SQLAgent: Received query: 'which product description is this Latest Apple flagship smartphone'
2025-07-29 22:16:26 [INFO    ] SQLAgent: Intent classification result: 'query'
2025-07-29 22:16:26 [INFO    ] SQLAgent: Setting recursion limit: 15
2025-07-29 22:16:26 [INFO    ] SQLAgent: Invoking agent workflow...
2025-07-29 22:16:26 [INFO    ] SQLAgent: Executing first_tool_call: requesting list of tables.
2025-07-29 22:16:26 [DEBUG   ] SQLAgent: first_tool_call response prepared.
2025-07-29 22:16:26 [INFO    ] SQLAgent: Calling model_get_schema to fetch schema.
2025-07-29 22:16:26 [DEBUG   ] SQLAgent: Current message history: [('HumanMessage', 'which product description is this Latest Apple flagship smartphone'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist')]
2025-07-29 22:16:33 [INFO    ] SQLAgent: LLM schema request took 7.44 seconds.
2025-07-29 22:16:33 [DEBUG   ] SQLAgent: Schema response: content='' additional_kwargs={'tool_calls': [{'id': '6cepxktvy', 'function': {'arguments': '{"table_names":"products,cart_items,orders,users"}', 'name': 'sql_db_schema'}, 'type': 'function'}]} response_metadata={'token_usage': {'completion_tokens': 24, 'prompt_tokens': 396, 'total_tokens': 420, 'completion_time': 0.185485602, 'prompt_time': 0.041114927, 'queue_time': 0.05208016499999999, 'total_time': 0.226600529}, 'model_name': 'llama-3.1-8b-instant', 'system_fingerprint': 'fp_c523237e5d', 'service_tier': 'on_demand', 'finish_reason': 'tool_calls', 'logprobs': None} id='run--4c2ccf21-51f4-48dd-997a-b4d6c2597d79-0' tool_calls=[{'name': 'sql_db_schema', 'args': {'table_names': 'products,cart_items,orders,users'}, 'id': '6cepxktvy', 'type': 'tool_call'}] usage_metadata={'input_tokens': 396, 'output_tokens': 24, 'total_tokens': 420}
2025-07-29 22:16:33 [INFO    ] SQLAgent: Entering query_gen_node to generate SQL query.
2025-07-29 22:16:33 [DEBUG   ] SQLAgent: Message history: [('HumanMessage', 'which product description is this Latest Apple flagship smartphone'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist'), ('AIMessage', ''), ('ToolMessage', "\nCREATE TABLE cart_items (\n\tcart_item_id INTEGER, \n\tcart_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tPRIMARY KEY (cart_item_id), \n\tFOREIGN KEY(cart_id) REFERENCES cart (cart_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from cart_items table:\ncart_item_id\tcart_id\tproduct_id\tquantity\n1\t1\t3\t1\n2\t2\t4\t2\n3\t3\t2\t1\n*/\n\n\nCREATE TABLE orders (\n\torder_id INTEGER, \n\tuser_id INTEGER, \n\torder_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tstatus TEXT DEFAULT 'Pending', \n\ttotal_amount REAL, \n\tPRIMARY KEY (order_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from orders table:\norder_id\tuser_id\torder_date\tstatus\ttotal_amount\n1\t1\t2025-07-28 17:03:54\tPending\t550.0\n2\t2\t2025-07-28 17:03:54\tPending\t120.0\n3\t3\t2025-07-28 17:03:54\tPending\t1300.0\n*/\n\n\nCREATE TABLE products (\n\tproduct_id INTEGER, \n\tcategory_id INTEGER, \n\tname TEXT NOT NULL, \n\tdescription TEXT, \n\tprice REAL NOT NULL, \n\tstock INTEGER DEFAULT 0, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (product_id), \n\tFOREIGN KEY(category_id) REFERENCES categories (category_id)\n)\n\n/*\n3 rows from products table:\nproduct_id\tcategory_id\tname\tdescription\tprice\tstock\tcreated_at\n1\t1\tSamsung Galaxy A55\t5G smartphone with AMOLED display\t550.0\t50\t2025-07-28 17:03:54\n2\t1\tiPhone 15\tLatest Apple flagship smartphone\t999.0\t30\t2025-07-28 17:03:54\n3\t2\tWinter Coat\tStylish warm coat for winter\t120.0\t25\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE users (\n\tuser_id INTEGER, \n\tname TEXT, \n\temail TEXT, \n\tpassword TEXT, \n\tphone TEXT, \n\taddress TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (user_id), \n\tUNIQUE (email)\n)\n\n/*\n3 rows from users table:\nuser_id\tname\temail\tpassword\tphone\taddress\tcreated_at\n1\tArun Pandey\tarun@example.com\tpass\t9801111111\tKathmandu\t2025-07-28 17:03:54\n2\tSita Sharma\tsita@example.com\tpass\t9802222222\tPokhara\t2025-07-28 17:03:54\n3\tRam Thapa\tram@example.com\tpass\t9803333333\tButwal\t2025-07-28 17:03:54\n*/")]
2025-07-29 22:16:33 [DEBUG   ] SQLAgent: Query attempt #1
2025-07-29 22:16:33 [INFO    ] SQLAgent: Invoking LLM for SQL generation...
2025-07-29 22:16:45 [INFO    ] SQLAgent: LLM generated SQL in 11.31 seconds.
2025-07-29 22:16:45 [DEBUG   ] SQLAgent: LLM response content: SELECT description FROM products WHERE name = 'Latest Apple flagship smartphone';
2025-07-29 22:16:45 [INFO    ] SQLAgent: Valid SELECT query detected. Proceeding to execute_query.
2025-07-29 22:16:45 [INFO    ] SQLAgent: Executing SQL query from last message.
2025-07-29 22:16:45 [DEBUG   ] SQLAgent: Last message type: AIMessage, content: SELECT description FROM products WHERE name = 'Latest Apple flagship smartphone';
2025-07-29 22:16:45 [DEBUG   ] SQLAgent: Raw SQL content: SELECT description FROM products WHERE name = 'Latest Apple flagship smartphone';
2025-07-29 22:16:45 [INFO    ] SQLAgent: Extracted SQL query: SELECT description FROM products WHERE name = 'Latest Apple flagship smartphone';
2025-07-29 22:16:45 [INFO    ] SQLAgent: Query executed in 0.00 seconds.
2025-07-29 22:16:45 [INFO    ] SQLAgent: Query returned no results.
2025-07-29 22:16:45 [INFO    ] SQLAgent: Query executed successfully. Proceeding to interpretation.
2025-07-29 22:16:45 [INFO    ] SQLAgent: Interpreting query results into natural language answer.
2025-07-29 22:16:45 [DEBUG   ] SQLAgent: Message history for interpretation: [('HumanMessage', 'which product description is this Latest Apple flagship smartphone'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist'), ('AIMessage', ''), ('ToolMessage', "\nCREATE TABLE cart_items (\n\tcart_item_id INTEGER, \n\tcart_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tPRIMARY KEY (cart_item_id), \n\tFOREIGN KEY(cart_id) REFERENCES cart (cart_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from cart_items table:\ncart_item_id\tcart_id\tproduct_id\tquantity\n1\t1\t3\t1\n2\t2\t4\t2\n3\t3\t2\t1\n*/\n\n\nCREATE TABLE orders (\n\torder_id INTEGER, \n\tuser_id INTEGER, \n\torder_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tstatus TEXT DEFAULT 'Pending', \n\ttotal_amount REAL, \n\tPRIMARY KEY (order_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from orders table:\norder_id\tuser_id\torder_date\tstatus\ttotal_amount\n1\t1\t2025-07-28 17:03:54\tPending\t550.0\n2\t2\t2025-07-28 17:03:54\tPending\t120.0\n3\t3\t2025-07-28 17:03:54\tPending\t1300.0\n*/\n\n\nCREATE TABLE products (\n\tproduct_id INTEGER, \n\tcategory_id INTEGER, \n\tname TEXT NOT NULL, \n\tdescription TEXT, \n\tprice REAL NOT NULL, \n\tstock INTEGER DEFAULT 0, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (product_id), \n\tFOREIGN KEY(category_id) REFERENCES categories (category_id)\n)\n\n/*\n3 rows from products table:\nproduct_id\tcategory_id\tname\tdescription\tprice\tstock\tcreated_at\n1\t1\tSamsung Galaxy A55\t5G smartphone with AMOLED display\t550.0\t50\t2025-07-28 17:03:54\n2\t1\tiPhone 15\tLatest Apple flagship smartphone\t999.0\t30\t2025-07-28 17:03:54\n3\t2\tWinter Coat\tStylish warm coat for winter\t120.0\t25\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE users (\n\tuser_id INTEGER, \n\tname TEXT, \n\temail TEXT, \n\tpassword TEXT, \n\tphone TEXT, \n\taddress TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (user_id), \n\tUNIQUE (email)\n)\n\n/*\n3 rows from users table:\nuser_id\tname\temail\tpassword\tphone\taddress\tcreated_at\n1\tArun Pandey\tarun@example.com\tpass\t9801111111\tKathmandu\t2025-07-28 17:03:54\n2\tSita Sharma\tsita@example.com\tpass\t9802222222\tPokhara\t2025-07-28 17:03:54\n3\tRam Thapa\tram@example.com\tpass\t9803333333\tButwal\t2025-07-28 17:03:54\n*/"), ('AIMessage', "SELECT description FROM products WHERE name = 'Latest Apple flagship smartphone';"), ('ToolMessage', 'Query executed successfully but returned no results.')]
2025-07-29 22:16:45 [INFO    ] SQLAgent: Invoking LLM for result interpretation...
2025-07-29 22:16:54 [INFO    ] SQLAgent: LLM interpretation completed in 8.87 seconds.
2025-07-29 22:16:54 [DEBUG   ] SQLAgent: Interpretation result: Answer: No matching records were found for the product description "Latest Apple flagship smartphone".
2025-07-29 22:16:54 [INFO    ] SQLAgent: Final answer generated. Ending workflow.
2025-07-29 22:16:54 [INFO    ] SQLAgent: Agent workflow completed in 27.64 seconds.
2025-07-29 22:16:54 [DEBUG   ] SQLAgent: Extracting final SQL query from message history.
2025-07-29 22:16:54 [DEBUG   ] SQLAgent: Extracted SQL query: SELECT description FROM products WHERE name = 'Latest Apple flagship smartphone';
2025-07-29 22:16:54 [INFO    ] SQLAgent: Final SQL Query: SELECT description FROM products WHERE name = 'Latest Apple flagship smartphone';
2025-07-29 22:16:54 [INFO    ] SQLAgent: Final Answer: Answer: No matching records were found for the product description "Latest Apple flagship smartphone".
2025-07-29 22:17:25 [INFO    ] SQLAgent: === SQL Agent Logger Initialized (Console Output Disabled, ALL Log Levels Captured) ===
2025-07-29 22:17:25 [DEBUG   ] SQLAgent: DEBUG level logging enabled - all detailed information will be captured
2025-07-29 22:17:25 [WARNING ] SQLAgent: WARNING level logging enabled - all warnings will be captured
2025-07-29 22:17:25 [ERROR   ] SQLAgent: ERROR level logging enabled - all errors will be captured
2025-07-29 22:17:25 [CRITICAL] SQLAgent: CRITICAL level logging enabled - all critical issues will be captured
2025-07-29 22:17:25 [INFO    ] SQLAgent: Received query: 'which product name where description is this Latest Apple flagship smartphone'
2025-07-29 22:17:26 [INFO    ] SQLAgent: Intent classification result: 'query'
2025-07-29 22:17:26 [INFO    ] SQLAgent: Setting recursion limit: 15
2025-07-29 22:17:26 [INFO    ] SQLAgent: Invoking agent workflow...
2025-07-29 22:17:26 [INFO    ] SQLAgent: Executing first_tool_call: requesting list of tables.
2025-07-29 22:17:26 [DEBUG   ] SQLAgent: first_tool_call response prepared.
2025-07-29 22:17:26 [INFO    ] SQLAgent: Calling model_get_schema to fetch schema.
2025-07-29 22:17:26 [DEBUG   ] SQLAgent: Current message history: [('HumanMessage', 'which product name where description is this Latest Apple flagship smartphone'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist')]
2025-07-29 22:17:26 [INFO    ] SQLAgent: LLM schema request took 0.17 seconds.
2025-07-29 22:17:26 [DEBUG   ] SQLAgent: Schema response: content='' additional_kwargs={'tool_calls': [{'id': 'fq1gjqah4', 'function': {'arguments': '{"table_names":"products,cart_items,orders,users"}', 'name': 'sql_db_schema'}, 'type': 'function'}]} response_metadata={'token_usage': {'completion_tokens': 24, 'prompt_tokens': 398, 'total_tokens': 422, 'completion_time': 0.032237835, 'prompt_time': 0.02361077, 'queue_time': 0.05151014799999999, 'total_time': 0.055848605}, 'model_name': 'llama-3.1-8b-instant', 'system_fingerprint': 'fp_c523237e5d', 'service_tier': 'on_demand', 'finish_reason': 'tool_calls', 'logprobs': None} id='run--e495d4f8-e85a-4bb9-960c-fb3ff0962ac8-0' tool_calls=[{'name': 'sql_db_schema', 'args': {'table_names': 'products,cart_items,orders,users'}, 'id': 'fq1gjqah4', 'type': 'tool_call'}] usage_metadata={'input_tokens': 398, 'output_tokens': 24, 'total_tokens': 422}
2025-07-29 22:17:26 [INFO    ] SQLAgent: Entering query_gen_node to generate SQL query.
2025-07-29 22:17:26 [DEBUG   ] SQLAgent: Message history: [('HumanMessage', 'which product name where description is this Latest Apple flagship smartphone'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist'), ('AIMessage', ''), ('ToolMessage', "\nCREATE TABLE cart_items (\n\tcart_item_id INTEGER, \n\tcart_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tPRIMARY KEY (cart_item_id), \n\tFOREIGN KEY(cart_id) REFERENCES cart (cart_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from cart_items table:\ncart_item_id\tcart_id\tproduct_id\tquantity\n1\t1\t3\t1\n2\t2\t4\t2\n3\t3\t2\t1\n*/\n\n\nCREATE TABLE orders (\n\torder_id INTEGER, \n\tuser_id INTEGER, \n\torder_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tstatus TEXT DEFAULT 'Pending', \n\ttotal_amount REAL, \n\tPRIMARY KEY (order_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from orders table:\norder_id\tuser_id\torder_date\tstatus\ttotal_amount\n1\t1\t2025-07-28 17:03:54\tPending\t550.0\n2\t2\t2025-07-28 17:03:54\tPending\t120.0\n3\t3\t2025-07-28 17:03:54\tPending\t1300.0\n*/\n\n\nCREATE TABLE products (\n\tproduct_id INTEGER, \n\tcategory_id INTEGER, \n\tname TEXT NOT NULL, \n\tdescription TEXT, \n\tprice REAL NOT NULL, \n\tstock INTEGER DEFAULT 0, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (product_id), \n\tFOREIGN KEY(category_id) REFERENCES categories (category_id)\n)\n\n/*\n3 rows from products table:\nproduct_id\tcategory_id\tname\tdescription\tprice\tstock\tcreated_at\n1\t1\tSamsung Galaxy A55\t5G smartphone with AMOLED display\t550.0\t50\t2025-07-28 17:03:54\n2\t1\tiPhone 15\tLatest Apple flagship smartphone\t999.0\t30\t2025-07-28 17:03:54\n3\t2\tWinter Coat\tStylish warm coat for winter\t120.0\t25\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE users (\n\tuser_id INTEGER, \n\tname TEXT, \n\temail TEXT, \n\tpassword TEXT, \n\tphone TEXT, \n\taddress TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (user_id), \n\tUNIQUE (email)\n)\n\n/*\n3 rows from users table:\nuser_id\tname\temail\tpassword\tphone\taddress\tcreated_at\n1\tArun Pandey\tarun@example.com\tpass\t9801111111\tKathmandu\t2025-07-28 17:03:54\n2\tSita Sharma\tsita@example.com\tpass\t9802222222\tPokhara\t2025-07-28 17:03:54\n3\tRam Thapa\tram@example.com\tpass\t9803333333\tButwal\t2025-07-28 17:03:54\n*/")]
2025-07-29 22:17:26 [DEBUG   ] SQLAgent: Query attempt #1
2025-07-29 22:17:26 [INFO    ] SQLAgent: Invoking LLM for SQL generation...
2025-07-29 22:17:26 [INFO    ] SQLAgent: LLM generated SQL in 0.20 seconds.
2025-07-29 22:17:26 [DEBUG   ] SQLAgent: LLM response content: SELECT name FROM products WHERE description = 'Latest Apple flagship smartphone';
2025-07-29 22:17:26 [INFO    ] SQLAgent: Valid SELECT query detected. Proceeding to execute_query.
2025-07-29 22:17:26 [INFO    ] SQLAgent: Executing SQL query from last message.
2025-07-29 22:17:26 [DEBUG   ] SQLAgent: Last message type: AIMessage, content: SELECT name FROM products WHERE description = 'Latest Apple flagship smartphone';
2025-07-29 22:17:26 [DEBUG   ] SQLAgent: Raw SQL content: SELECT name FROM products WHERE description = 'Latest Apple flagship smartphone';
2025-07-29 22:17:26 [INFO    ] SQLAgent: Extracted SQL query: SELECT name FROM products WHERE description = 'Latest Apple flagship smartphone';
2025-07-29 22:17:26 [INFO    ] SQLAgent: Query executed in 0.00 seconds.
2025-07-29 22:17:26 [INFO    ] SQLAgent: Query result: [('iPhone 15',)]
2025-07-29 22:17:26 [INFO    ] SQLAgent: Query executed successfully. Proceeding to interpretation.
2025-07-29 22:17:26 [INFO    ] SQLAgent: Interpreting query results into natural language answer.
2025-07-29 22:17:26 [DEBUG   ] SQLAgent: Message history for interpretation: [('HumanMessage', 'which product name where description is this Latest Apple flagship smartphone'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist'), ('AIMessage', ''), ('ToolMessage', "\nCREATE TABLE cart_items (\n\tcart_item_id INTEGER, \n\tcart_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tPRIMARY KEY (cart_item_id), \n\tFOREIGN KEY(cart_id) REFERENCES cart (cart_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from cart_items table:\ncart_item_id\tcart_id\tproduct_id\tquantity\n1\t1\t3\t1\n2\t2\t4\t2\n3\t3\t2\t1\n*/\n\n\nCREATE TABLE orders (\n\torder_id INTEGER, \n\tuser_id INTEGER, \n\torder_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tstatus TEXT DEFAULT 'Pending', \n\ttotal_amount REAL, \n\tPRIMARY KEY (order_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from orders table:\norder_id\tuser_id\torder_date\tstatus\ttotal_amount\n1\t1\t2025-07-28 17:03:54\tPending\t550.0\n2\t2\t2025-07-28 17:03:54\tPending\t120.0\n3\t3\t2025-07-28 17:03:54\tPending\t1300.0\n*/\n\n\nCREATE TABLE products (\n\tproduct_id INTEGER, \n\tcategory_id INTEGER, \n\tname TEXT NOT NULL, \n\tdescription TEXT, \n\tprice REAL NOT NULL, \n\tstock INTEGER DEFAULT 0, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (product_id), \n\tFOREIGN KEY(category_id) REFERENCES categories (category_id)\n)\n\n/*\n3 rows from products table:\nproduct_id\tcategory_id\tname\tdescription\tprice\tstock\tcreated_at\n1\t1\tSamsung Galaxy A55\t5G smartphone with AMOLED display\t550.0\t50\t2025-07-28 17:03:54\n2\t1\tiPhone 15\tLatest Apple flagship smartphone\t999.0\t30\t2025-07-28 17:03:54\n3\t2\tWinter Coat\tStylish warm coat for winter\t120.0\t25\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE users (\n\tuser_id INTEGER, \n\tname TEXT, \n\temail TEXT, \n\tpassword TEXT, \n\tphone TEXT, \n\taddress TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (user_id), \n\tUNIQUE (email)\n)\n\n/*\n3 rows from users table:\nuser_id\tname\temail\tpassword\tphone\taddress\tcreated_at\n1\tArun Pandey\tarun@example.com\tpass\t9801111111\tKathmandu\t2025-07-28 17:03:54\n2\tSita Sharma\tsita@example.com\tpass\t9802222222\tPokhara\t2025-07-28 17:03:54\n3\tRam Thapa\tram@example.com\tpass\t9803333333\tButwal\t2025-07-28 17:03:54\n*/"), ('AIMessage', "SELECT name FROM products WHERE description = 'Latest Apple flagship smartphone';"), ('ToolMessage', "[('iPhone 15',)]")]
2025-07-29 22:17:26 [INFO    ] SQLAgent: Invoking LLM for result interpretation...
2025-07-29 22:17:32 [INFO    ] SQLAgent: LLM interpretation completed in 5.47 seconds.
2025-07-29 22:17:32 [DEBUG   ] SQLAgent: Interpretation result: Answer: The product name where the description is "Latest Apple flagship smartphone" is iPhone 15.
2025-07-29 22:17:32 [INFO    ] SQLAgent: Final answer generated. Ending workflow.
2025-07-29 22:17:32 [INFO    ] SQLAgent: Agent workflow completed in 5.85 seconds.
2025-07-29 22:17:32 [DEBUG   ] SQLAgent: Extracting final SQL query from message history.
2025-07-29 22:17:32 [DEBUG   ] SQLAgent: Extracted SQL query: SELECT name FROM products WHERE description = 'Latest Apple flagship smartphone';
2025-07-29 22:17:32 [INFO    ] SQLAgent: Final SQL Query: SELECT name FROM products WHERE description = 'Latest Apple flagship smartphone';
2025-07-29 22:17:32 [INFO    ] SQLAgent: Final Answer: Answer: The product name where the description is "Latest Apple flagship smartphone" is iPhone 15.
2025-07-29 22:17:50 [INFO    ] SQLAgent: === SQL Agent Logger Initialized (Console Output Disabled, ALL Log Levels Captured) ===
2025-07-29 22:17:50 [DEBUG   ] SQLAgent: DEBUG level logging enabled - all detailed information will be captured
2025-07-29 22:17:50 [WARNING ] SQLAgent: WARNING level logging enabled - all warnings will be captured
2025-07-29 22:17:50 [ERROR   ] SQLAgent: ERROR level logging enabled - all errors will be captured
2025-07-29 22:17:50 [CRITICAL] SQLAgent: CRITICAL level logging enabled - all critical issues will be captured
2025-07-29 22:17:50 [INFO    ] SQLAgent: === SQL Agent Logger Initialized (Console Output Disabled, ALL Log Levels Captured) ===
2025-07-29 22:17:50 [DEBUG   ] SQLAgent: DEBUG level logging enabled - all detailed information will be captured
2025-07-29 22:17:50 [WARNING ] SQLAgent: WARNING level logging enabled - all warnings will be captured
2025-07-29 22:17:50 [ERROR   ] SQLAgent: ERROR level logging enabled - all errors will be captured
2025-07-29 22:17:50 [CRITICAL] SQLAgent: CRITICAL level logging enabled - all critical issues will be captured
2025-07-29 22:17:53 [INFO    ] SQLAgent: === SQL Agent Logger Initialized (Console Output Disabled, ALL Log Levels Captured) ===
2025-07-29 22:17:53 [DEBUG   ] SQLAgent: DEBUG level logging enabled - all detailed information will be captured
2025-07-29 22:17:53 [WARNING ] SQLAgent: WARNING level logging enabled - all warnings will be captured
2025-07-29 22:17:53 [ERROR   ] SQLAgent: ERROR level logging enabled - all errors will be captured
2025-07-29 22:17:53 [CRITICAL] SQLAgent: CRITICAL level logging enabled - all critical issues will be captured
2025-07-29 22:17:54 [INFO    ] SQLAgent: === SQL Agent Logger Initialized (Console Output Disabled, ALL Log Levels Captured) ===
2025-07-29 22:17:54 [DEBUG   ] SQLAgent: DEBUG level logging enabled - all detailed information will be captured
2025-07-29 22:17:54 [WARNING ] SQLAgent: WARNING level logging enabled - all warnings will be captured
2025-07-29 22:17:54 [ERROR   ] SQLAgent: ERROR level logging enabled - all errors will be captured
2025-07-29 22:17:54 [CRITICAL] SQLAgent: CRITICAL level logging enabled - all critical issues will be captured
2025-07-29 22:17:54 [INFO    ] SQLAgent: === SQL Agent Logger Initialized (Console Output Disabled, ALL Log Levels Captured) ===
2025-07-29 22:17:54 [DEBUG   ] SQLAgent: DEBUG level logging enabled - all detailed information will be captured
2025-07-29 22:17:54 [WARNING ] SQLAgent: WARNING level logging enabled - all warnings will be captured
2025-07-29 22:17:54 [ERROR   ] SQLAgent: ERROR level logging enabled - all errors will be captured
2025-07-29 22:17:54 [CRITICAL] SQLAgent: CRITICAL level logging enabled - all critical issues will be captured
2025-07-29 22:17:55 [INFO    ] SQLAgent: === SQL Agent Logger Initialized (Console Output Disabled, ALL Log Levels Captured) ===
2025-07-29 22:17:55 [DEBUG   ] SQLAgent: DEBUG level logging enabled - all detailed information will be captured
2025-07-29 22:17:55 [WARNING ] SQLAgent: WARNING level logging enabled - all warnings will be captured
2025-07-29 22:17:55 [ERROR   ] SQLAgent: ERROR level logging enabled - all errors will be captured
2025-07-29 22:17:55 [CRITICAL] SQLAgent: CRITICAL level logging enabled - all critical issues will be captured
2025-07-29 22:18:27 [INFO    ] SQLAgent: === SQL Agent Logger Initialized (Console Output Disabled, ALL Log Levels Captured) ===
2025-07-29 22:18:27 [DEBUG   ] SQLAgent: DEBUG level logging enabled - all detailed information will be captured
2025-07-29 22:18:27 [WARNING ] SQLAgent: WARNING level logging enabled - all warnings will be captured
2025-07-29 22:18:27 [ERROR   ] SQLAgent: ERROR level logging enabled - all errors will be captured
2025-07-29 22:18:27 [CRITICAL] SQLAgent: CRITICAL level logging enabled - all critical issues will be captured
2025-07-29 22:18:27 [INFO    ] SQLAgent: Received query: 'Hi'
2025-07-29 22:18:27 [INFO    ] SQLAgent: Intent classification result: 'greeting'
2025-07-29 22:18:27 [INFO    ] SQLAgent: Pure greeting detected via LLM. Responding directly.
2025-07-29 22:20:18 [INFO    ] SQLAgent: === SQL Agent Logger Initialized (Console Output Disabled, ALL Log Levels Captured) ===
2025-07-29 22:20:18 [DEBUG   ] SQLAgent: DEBUG level logging enabled - all detailed information will be captured
2025-07-29 22:20:18 [WARNING ] SQLAgent: WARNING level logging enabled - all warnings will be captured
2025-07-29 22:20:18 [ERROR   ] SQLAgent: ERROR level logging enabled - all errors will be captured
2025-07-29 22:20:18 [CRITICAL] SQLAgent: CRITICAL level logging enabled - all critical issues will be captured
2025-07-29 22:20:18 [INFO    ] SQLAgent: === SQL Agent Logger Initialized (Console Output Disabled, ALL Log Levels Captured) ===
2025-07-29 22:20:18 [DEBUG   ] SQLAgent: DEBUG level logging enabled - all detailed information will be captured
2025-07-29 22:20:18 [WARNING ] SQLAgent: WARNING level logging enabled - all warnings will be captured
2025-07-29 22:20:18 [ERROR   ] SQLAgent: ERROR level logging enabled - all errors will be captured
2025-07-29 22:20:18 [CRITICAL] SQLAgent: CRITICAL level logging enabled - all critical issues will be captured
2025-07-29 22:20:26 [INFO    ] SQLAgent: === SQL Agent Logger Initialized (Console Output Disabled, ALL Log Levels Captured) ===
2025-07-29 22:20:26 [DEBUG   ] SQLAgent: DEBUG level logging enabled - all detailed information will be captured
2025-07-29 22:20:26 [WARNING ] SQLAgent: WARNING level logging enabled - all warnings will be captured
2025-07-29 22:20:26 [ERROR   ] SQLAgent: ERROR level logging enabled - all errors will be captured
2025-07-29 22:20:26 [CRITICAL] SQLAgent: CRITICAL level logging enabled - all critical issues will be captured
2025-07-29 22:20:26 [INFO    ] SQLAgent: Received query: 'Hi, how are you?'
2025-07-29 22:20:26 [INFO    ] SQLAgent: Intent classification result: 'greeting'
2025-07-29 22:20:26 [INFO    ] SQLAgent: Pure greeting detected via LLM. Responding directly.
2025-07-29 22:20:39 [INFO    ] SQLAgent: === SQL Agent Logger Initialized (Console Output Disabled, ALL Log Levels Captured) ===
2025-07-29 22:20:39 [DEBUG   ] SQLAgent: DEBUG level logging enabled - all detailed information will be captured
2025-07-29 22:20:39 [WARNING ] SQLAgent: WARNING level logging enabled - all warnings will be captured
2025-07-29 22:20:39 [ERROR   ] SQLAgent: ERROR level logging enabled - all errors will be captured
2025-07-29 22:20:39 [CRITICAL] SQLAgent: CRITICAL level logging enabled - all critical issues will be captured
2025-07-29 22:20:39 [INFO    ] SQLAgent: Received query: 'Can you show me all the users in the database?'
2025-07-29 22:20:39 [INFO    ] SQLAgent: Intent classification result: 'query'
2025-07-29 22:20:39 [INFO    ] SQLAgent: Setting recursion limit: 7
2025-07-29 22:20:39 [INFO    ] SQLAgent: Invoking agent workflow...
2025-07-29 22:20:39 [INFO    ] SQLAgent: Executing first_tool_call: requesting list of tables.
2025-07-29 22:20:39 [DEBUG   ] SQLAgent: first_tool_call response prepared.
2025-07-29 22:20:39 [INFO    ] SQLAgent: Calling model_get_schema to fetch schema.
2025-07-29 22:20:39 [DEBUG   ] SQLAgent: Current message history: [('HumanMessage', 'Can you show me all the users in the database?'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist')]
2025-07-29 22:20:40 [INFO    ] SQLAgent: LLM schema request took 0.36 seconds.
2025-07-29 22:20:40 [DEBUG   ] SQLAgent: Schema response: content='' additional_kwargs={'tool_calls': [{'id': 'hzf73spt6', 'function': {'arguments': '{"table_names":"users,wishlist,cart,cart_items,categories,coupons,order_coupons,order_items,orders,payments,product_images,products,reviews,shipping,products,users"}', 'name': 'sql_db_schema'}, 'type': 'function'}]} response_metadata={'token_usage': {'completion_tokens': 54, 'prompt_tokens': 398, 'total_tokens': 452, 'completion_time': 0.200246752, 'prompt_time': 0.038113474, 'queue_time': 0.055558619, 'total_time': 0.238360226}, 'model_name': 'llama-3.1-8b-instant', 'system_fingerprint': 'fp_c523237e5d', 'service_tier': 'on_demand', 'finish_reason': 'tool_calls', 'logprobs': None} id='run--56d5caf7-706b-477c-9190-0adace071b74-0' tool_calls=[{'name': 'sql_db_schema', 'args': {'table_names': 'users,wishlist,cart,cart_items,categories,coupons,order_coupons,order_items,orders,payments,product_images,products,reviews,shipping,products,users'}, 'id': 'hzf73spt6', 'type': 'tool_call'}] usage_metadata={'input_tokens': 398, 'output_tokens': 54, 'total_tokens': 452}
2025-07-29 22:20:40 [INFO    ] SQLAgent: Entering query_gen_node to generate SQL query.
2025-07-29 22:20:40 [DEBUG   ] SQLAgent: Message history: [('HumanMessage', 'Can you show me all the users in the database?'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist'), ('AIMessage', ''), ('ToolMessage', "\nCREATE TABLE cart (\n\tcart_id INTEGER, \n\tuser_id INTEGER, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (cart_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from cart table:\ncart_id\tuser_id\tcreated_at\n1\t1\t2025-07-28 17:03:54\n2\t2\t2025-07-28 17:03:54\n3\t3\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE cart_items (\n\tcart_item_id INTEGER, \n\tcart_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tPRIMARY KEY (cart_item_id), \n\tFOREIGN KEY(cart_id) REFERENCES cart (cart_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from cart_items table:\ncart_item_id\tcart_id\tproduct_id\tquantity\n1\t1\t3\t1\n2\t2\t4\t2\n3\t3\t2\t1\n*/\n\n\nCREATE TABLE categories (\n\tcategory_id INTEGER, \n\tcategory_name TEXT NOT NULL, \n\tdescription TEXT, \n\tPRIMARY KEY (category_id)\n)\n\n/*\n3 rows from categories table:\ncategory_id\tcategory_name\tdescription\n1\tMobiles\tSmartphones and accessories\n2\tClothing\tMen and Women fashion\n3\tComputers\tLaptops and peripherals\n*/\n\n\nCREATE TABLE coupons (\n\tcoupon_id INTEGER, \n\tcode TEXT, \n\tdiscount_percent INTEGER, \n\tvalid_from DATE, \n\tvalid_to DATE, \n\tPRIMARY KEY (coupon_id), \n\tUNIQUE (code), \n\tCHECK (discount_percent BETWEEN 1 AND 100)\n)\n\n/*\n3 rows from coupons table:\ncoupon_id\tcode\tdiscount_percent\tvalid_from\tvalid_to\n1\tNEPAL10\t10\t2025-07-01\t2025-12-31\n2\tFEST20\t20\t2025-07-01\t2025-12-31\n3\tWELCOME5\t5\t2025-07-01\t2025-12-31\n*/\n\n\nCREATE TABLE order_coupons (\n\tid INTEGER, \n\torder_id INTEGER, \n\tcoupon_id INTEGER, \n\tPRIMARY KEY (id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(coupon_id) REFERENCES coupons (coupon_id)\n)\n\n/*\n3 rows from order_coupons table:\nid\torder_id\tcoupon_id\n1\t1\t1\n2\t2\t2\n3\t3\t3\n*/\n\n\nCREATE TABLE order_items (\n\torder_item_id INTEGER, \n\torder_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tprice REAL NOT NULL, \n\tPRIMARY KEY (order_item_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from order_items table:\norder_item_id\torder_id\tproduct_id\tquantity\tprice\n1\t1\t1\t1\t550.0\n2\t2\t3\t1\t120.0\n3\t3\t4\t1\t1300.0\n*/\n\n\nCREATE TABLE orders (\n\torder_id INTEGER, \n\tuser_id INTEGER, \n\torder_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tstatus TEXT DEFAULT 'Pending', \n\ttotal_amount REAL, \n\tPRIMARY KEY (order_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from orders table:\norder_id\tuser_id\torder_date\tstatus\ttotal_amount\n1\t1\t2025-07-28 17:03:54\tPending\t550.0\n2\t2\t2025-07-28 17:03:54\tPending\t120.0\n3\t3\t2025-07-28 17:03:54\tPending\t1300.0\n*/\n\n\nCREATE TABLE payments (\n\tpayment_id INTEGER, \n\torder_id INTEGER, \n\tpayment_method TEXT, \n\tamount REAL, \n\tpayment_status TEXT DEFAULT 'Pending', \n\tpaid_at TIMESTAMP, \n\tPRIMARY KEY (payment_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from payments table:\npayment_id\torder_id\tpayment_method\tamount\tpayment_status\tpaid_at\n1\t1\tEsewa\t550.0\tCompleted\tNone\n2\t2\tKhalti\t120.0\tCompleted\tNone\n3\t3\tCash\t1300.0\tPending\tNone\n*/\n\n\nCREATE TABLE product_images (\n\timage_id INTEGER, \n\tproduct_id INTEGER, \n\timage_url TEXT NOT NULL, \n\tPRIMARY KEY (image_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from product_images table:\nimage_id\tproduct_id\timage_url\n1\t1\tsamsung.jpg\n2\t2\tiphone.jpg\n3\t3\tcoat.jpg\n*/\n\n\nCREATE TABLE products (\n\tproduct_id INTEGER, \n\tcategory_id INTEGER, \n\tname TEXT NOT NULL, \n\tdescription TEXT, \n\tprice REAL NOT NULL, \n\tstock INTEGER DEFAULT 0, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (product_id), \n\tFOREIGN KEY(category_id) REFERENCES categories (category_id)\n)\n\n/*\n3 rows from products table:\nproduct_id\tcategory_id\tname\tdescription\tprice\tstock\tcreated_at\n1\t1\tSamsung Galaxy A55\t5G smartphone with AMOLED display\t550.0\t50\t2025-07-28 17:03:54\n2\t1\tiPhone 15\tLatest Apple flagship smartphone\t999.0\t30\t2025-07-28 17:03:54\n3\t2\tWinter Coat\tStylish warm coat for winter\t120.0\t25\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE reviews (\n\treview_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\trating INTEGER, \n\tcomment TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (review_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id), \n\tCHECK (rating BETWEEN 1 AND 5)\n)\n\n/*\n3 rows from reviews table:\nreview_id\tuser_id\tproduct_id\trating\tcomment\tcreated_at\n1\t1\t1\t5\tExcellent smartphone!\t2025-07-28 17:03:54\n2\t2\t3\t4\tCoat is warm and stylish.\t2025-07-28 17:03:54\n3\t3\t4\t5\tLaptop is powerful.\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE shipping (\n\tshipping_id INTEGER, \n\torder_id INTEGER, \n\ttracking_number TEXT, \n\tshipping_address TEXT, \n\tshipping_date TIMESTAMP, \n\tdelivery_date TIMESTAMP, \n\tstatus TEXT DEFAULT 'Preparing', \n\tPRIMARY KEY (shipping_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from shipping table:\nshipping_id\torder_id\ttracking_number\tshipping_address\tshipping_date\tdelivery_date\tstatus\n1\t1\tTRK001\tKathmandu\t2025-07-01 00:00:00\t2025-07-05 00:00:00\tDelivered\n2\t2\tTRK002\tPokhara\t2025-07-02 00:00:00\t2025-07-06 00:00:00\tDelivered\n3\t3\tTRK003\tButwal\t2025-07-03 00:00:00\t2025-07-08 00:00:00\tShipped\n*/\n\n\nCREATE TABLE users (\n\tuser_id INTEGER, \n\tname TEXT, \n\temail TEXT, \n\tpassword TEXT, \n\tphone TEXT, \n\taddress TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (user_id), \n\tUNIQUE (email)\n)\n\n/*\n3 rows from users table:\nuser_id\tname\temail\tpassword\tphone\taddress\tcreated_at\n1\tArun Pandey\tarun@example.com\tpass\t9801111111\tKathmandu\t2025-07-28 17:03:54\n2\tSita Sharma\tsita@example.com\tpass\t9802222222\tPokhara\t2025-07-28 17:03:54\n3\tRam Thapa\tram@example.com\tpass\t9803333333\tButwal\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE wishlist (\n\twishlist_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\tadded_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (wishlist_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from wishlist table:\nwishlist_id\tuser_id\tproduct_id\tadded_at\n1\t1\t2\t2025-07-28 17:03:54\n2\t2\t3\t2025-07-28 17:03:54\n3\t3\t1\t2025-07-28 17:03:54\n*/")]
2025-07-29 22:20:40 [DEBUG   ] SQLAgent: Query attempt #1
2025-07-29 22:20:40 [INFO    ] SQLAgent: Invoking LLM for SQL generation...
2025-07-29 22:20:40 [INFO    ] SQLAgent: LLM generated SQL in 0.54 seconds.
2025-07-29 22:20:40 [DEBUG   ] SQLAgent: LLM response content: SELECT * FROM users LIMIT 10;
2025-07-29 22:20:40 [INFO    ] SQLAgent: Valid SELECT query detected. Proceeding to execute_query.
2025-07-29 22:20:40 [INFO    ] SQLAgent: Executing SQL query from last message.
2025-07-29 22:20:40 [DEBUG   ] SQLAgent: Last message type: AIMessage, content: SELECT * FROM users LIMIT 10;
2025-07-29 22:20:40 [DEBUG   ] SQLAgent: Raw SQL content: SELECT * FROM users LIMIT 10;
2025-07-29 22:20:40 [INFO    ] SQLAgent: Extracted SQL query: SELECT * FROM users LIMIT 10;
2025-07-29 22:20:40 [INFO    ] SQLAgent: Query executed in 0.00 seconds.
2025-07-29 22:20:40 [INFO    ] SQLAgent: Query result: [(1, 'Arun Pandey', 'arun@example.com', 'pass', '9801111111', 'Kathmandu', '2025-07-28 17:03:54'), (2, 'Sita Sharma', 'sita@example.com', 'pass', '9802222222', 'Pokhara', '2025-07-28 17:03:54'), (3, '...
2025-07-29 22:20:40 [INFO    ] SQLAgent: Query executed successfully. Proceeding to interpretation.
2025-07-29 22:20:40 [INFO    ] SQLAgent: Interpreting query results into natural language answer.
2025-07-29 22:20:40 [DEBUG   ] SQLAgent: Message history for interpretation: [('HumanMessage', 'Can you show me all the users in the database?'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist'), ('AIMessage', ''), ('ToolMessage', "\nCREATE TABLE cart (\n\tcart_id INTEGER, \n\tuser_id INTEGER, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (cart_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from cart table:\ncart_id\tuser_id\tcreated_at\n1\t1\t2025-07-28 17:03:54\n2\t2\t2025-07-28 17:03:54\n3\t3\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE cart_items (\n\tcart_item_id INTEGER, \n\tcart_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tPRIMARY KEY (cart_item_id), \n\tFOREIGN KEY(cart_id) REFERENCES cart (cart_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from cart_items table:\ncart_item_id\tcart_id\tproduct_id\tquantity\n1\t1\t3\t1\n2\t2\t4\t2\n3\t3\t2\t1\n*/\n\n\nCREATE TABLE categories (\n\tcategory_id INTEGER, \n\tcategory_name TEXT NOT NULL, \n\tdescription TEXT, \n\tPRIMARY KEY (category_id)\n)\n\n/*\n3 rows from categories table:\ncategory_id\tcategory_name\tdescription\n1\tMobiles\tSmartphones and accessories\n2\tClothing\tMen and Women fashion\n3\tComputers\tLaptops and peripherals\n*/\n\n\nCREATE TABLE coupons (\n\tcoupon_id INTEGER, \n\tcode TEXT, \n\tdiscount_percent INTEGER, \n\tvalid_from DATE, \n\tvalid_to DATE, \n\tPRIMARY KEY (coupon_id), \n\tUNIQUE (code), \n\tCHECK (discount_percent BETWEEN 1 AND 100)\n)\n\n/*\n3 rows from coupons table:\ncoupon_id\tcode\tdiscount_percent\tvalid_from\tvalid_to\n1\tNEPAL10\t10\t2025-07-01\t2025-12-31\n2\tFEST20\t20\t2025-07-01\t2025-12-31\n3\tWELCOME5\t5\t2025-07-01\t2025-12-31\n*/\n\n\nCREATE TABLE order_coupons (\n\tid INTEGER, \n\torder_id INTEGER, \n\tcoupon_id INTEGER, \n\tPRIMARY KEY (id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(coupon_id) REFERENCES coupons (coupon_id)\n)\n\n/*\n3 rows from order_coupons table:\nid\torder_id\tcoupon_id\n1\t1\t1\n2\t2\t2\n3\t3\t3\n*/\n\n\nCREATE TABLE order_items (\n\torder_item_id INTEGER, \n\torder_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tprice REAL NOT NULL, \n\tPRIMARY KEY (order_item_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from order_items table:\norder_item_id\torder_id\tproduct_id\tquantity\tprice\n1\t1\t1\t1\t550.0\n2\t2\t3\t1\t120.0\n3\t3\t4\t1\t1300.0\n*/\n\n\nCREATE TABLE orders (\n\torder_id INTEGER, \n\tuser_id INTEGER, \n\torder_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tstatus TEXT DEFAULT 'Pending', \n\ttotal_amount REAL, \n\tPRIMARY KEY (order_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from orders table:\norder_id\tuser_id\torder_date\tstatus\ttotal_amount\n1\t1\t2025-07-28 17:03:54\tPending\t550.0\n2\t2\t2025-07-28 17:03:54\tPending\t120.0\n3\t3\t2025-07-28 17:03:54\tPending\t1300.0\n*/\n\n\nCREATE TABLE payments (\n\tpayment_id INTEGER, \n\torder_id INTEGER, \n\tpayment_method TEXT, \n\tamount REAL, \n\tpayment_status TEXT DEFAULT 'Pending', \n\tpaid_at TIMESTAMP, \n\tPRIMARY KEY (payment_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from payments table:\npayment_id\torder_id\tpayment_method\tamount\tpayment_status\tpaid_at\n1\t1\tEsewa\t550.0\tCompleted\tNone\n2\t2\tKhalti\t120.0\tCompleted\tNone\n3\t3\tCash\t1300.0\tPending\tNone\n*/\n\n\nCREATE TABLE product_images (\n\timage_id INTEGER, \n\tproduct_id INTEGER, \n\timage_url TEXT NOT NULL, \n\tPRIMARY KEY (image_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from product_images table:\nimage_id\tproduct_id\timage_url\n1\t1\tsamsung.jpg\n2\t2\tiphone.jpg\n3\t3\tcoat.jpg\n*/\n\n\nCREATE TABLE products (\n\tproduct_id INTEGER, \n\tcategory_id INTEGER, \n\tname TEXT NOT NULL, \n\tdescription TEXT, \n\tprice REAL NOT NULL, \n\tstock INTEGER DEFAULT 0, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (product_id), \n\tFOREIGN KEY(category_id) REFERENCES categories (category_id)\n)\n\n/*\n3 rows from products table:\nproduct_id\tcategory_id\tname\tdescription\tprice\tstock\tcreated_at\n1\t1\tSamsung Galaxy A55\t5G smartphone with AMOLED display\t550.0\t50\t2025-07-28 17:03:54\n2\t1\tiPhone 15\tLatest Apple flagship smartphone\t999.0\t30\t2025-07-28 17:03:54\n3\t2\tWinter Coat\tStylish warm coat for winter\t120.0\t25\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE reviews (\n\treview_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\trating INTEGER, \n\tcomment TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (review_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id), \n\tCHECK (rating BETWEEN 1 AND 5)\n)\n\n/*\n3 rows from reviews table:\nreview_id\tuser_id\tproduct_id\trating\tcomment\tcreated_at\n1\t1\t1\t5\tExcellent smartphone!\t2025-07-28 17:03:54\n2\t2\t3\t4\tCoat is warm and stylish.\t2025-07-28 17:03:54\n3\t3\t4\t5\tLaptop is powerful.\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE shipping (\n\tshipping_id INTEGER, \n\torder_id INTEGER, \n\ttracking_number TEXT, \n\tshipping_address TEXT, \n\tshipping_date TIMESTAMP, \n\tdelivery_date TIMESTAMP, \n\tstatus TEXT DEFAULT 'Preparing', \n\tPRIMARY KEY (shipping_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from shipping table:\nshipping_id\torder_id\ttracking_number\tshipping_address\tshipping_date\tdelivery_date\tstatus\n1\t1\tTRK001\tKathmandu\t2025-07-01 00:00:00\t2025-07-05 00:00:00\tDelivered\n2\t2\tTRK002\tPokhara\t2025-07-02 00:00:00\t2025-07-06 00:00:00\tDelivered\n3\t3\tTRK003\tButwal\t2025-07-03 00:00:00\t2025-07-08 00:00:00\tShipped\n*/\n\n\nCREATE TABLE users (\n\tuser_id INTEGER, \n\tname TEXT, \n\temail TEXT, \n\tpassword TEXT, \n\tphone TEXT, \n\taddress TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (user_id), \n\tUNIQUE (email)\n)\n\n/*\n3 rows from users table:\nuser_id\tname\temail\tpassword\tphone\taddress\tcreated_at\n1\tArun Pandey\tarun@example.com\tpass\t9801111111\tKathmandu\t2025-07-28 17:03:54\n2\tSita Sharma\tsita@example.com\tpass\t9802222222\tPokhara\t2025-07-28 17:03:54\n3\tRam Thapa\tram@example.com\tpass\t9803333333\tButwal\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE wishlist (\n\twishlist_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\tadded_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (wishlist_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from wishlist table:\nwishlist_id\tuser_id\tproduct_id\tadded_at\n1\t1\t2\t2025-07-28 17:03:54\n2\t2\t3\t2025-07-28 17:03:54\n3\t3\t1\t2025-07-28 17:03:54\n*/"), ('AIMessage', 'SELECT * FROM users LIMIT 10;'), ('ToolMessage', "[(1, 'Arun Pandey', 'arun@example.com', 'pass', '9801111111', 'Kathmandu', '2025-07-28 17:03:54'), (2, 'Sita Sharma', 'sita@example.com', 'pass', '9802222222', 'Pokhara', '2025-07-28 17:03:54'), (3, 'Ram Thapa', 'ram@example.com', 'pass', '9803333333', 'Butwal', '2025-07-28 17:03:54'), (4, 'Krishna Adhikari', 'krishna@example.com', 'pass', '9804444444', 'Chitwan', '2025-07-28 17:03:54'), (5, 'Bina Kafle', 'bina@example.com', 'pass', '9805555555', 'Lalitpur', '2025-07-28 17:03:54'), (6, 'Binisha Chapagain', 'binisha@example.com', 'pass', '9806666666', 'Bhaktapur', '2025-07-28 17:03:54')]")]
2025-07-29 22:20:40 [INFO    ] SQLAgent: Invoking LLM for result interpretation...
2025-07-29 22:20:41 [INFO    ] SQLAgent: LLM interpretation completed in 0.43 seconds.
2025-07-29 22:20:41 [DEBUG   ] SQLAgent: Interpretation result: Answer: There are 6 users in the database. The users are:

1. Arun Pandey (arun@example.com)
2. Sita Sharma (sita@example.com)
3. Ram Thapa (ram@example.com)
4. Krishna Adhikari (krishna@example.com)
5. Bina Kafle (bina@example.com)
6. Binisha Chapagain (binisha@example.com)

Each user has a unique email address and password.
2025-07-29 22:20:41 [INFO    ] SQLAgent: Final answer generated. Ending workflow.
2025-07-29 22:20:41 [CRITICAL] SQLAgent: CRITICAL: GraphRecursionError occurred - Unable to process the query due to recursion limit. The query may be too complex or the database structure unclear.
2025-07-29 22:20:59 [INFO    ] SQLAgent: === SQL Agent Logger Initialized (Console Output Disabled, ALL Log Levels Captured) ===
2025-07-29 22:20:59 [DEBUG   ] SQLAgent: DEBUG level logging enabled - all detailed information will be captured
2025-07-29 22:20:59 [WARNING ] SQLAgent: WARNING level logging enabled - all warnings will be captured
2025-07-29 22:20:59 [ERROR   ] SQLAgent: ERROR level logging enabled - all errors will be captured
2025-07-29 22:20:59 [CRITICAL] SQLAgent: CRITICAL level logging enabled - all critical issues will be captured
2025-07-29 22:20:59 [INFO    ] SQLAgent: Received query: 'Can you show me all the users in the database?'
2025-07-29 22:21:00 [INFO    ] SQLAgent: Intent classification result: 'query'
2025-07-29 22:21:00 [INFO    ] SQLAgent: Setting recursion limit: 7
2025-07-29 22:21:00 [INFO    ] SQLAgent: Invoking agent workflow...
2025-07-29 22:21:00 [INFO    ] SQLAgent: Executing first_tool_call: requesting list of tables.
2025-07-29 22:21:00 [DEBUG   ] SQLAgent: first_tool_call response prepared.
2025-07-29 22:21:00 [INFO    ] SQLAgent: Calling model_get_schema to fetch schema.
2025-07-29 22:21:00 [DEBUG   ] SQLAgent: Current message history: [('HumanMessage', 'Can you show me all the users in the database?'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist')]
2025-07-29 22:21:00 [INFO    ] SQLAgent: LLM schema request took 0.23 seconds.
2025-07-29 22:21:00 [DEBUG   ] SQLAgent: Schema response: content='' additional_kwargs={'tool_calls': [{'id': 'bwvncwa97', 'function': {'arguments': '{"table_names":"users,wishlist,cart,cart_items,categories,coupons,order_coupons,order_items,orders,payments,product_images,products,reviews,shipping,products,users"}', 'name': 'sql_db_schema'}, 'type': 'function'}]} response_metadata={'token_usage': {'completion_tokens': 54, 'prompt_tokens': 398, 'total_tokens': 452, 'completion_time': 0.072, 'prompt_time': 0.032511634, 'queue_time': 0.05509838, 'total_time': 0.104511634}, 'model_name': 'llama-3.1-8b-instant', 'system_fingerprint': 'fp_c523237e5d', 'service_tier': 'on_demand', 'finish_reason': 'tool_calls', 'logprobs': None} id='run--add29da9-da44-42c2-b283-51261ac58884-0' tool_calls=[{'name': 'sql_db_schema', 'args': {'table_names': 'users,wishlist,cart,cart_items,categories,coupons,order_coupons,order_items,orders,payments,product_images,products,reviews,shipping,products,users'}, 'id': 'bwvncwa97', 'type': 'tool_call'}] usage_metadata={'input_tokens': 398, 'output_tokens': 54, 'total_tokens': 452}
2025-07-29 22:21:00 [INFO    ] SQLAgent: Entering query_gen_node to generate SQL query.
2025-07-29 22:21:00 [DEBUG   ] SQLAgent: Message history: [('HumanMessage', 'Can you show me all the users in the database?'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist'), ('AIMessage', ''), ('ToolMessage', "\nCREATE TABLE cart (\n\tcart_id INTEGER, \n\tuser_id INTEGER, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (cart_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from cart table:\ncart_id\tuser_id\tcreated_at\n1\t1\t2025-07-28 17:03:54\n2\t2\t2025-07-28 17:03:54\n3\t3\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE cart_items (\n\tcart_item_id INTEGER, \n\tcart_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tPRIMARY KEY (cart_item_id), \n\tFOREIGN KEY(cart_id) REFERENCES cart (cart_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from cart_items table:\ncart_item_id\tcart_id\tproduct_id\tquantity\n1\t1\t3\t1\n2\t2\t4\t2\n3\t3\t2\t1\n*/\n\n\nCREATE TABLE categories (\n\tcategory_id INTEGER, \n\tcategory_name TEXT NOT NULL, \n\tdescription TEXT, \n\tPRIMARY KEY (category_id)\n)\n\n/*\n3 rows from categories table:\ncategory_id\tcategory_name\tdescription\n1\tMobiles\tSmartphones and accessories\n2\tClothing\tMen and Women fashion\n3\tComputers\tLaptops and peripherals\n*/\n\n\nCREATE TABLE coupons (\n\tcoupon_id INTEGER, \n\tcode TEXT, \n\tdiscount_percent INTEGER, \n\tvalid_from DATE, \n\tvalid_to DATE, \n\tPRIMARY KEY (coupon_id), \n\tUNIQUE (code), \n\tCHECK (discount_percent BETWEEN 1 AND 100)\n)\n\n/*\n3 rows from coupons table:\ncoupon_id\tcode\tdiscount_percent\tvalid_from\tvalid_to\n1\tNEPAL10\t10\t2025-07-01\t2025-12-31\n2\tFEST20\t20\t2025-07-01\t2025-12-31\n3\tWELCOME5\t5\t2025-07-01\t2025-12-31\n*/\n\n\nCREATE TABLE order_coupons (\n\tid INTEGER, \n\torder_id INTEGER, \n\tcoupon_id INTEGER, \n\tPRIMARY KEY (id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(coupon_id) REFERENCES coupons (coupon_id)\n)\n\n/*\n3 rows from order_coupons table:\nid\torder_id\tcoupon_id\n1\t1\t1\n2\t2\t2\n3\t3\t3\n*/\n\n\nCREATE TABLE order_items (\n\torder_item_id INTEGER, \n\torder_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tprice REAL NOT NULL, \n\tPRIMARY KEY (order_item_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from order_items table:\norder_item_id\torder_id\tproduct_id\tquantity\tprice\n1\t1\t1\t1\t550.0\n2\t2\t3\t1\t120.0\n3\t3\t4\t1\t1300.0\n*/\n\n\nCREATE TABLE orders (\n\torder_id INTEGER, \n\tuser_id INTEGER, \n\torder_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tstatus TEXT DEFAULT 'Pending', \n\ttotal_amount REAL, \n\tPRIMARY KEY (order_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from orders table:\norder_id\tuser_id\torder_date\tstatus\ttotal_amount\n1\t1\t2025-07-28 17:03:54\tPending\t550.0\n2\t2\t2025-07-28 17:03:54\tPending\t120.0\n3\t3\t2025-07-28 17:03:54\tPending\t1300.0\n*/\n\n\nCREATE TABLE payments (\n\tpayment_id INTEGER, \n\torder_id INTEGER, \n\tpayment_method TEXT, \n\tamount REAL, \n\tpayment_status TEXT DEFAULT 'Pending', \n\tpaid_at TIMESTAMP, \n\tPRIMARY KEY (payment_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from payments table:\npayment_id\torder_id\tpayment_method\tamount\tpayment_status\tpaid_at\n1\t1\tEsewa\t550.0\tCompleted\tNone\n2\t2\tKhalti\t120.0\tCompleted\tNone\n3\t3\tCash\t1300.0\tPending\tNone\n*/\n\n\nCREATE TABLE product_images (\n\timage_id INTEGER, \n\tproduct_id INTEGER, \n\timage_url TEXT NOT NULL, \n\tPRIMARY KEY (image_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from product_images table:\nimage_id\tproduct_id\timage_url\n1\t1\tsamsung.jpg\n2\t2\tiphone.jpg\n3\t3\tcoat.jpg\n*/\n\n\nCREATE TABLE products (\n\tproduct_id INTEGER, \n\tcategory_id INTEGER, \n\tname TEXT NOT NULL, \n\tdescription TEXT, \n\tprice REAL NOT NULL, \n\tstock INTEGER DEFAULT 0, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (product_id), \n\tFOREIGN KEY(category_id) REFERENCES categories (category_id)\n)\n\n/*\n3 rows from products table:\nproduct_id\tcategory_id\tname\tdescription\tprice\tstock\tcreated_at\n1\t1\tSamsung Galaxy A55\t5G smartphone with AMOLED display\t550.0\t50\t2025-07-28 17:03:54\n2\t1\tiPhone 15\tLatest Apple flagship smartphone\t999.0\t30\t2025-07-28 17:03:54\n3\t2\tWinter Coat\tStylish warm coat for winter\t120.0\t25\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE reviews (\n\treview_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\trating INTEGER, \n\tcomment TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (review_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id), \n\tCHECK (rating BETWEEN 1 AND 5)\n)\n\n/*\n3 rows from reviews table:\nreview_id\tuser_id\tproduct_id\trating\tcomment\tcreated_at\n1\t1\t1\t5\tExcellent smartphone!\t2025-07-28 17:03:54\n2\t2\t3\t4\tCoat is warm and stylish.\t2025-07-28 17:03:54\n3\t3\t4\t5\tLaptop is powerful.\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE shipping (\n\tshipping_id INTEGER, \n\torder_id INTEGER, \n\ttracking_number TEXT, \n\tshipping_address TEXT, \n\tshipping_date TIMESTAMP, \n\tdelivery_date TIMESTAMP, \n\tstatus TEXT DEFAULT 'Preparing', \n\tPRIMARY KEY (shipping_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from shipping table:\nshipping_id\torder_id\ttracking_number\tshipping_address\tshipping_date\tdelivery_date\tstatus\n1\t1\tTRK001\tKathmandu\t2025-07-01 00:00:00\t2025-07-05 00:00:00\tDelivered\n2\t2\tTRK002\tPokhara\t2025-07-02 00:00:00\t2025-07-06 00:00:00\tDelivered\n3\t3\tTRK003\tButwal\t2025-07-03 00:00:00\t2025-07-08 00:00:00\tShipped\n*/\n\n\nCREATE TABLE users (\n\tuser_id INTEGER, \n\tname TEXT, \n\temail TEXT, \n\tpassword TEXT, \n\tphone TEXT, \n\taddress TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (user_id), \n\tUNIQUE (email)\n)\n\n/*\n3 rows from users table:\nuser_id\tname\temail\tpassword\tphone\taddress\tcreated_at\n1\tArun Pandey\tarun@example.com\tpass\t9801111111\tKathmandu\t2025-07-28 17:03:54\n2\tSita Sharma\tsita@example.com\tpass\t9802222222\tPokhara\t2025-07-28 17:03:54\n3\tRam Thapa\tram@example.com\tpass\t9803333333\tButwal\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE wishlist (\n\twishlist_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\tadded_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (wishlist_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from wishlist table:\nwishlist_id\tuser_id\tproduct_id\tadded_at\n1\t1\t2\t2025-07-28 17:03:54\n2\t2\t3\t2025-07-28 17:03:54\n3\t3\t1\t2025-07-28 17:03:54\n*/")]
2025-07-29 22:21:00 [DEBUG   ] SQLAgent: Query attempt #1
2025-07-29 22:21:00 [INFO    ] SQLAgent: Invoking LLM for SQL generation...
2025-07-29 22:21:01 [INFO    ] SQLAgent: LLM generated SQL in 0.51 seconds.
2025-07-29 22:21:01 [DEBUG   ] SQLAgent: LLM response content: SELECT * FROM users LIMIT 10;
2025-07-29 22:21:01 [INFO    ] SQLAgent: Valid SELECT query detected. Proceeding to execute_query.
2025-07-29 22:21:01 [INFO    ] SQLAgent: Executing SQL query from last message.
2025-07-29 22:21:01 [DEBUG   ] SQLAgent: Last message type: AIMessage, content: SELECT * FROM users LIMIT 10;
2025-07-29 22:21:01 [DEBUG   ] SQLAgent: Raw SQL content: SELECT * FROM users LIMIT 10;
2025-07-29 22:21:01 [INFO    ] SQLAgent: Extracted SQL query: SELECT * FROM users LIMIT 10;
2025-07-29 22:21:01 [INFO    ] SQLAgent: Query executed in 0.00 seconds.
2025-07-29 22:21:01 [INFO    ] SQLAgent: Query result: [(1, 'Arun Pandey', 'arun@example.com', 'pass', '9801111111', 'Kathmandu', '2025-07-28 17:03:54'), (2, 'Sita Sharma', 'sita@example.com', 'pass', '9802222222', 'Pokhara', '2025-07-28 17:03:54'), (3, '...
2025-07-29 22:21:01 [INFO    ] SQLAgent: Query executed successfully. Proceeding to interpretation.
2025-07-29 22:21:01 [INFO    ] SQLAgent: Interpreting query results into natural language answer.
2025-07-29 22:21:01 [DEBUG   ] SQLAgent: Message history for interpretation: [('HumanMessage', 'Can you show me all the users in the database?'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist'), ('AIMessage', ''), ('ToolMessage', "\nCREATE TABLE cart (\n\tcart_id INTEGER, \n\tuser_id INTEGER, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (cart_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from cart table:\ncart_id\tuser_id\tcreated_at\n1\t1\t2025-07-28 17:03:54\n2\t2\t2025-07-28 17:03:54\n3\t3\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE cart_items (\n\tcart_item_id INTEGER, \n\tcart_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tPRIMARY KEY (cart_item_id), \n\tFOREIGN KEY(cart_id) REFERENCES cart (cart_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from cart_items table:\ncart_item_id\tcart_id\tproduct_id\tquantity\n1\t1\t3\t1\n2\t2\t4\t2\n3\t3\t2\t1\n*/\n\n\nCREATE TABLE categories (\n\tcategory_id INTEGER, \n\tcategory_name TEXT NOT NULL, \n\tdescription TEXT, \n\tPRIMARY KEY (category_id)\n)\n\n/*\n3 rows from categories table:\ncategory_id\tcategory_name\tdescription\n1\tMobiles\tSmartphones and accessories\n2\tClothing\tMen and Women fashion\n3\tComputers\tLaptops and peripherals\n*/\n\n\nCREATE TABLE coupons (\n\tcoupon_id INTEGER, \n\tcode TEXT, \n\tdiscount_percent INTEGER, \n\tvalid_from DATE, \n\tvalid_to DATE, \n\tPRIMARY KEY (coupon_id), \n\tUNIQUE (code), \n\tCHECK (discount_percent BETWEEN 1 AND 100)\n)\n\n/*\n3 rows from coupons table:\ncoupon_id\tcode\tdiscount_percent\tvalid_from\tvalid_to\n1\tNEPAL10\t10\t2025-07-01\t2025-12-31\n2\tFEST20\t20\t2025-07-01\t2025-12-31\n3\tWELCOME5\t5\t2025-07-01\t2025-12-31\n*/\n\n\nCREATE TABLE order_coupons (\n\tid INTEGER, \n\torder_id INTEGER, \n\tcoupon_id INTEGER, \n\tPRIMARY KEY (id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(coupon_id) REFERENCES coupons (coupon_id)\n)\n\n/*\n3 rows from order_coupons table:\nid\torder_id\tcoupon_id\n1\t1\t1\n2\t2\t2\n3\t3\t3\n*/\n\n\nCREATE TABLE order_items (\n\torder_item_id INTEGER, \n\torder_id INTEGER, \n\tproduct_id INTEGER, \n\tquantity INTEGER NOT NULL, \n\tprice REAL NOT NULL, \n\tPRIMARY KEY (order_item_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from order_items table:\norder_item_id\torder_id\tproduct_id\tquantity\tprice\n1\t1\t1\t1\t550.0\n2\t2\t3\t1\t120.0\n3\t3\t4\t1\t1300.0\n*/\n\n\nCREATE TABLE orders (\n\torder_id INTEGER, \n\tuser_id INTEGER, \n\torder_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tstatus TEXT DEFAULT 'Pending', \n\ttotal_amount REAL, \n\tPRIMARY KEY (order_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from orders table:\norder_id\tuser_id\torder_date\tstatus\ttotal_amount\n1\t1\t2025-07-28 17:03:54\tPending\t550.0\n2\t2\t2025-07-28 17:03:54\tPending\t120.0\n3\t3\t2025-07-28 17:03:54\tPending\t1300.0\n*/\n\n\nCREATE TABLE payments (\n\tpayment_id INTEGER, \n\torder_id INTEGER, \n\tpayment_method TEXT, \n\tamount REAL, \n\tpayment_status TEXT DEFAULT 'Pending', \n\tpaid_at TIMESTAMP, \n\tPRIMARY KEY (payment_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from payments table:\npayment_id\torder_id\tpayment_method\tamount\tpayment_status\tpaid_at\n1\t1\tEsewa\t550.0\tCompleted\tNone\n2\t2\tKhalti\t120.0\tCompleted\tNone\n3\t3\tCash\t1300.0\tPending\tNone\n*/\n\n\nCREATE TABLE product_images (\n\timage_id INTEGER, \n\tproduct_id INTEGER, \n\timage_url TEXT NOT NULL, \n\tPRIMARY KEY (image_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from product_images table:\nimage_id\tproduct_id\timage_url\n1\t1\tsamsung.jpg\n2\t2\tiphone.jpg\n3\t3\tcoat.jpg\n*/\n\n\nCREATE TABLE products (\n\tproduct_id INTEGER, \n\tcategory_id INTEGER, \n\tname TEXT NOT NULL, \n\tdescription TEXT, \n\tprice REAL NOT NULL, \n\tstock INTEGER DEFAULT 0, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (product_id), \n\tFOREIGN KEY(category_id) REFERENCES categories (category_id)\n)\n\n/*\n3 rows from products table:\nproduct_id\tcategory_id\tname\tdescription\tprice\tstock\tcreated_at\n1\t1\tSamsung Galaxy A55\t5G smartphone with AMOLED display\t550.0\t50\t2025-07-28 17:03:54\n2\t1\tiPhone 15\tLatest Apple flagship smartphone\t999.0\t30\t2025-07-28 17:03:54\n3\t2\tWinter Coat\tStylish warm coat for winter\t120.0\t25\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE reviews (\n\treview_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\trating INTEGER, \n\tcomment TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (review_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id), \n\tCHECK (rating BETWEEN 1 AND 5)\n)\n\n/*\n3 rows from reviews table:\nreview_id\tuser_id\tproduct_id\trating\tcomment\tcreated_at\n1\t1\t1\t5\tExcellent smartphone!\t2025-07-28 17:03:54\n2\t2\t3\t4\tCoat is warm and stylish.\t2025-07-28 17:03:54\n3\t3\t4\t5\tLaptop is powerful.\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE shipping (\n\tshipping_id INTEGER, \n\torder_id INTEGER, \n\ttracking_number TEXT, \n\tshipping_address TEXT, \n\tshipping_date TIMESTAMP, \n\tdelivery_date TIMESTAMP, \n\tstatus TEXT DEFAULT 'Preparing', \n\tPRIMARY KEY (shipping_id), \n\tFOREIGN KEY(order_id) REFERENCES orders (order_id)\n)\n\n/*\n3 rows from shipping table:\nshipping_id\torder_id\ttracking_number\tshipping_address\tshipping_date\tdelivery_date\tstatus\n1\t1\tTRK001\tKathmandu\t2025-07-01 00:00:00\t2025-07-05 00:00:00\tDelivered\n2\t2\tTRK002\tPokhara\t2025-07-02 00:00:00\t2025-07-06 00:00:00\tDelivered\n3\t3\tTRK003\tButwal\t2025-07-03 00:00:00\t2025-07-08 00:00:00\tShipped\n*/\n\n\nCREATE TABLE users (\n\tuser_id INTEGER, \n\tname TEXT, \n\temail TEXT, \n\tpassword TEXT, \n\tphone TEXT, \n\taddress TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (user_id), \n\tUNIQUE (email)\n)\n\n/*\n3 rows from users table:\nuser_id\tname\temail\tpassword\tphone\taddress\tcreated_at\n1\tArun Pandey\tarun@example.com\tpass\t9801111111\tKathmandu\t2025-07-28 17:03:54\n2\tSita Sharma\tsita@example.com\tpass\t9802222222\tPokhara\t2025-07-28 17:03:54\n3\tRam Thapa\tram@example.com\tpass\t9803333333\tButwal\t2025-07-28 17:03:54\n*/\n\n\nCREATE TABLE wishlist (\n\twishlist_id INTEGER, \n\tuser_id INTEGER, \n\tproduct_id INTEGER, \n\tadded_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (wishlist_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id), \n\tFOREIGN KEY(product_id) REFERENCES products (product_id)\n)\n\n/*\n3 rows from wishlist table:\nwishlist_id\tuser_id\tproduct_id\tadded_at\n1\t1\t2\t2025-07-28 17:03:54\n2\t2\t3\t2025-07-28 17:03:54\n3\t3\t1\t2025-07-28 17:03:54\n*/"), ('AIMessage', 'SELECT * FROM users LIMIT 10;'), ('ToolMessage', "[(1, 'Arun Pandey', 'arun@example.com', 'pass', '9801111111', 'Kathmandu', '2025-07-28 17:03:54'), (2, 'Sita Sharma', 'sita@example.com', 'pass', '9802222222', 'Pokhara', '2025-07-28 17:03:54'), (3, 'Ram Thapa', 'ram@example.com', 'pass', '9803333333', 'Butwal', '2025-07-28 17:03:54'), (4, 'Krishna Adhikari', 'krishna@example.com', 'pass', '9804444444', 'Chitwan', '2025-07-28 17:03:54'), (5, 'Bina Kafle', 'bina@example.com', 'pass', '9805555555', 'Lalitpur', '2025-07-28 17:03:54'), (6, 'Binisha Chapagain', 'binisha@example.com', 'pass', '9806666666', 'Bhaktapur', '2025-07-28 17:03:54')]")]
2025-07-29 22:21:01 [INFO    ] SQLAgent: Invoking LLM for result interpretation...
2025-07-29 22:21:29 [INFO    ] SQLAgent: LLM interpretation completed in 27.81 seconds.
2025-07-29 22:21:29 [DEBUG   ] SQLAgent: Interpretation result: Answer: There are 6 users in the database. The users are:

1. Arun Pandey (arun@example.com)
2. Sita Sharma (sita@example.com)
3. Ram Thapa (ram@example.com)
4. Krishna Adhikari (krishna@example.com)
5. Bina Kafle (bina@example.com)
6. Binisha Chapagain (binisha@example.com)

Each user has a unique email address and password.
2025-07-29 22:21:29 [INFO    ] SQLAgent: Final answer generated. Ending workflow.
2025-07-29 22:21:29 [CRITICAL] SQLAgent: CRITICAL: GraphRecursionError occurred - Unable to process the query due to recursion limit. The query may be too complex or the database structure unclear.
2025-07-29 22:21:31 [INFO    ] SQLAgent: === SQL Agent Logger Initialized (Console Output Disabled, ALL Log Levels Captured) ===
2025-07-29 22:21:31 [DEBUG   ] SQLAgent: DEBUG level logging enabled - all detailed information will be captured
2025-07-29 22:21:31 [WARNING ] SQLAgent: WARNING level logging enabled - all warnings will be captured
2025-07-29 22:21:31 [ERROR   ] SQLAgent: ERROR level logging enabled - all errors will be captured
2025-07-29 22:21:31 [CRITICAL] SQLAgent: CRITICAL level logging enabled - all critical issues will be captured
2025-07-29 22:21:31 [INFO    ] SQLAgent: Received query: 'What are the names and emails of users who signed up after January 1, 2024?'
2025-07-29 22:22:00 [INFO    ] SQLAgent: Intent classification result: 'query'
2025-07-29 22:22:00 [INFO    ] SQLAgent: Setting recursion limit: 7
2025-07-29 22:22:00 [INFO    ] SQLAgent: Invoking agent workflow...
2025-07-29 22:22:00 [INFO    ] SQLAgent: Executing first_tool_call: requesting list of tables.
2025-07-29 22:22:00 [DEBUG   ] SQLAgent: first_tool_call response prepared.
2025-07-29 22:22:00 [INFO    ] SQLAgent: Calling model_get_schema to fetch schema.
2025-07-29 22:22:00 [DEBUG   ] SQLAgent: Current message history: [('HumanMessage', 'What are the names and emails of users who signed up after January 1, 2024?'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist')]
2025-07-29 22:22:02 [INFO    ] SQLAgent: LLM schema request took 1.33 seconds.
2025-07-29 22:22:02 [DEBUG   ] SQLAgent: Schema response: content='' additional_kwargs={'tool_calls': [{'id': 'cv96xeysj', 'function': {'arguments': '{"table_names":"users, orders"}', 'name': 'sql_db_schema'}, 'type': 'function'}]} response_metadata={'token_usage': {'completion_tokens': 19, 'prompt_tokens': 407, 'total_tokens': 426, 'completion_time': 0.028209493, 'prompt_time': 0.119911203, 'queue_time': 0.05474777, 'total_time': 0.148120696}, 'model_name': 'llama-3.1-8b-instant', 'system_fingerprint': 'fp_c523237e5d', 'service_tier': 'on_demand', 'finish_reason': 'tool_calls', 'logprobs': None} id='run--a4233ad9-c4ca-419e-b5ee-a2a2f26b2b2f-0' tool_calls=[{'name': 'sql_db_schema', 'args': {'table_names': 'users, orders'}, 'id': 'cv96xeysj', 'type': 'tool_call'}] usage_metadata={'input_tokens': 407, 'output_tokens': 19, 'total_tokens': 426}
2025-07-29 22:22:02 [INFO    ] SQLAgent: Entering query_gen_node to generate SQL query.
2025-07-29 22:22:02 [DEBUG   ] SQLAgent: Message history: [('HumanMessage', 'What are the names and emails of users who signed up after January 1, 2024?'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist'), ('AIMessage', ''), ('ToolMessage', "\nCREATE TABLE orders (\n\torder_id INTEGER, \n\tuser_id INTEGER, \n\torder_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tstatus TEXT DEFAULT 'Pending', \n\ttotal_amount REAL, \n\tPRIMARY KEY (order_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from orders table:\norder_id\tuser_id\torder_date\tstatus\ttotal_amount\n1\t1\t2025-07-28 17:03:54\tPending\t550.0\n2\t2\t2025-07-28 17:03:54\tPending\t120.0\n3\t3\t2025-07-28 17:03:54\tPending\t1300.0\n*/\n\n\nCREATE TABLE users (\n\tuser_id INTEGER, \n\tname TEXT, \n\temail TEXT, \n\tpassword TEXT, \n\tphone TEXT, \n\taddress TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (user_id), \n\tUNIQUE (email)\n)\n\n/*\n3 rows from users table:\nuser_id\tname\temail\tpassword\tphone\taddress\tcreated_at\n1\tArun Pandey\tarun@example.com\tpass\t9801111111\tKathmandu\t2025-07-28 17:03:54\n2\tSita Sharma\tsita@example.com\tpass\t9802222222\tPokhara\t2025-07-28 17:03:54\n3\tRam Thapa\tram@example.com\tpass\t9803333333\tButwal\t2025-07-28 17:03:54\n*/")]
2025-07-29 22:22:02 [DEBUG   ] SQLAgent: Query attempt #1
2025-07-29 22:22:02 [INFO    ] SQLAgent: Invoking LLM for SQL generation...
2025-07-29 22:22:10 [INFO    ] SQLAgent: LLM generated SQL in 8.41 seconds.
2025-07-29 22:22:10 [DEBUG   ] SQLAgent: LLM response content: SELECT name, email FROM users WHERE created_at > '2024-01-01' LIMIT 10;
2025-07-29 22:22:10 [INFO    ] SQLAgent: Valid SELECT query detected. Proceeding to execute_query.
2025-07-29 22:22:10 [INFO    ] SQLAgent: Executing SQL query from last message.
2025-07-29 22:22:10 [DEBUG   ] SQLAgent: Last message type: AIMessage, content: SELECT name, email FROM users WHERE created_at > '2024-01-01' LIMIT 10;
2025-07-29 22:22:10 [DEBUG   ] SQLAgent: Raw SQL content: SELECT name, email FROM users WHERE created_at > '2024-01-01' LIMIT 10;
2025-07-29 22:22:10 [INFO    ] SQLAgent: Extracted SQL query: SELECT name, email FROM users WHERE created_at > '2024-01-01' LIMIT 10;
2025-07-29 22:22:10 [INFO    ] SQLAgent: Query executed in 0.00 seconds.
2025-07-29 22:22:10 [INFO    ] SQLAgent: Query result: [('Arun Pandey', 'arun@example.com'), ('Sita Sharma', 'sita@example.com'), ('Ram Thapa', 'ram@example.com'), ('Krishna Adhikari', 'krishna@example.com'), ('Bina Kafle', 'bina@example.com'), ('Binisha ...
2025-07-29 22:22:10 [INFO    ] SQLAgent: Query executed successfully. Proceeding to interpretation.
2025-07-29 22:22:10 [INFO    ] SQLAgent: Interpreting query results into natural language answer.
2025-07-29 22:22:10 [DEBUG   ] SQLAgent: Message history for interpretation: [('HumanMessage', 'What are the names and emails of users who signed up after January 1, 2024?'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist'), ('AIMessage', ''), ('ToolMessage', "\nCREATE TABLE orders (\n\torder_id INTEGER, \n\tuser_id INTEGER, \n\torder_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tstatus TEXT DEFAULT 'Pending', \n\ttotal_amount REAL, \n\tPRIMARY KEY (order_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from orders table:\norder_id\tuser_id\torder_date\tstatus\ttotal_amount\n1\t1\t2025-07-28 17:03:54\tPending\t550.0\n2\t2\t2025-07-28 17:03:54\tPending\t120.0\n3\t3\t2025-07-28 17:03:54\tPending\t1300.0\n*/\n\n\nCREATE TABLE users (\n\tuser_id INTEGER, \n\tname TEXT, \n\temail TEXT, \n\tpassword TEXT, \n\tphone TEXT, \n\taddress TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (user_id), \n\tUNIQUE (email)\n)\n\n/*\n3 rows from users table:\nuser_id\tname\temail\tpassword\tphone\taddress\tcreated_at\n1\tArun Pandey\tarun@example.com\tpass\t9801111111\tKathmandu\t2025-07-28 17:03:54\n2\tSita Sharma\tsita@example.com\tpass\t9802222222\tPokhara\t2025-07-28 17:03:54\n3\tRam Thapa\tram@example.com\tpass\t9803333333\tButwal\t2025-07-28 17:03:54\n*/"), ('AIMessage', "SELECT name, email FROM users WHERE created_at > '2024-01-01' LIMIT 10;"), ('ToolMessage', "[('Arun Pandey', 'arun@example.com'), ('Sita Sharma', 'sita@example.com'), ('Ram Thapa', 'ram@example.com'), ('Krishna Adhikari', 'krishna@example.com'), ('Bina Kafle', 'bina@example.com'), ('Binisha Chapagain', 'binisha@example.com')]")]
2025-07-29 22:22:10 [INFO    ] SQLAgent: Invoking LLM for result interpretation...
2025-07-29 22:22:17 [INFO    ] SQLAgent: LLM interpretation completed in 6.77 seconds.
2025-07-29 22:22:17 [DEBUG   ] SQLAgent: Interpretation result: Answer: The users who signed up after January 1, 2024 are Arun Pandey (arun@example.com), Sita Sharma (sita@example.com), Ram Thapa (ram@example.com), Krishna Adhikari (krishna@example.com), Bina Kafle (bina@example.com), and Binisha Chapagain (binisha@example.com).
2025-07-29 22:22:17 [INFO    ] SQLAgent: Final answer generated. Ending workflow.
2025-07-29 22:22:17 [CRITICAL] SQLAgent: CRITICAL: GraphRecursionError occurred - Unable to process the query due to recursion limit. The query may be too complex or the database structure unclear.
2025-07-29 22:23:36 [INFO    ] SQLAgent: === SQL Agent Logger Initialized (Console Output Disabled, ALL Log Levels Captured) ===
2025-07-29 22:23:36 [DEBUG   ] SQLAgent: DEBUG level logging enabled - all detailed information will be captured
2025-07-29 22:23:36 [WARNING ] SQLAgent: WARNING level logging enabled - all warnings will be captured
2025-07-29 22:23:36 [ERROR   ] SQLAgent: ERROR level logging enabled - all errors will be captured
2025-07-29 22:23:36 [CRITICAL] SQLAgent: CRITICAL level logging enabled - all critical issues will be captured
2025-07-29 22:23:36 [INFO    ] SQLAgent: === SQL Agent Logger Initialized (Console Output Disabled, ALL Log Levels Captured) ===
2025-07-29 22:23:36 [DEBUG   ] SQLAgent: DEBUG level logging enabled - all detailed information will be captured
2025-07-29 22:23:36 [WARNING ] SQLAgent: WARNING level logging enabled - all warnings will be captured
2025-07-29 22:23:36 [ERROR   ] SQLAgent: ERROR level logging enabled - all errors will be captured
2025-07-29 22:23:36 [CRITICAL] SQLAgent: CRITICAL level logging enabled - all critical issues will be captured
2025-07-29 22:23:39 [INFO    ] SQLAgent: === SQL Agent Logger Initialized (Console Output Disabled, ALL Log Levels Captured) ===
2025-07-29 22:23:39 [DEBUG   ] SQLAgent: DEBUG level logging enabled - all detailed information will be captured
2025-07-29 22:23:39 [WARNING ] SQLAgent: WARNING level logging enabled - all warnings will be captured
2025-07-29 22:23:39 [ERROR   ] SQLAgent: ERROR level logging enabled - all errors will be captured
2025-07-29 22:23:39 [CRITICAL] SQLAgent: CRITICAL level logging enabled - all critical issues will be captured
2025-07-29 22:23:39 [INFO    ] SQLAgent: Received query: 'What are the names and emails of users who signed up after January 1, 2024?'
2025-07-29 22:23:40 [INFO    ] SQLAgent: Intent classification result: 'query'
2025-07-29 22:23:40 [INFO    ] SQLAgent: Setting recursion limit: 7
2025-07-29 22:23:40 [INFO    ] SQLAgent: Invoking agent workflow...
2025-07-29 22:23:40 [INFO    ] SQLAgent: Executing first_tool_call: requesting list of tables.
2025-07-29 22:23:40 [DEBUG   ] SQLAgent: first_tool_call response prepared.
2025-07-29 22:23:40 [INFO    ] SQLAgent: Calling model_get_schema to fetch schema.
2025-07-29 22:23:40 [DEBUG   ] SQLAgent: Current message history: [('HumanMessage', 'What are the names and emails of users who signed up after January 1, 2024?'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist')]
2025-07-29 22:23:40 [INFO    ] SQLAgent: LLM schema request took 0.20 seconds.
2025-07-29 22:23:40 [DEBUG   ] SQLAgent: Schema response: content='' additional_kwargs={'tool_calls': [{'id': 'cgsacm9ys', 'function': {'arguments': '{"table_names":"users, orders"}', 'name': 'sql_db_schema'}, 'type': 'function'}]} response_metadata={'token_usage': {'completion_tokens': 19, 'prompt_tokens': 407, 'total_tokens': 426, 'completion_time': 0.026711386, 'prompt_time': 0.03407091, 'queue_time': 0.05077104999999999, 'total_time': 0.060782296}, 'model_name': 'llama-3.1-8b-instant', 'system_fingerprint': 'fp_c523237e5d', 'service_tier': 'on_demand', 'finish_reason': 'tool_calls', 'logprobs': None} id='run--01251f62-b447-461c-bbf9-9277bba078ce-0' tool_calls=[{'name': 'sql_db_schema', 'args': {'table_names': 'users, orders'}, 'id': 'cgsacm9ys', 'type': 'tool_call'}] usage_metadata={'input_tokens': 407, 'output_tokens': 19, 'total_tokens': 426}
2025-07-29 22:23:40 [INFO    ] SQLAgent: Entering query_gen_node to generate SQL query.
2025-07-29 22:23:40 [DEBUG   ] SQLAgent: Message history: [('HumanMessage', 'What are the names and emails of users who signed up after January 1, 2024?'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist'), ('AIMessage', ''), ('ToolMessage', "\nCREATE TABLE orders (\n\torder_id INTEGER, \n\tuser_id INTEGER, \n\torder_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tstatus TEXT DEFAULT 'Pending', \n\ttotal_amount REAL, \n\tPRIMARY KEY (order_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from orders table:\norder_id\tuser_id\torder_date\tstatus\ttotal_amount\n1\t1\t2025-07-28 17:03:54\tPending\t550.0\n2\t2\t2025-07-28 17:03:54\tPending\t120.0\n3\t3\t2025-07-28 17:03:54\tPending\t1300.0\n*/\n\n\nCREATE TABLE users (\n\tuser_id INTEGER, \n\tname TEXT, \n\temail TEXT, \n\tpassword TEXT, \n\tphone TEXT, \n\taddress TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (user_id), \n\tUNIQUE (email)\n)\n\n/*\n3 rows from users table:\nuser_id\tname\temail\tpassword\tphone\taddress\tcreated_at\n1\tArun Pandey\tarun@example.com\tpass\t9801111111\tKathmandu\t2025-07-28 17:03:54\n2\tSita Sharma\tsita@example.com\tpass\t9802222222\tPokhara\t2025-07-28 17:03:54\n3\tRam Thapa\tram@example.com\tpass\t9803333333\tButwal\t2025-07-28 17:03:54\n*/")]
2025-07-29 22:23:40 [DEBUG   ] SQLAgent: Query attempt #1
2025-07-29 22:23:40 [INFO    ] SQLAgent: Invoking LLM for SQL generation...
2025-07-29 22:23:40 [INFO    ] SQLAgent: LLM generated SQL in 0.23 seconds.
2025-07-29 22:23:40 [DEBUG   ] SQLAgent: LLM response content: SELECT name, email FROM users WHERE created_at > '2024-01-01' LIMIT 10;
2025-07-29 22:23:40 [INFO    ] SQLAgent: Valid SELECT query detected. Proceeding to execute_query.
2025-07-29 22:23:40 [INFO    ] SQLAgent: Executing SQL query from last message.
2025-07-29 22:23:40 [DEBUG   ] SQLAgent: Last message type: AIMessage, content: SELECT name, email FROM users WHERE created_at > '2024-01-01' LIMIT 10;
2025-07-29 22:23:40 [DEBUG   ] SQLAgent: Raw SQL content: SELECT name, email FROM users WHERE created_at > '2024-01-01' LIMIT 10;
2025-07-29 22:23:40 [INFO    ] SQLAgent: Extracted SQL query: SELECT name, email FROM users WHERE created_at > '2024-01-01' LIMIT 10;
2025-07-29 22:23:40 [INFO    ] SQLAgent: Query executed in 0.00 seconds.
2025-07-29 22:23:40 [INFO    ] SQLAgent: Query result: [('Arun Pandey', 'arun@example.com'), ('Sita Sharma', 'sita@example.com'), ('Ram Thapa', 'ram@example.com'), ('Krishna Adhikari', 'krishna@example.com'), ('Bina Kafle', 'bina@example.com'), ('Binisha ...
2025-07-29 22:23:40 [INFO    ] SQLAgent: Query executed successfully. Proceeding to interpretation.
2025-07-29 22:23:40 [INFO    ] SQLAgent: Interpreting query results into natural language answer.
2025-07-29 22:23:40 [DEBUG   ] SQLAgent: Message history for interpretation: [('HumanMessage', 'What are the names and emails of users who signed up after January 1, 2024?'), ('AIMessage', ''), ('ToolMessage', 'cart, cart_items, categories, coupons, order_coupons, order_items, orders, payments, product_images, products, reviews, shipping, users, wishlist'), ('AIMessage', ''), ('ToolMessage', "\nCREATE TABLE orders (\n\torder_id INTEGER, \n\tuser_id INTEGER, \n\torder_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tstatus TEXT DEFAULT 'Pending', \n\ttotal_amount REAL, \n\tPRIMARY KEY (order_id), \n\tFOREIGN KEY(user_id) REFERENCES users (user_id)\n)\n\n/*\n3 rows from orders table:\norder_id\tuser_id\torder_date\tstatus\ttotal_amount\n1\t1\t2025-07-28 17:03:54\tPending\t550.0\n2\t2\t2025-07-28 17:03:54\tPending\t120.0\n3\t3\t2025-07-28 17:03:54\tPending\t1300.0\n*/\n\n\nCREATE TABLE users (\n\tuser_id INTEGER, \n\tname TEXT, \n\temail TEXT, \n\tpassword TEXT, \n\tphone TEXT, \n\taddress TEXT, \n\tcreated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n\tPRIMARY KEY (user_id), \n\tUNIQUE (email)\n)\n\n/*\n3 rows from users table:\nuser_id\tname\temail\tpassword\tphone\taddress\tcreated_at\n1\tArun Pandey\tarun@example.com\tpass\t9801111111\tKathmandu\t2025-07-28 17:03:54\n2\tSita Sharma\tsita@example.com\tpass\t9802222222\tPokhara\t2025-07-28 17:03:54\n3\tRam Thapa\tram@example.com\tpass\t9803333333\tButwal\t2025-07-28 17:03:54\n*/"), ('AIMessage', "SELECT name, email FROM users WHERE created_at > '2024-01-01' LIMIT 10;"), ('ToolMessage', "[('Arun Pandey', 'arun@example.com'), ('Sita Sharma', 'sita@example.com'), ('Ram Thapa', 'ram@example.com'), ('Krishna Adhikari', 'krishna@example.com'), ('Bina Kafle', 'bina@example.com'), ('Binisha Chapagain', 'binisha@example.com')]")]
2025-07-29 22:23:40 [INFO    ] SQLAgent: Invoking LLM for result interpretation...
2025-07-29 22:23:41 [INFO    ] SQLAgent: LLM interpretation completed in 0.93 seconds.
2025-07-29 22:23:41 [DEBUG   ] SQLAgent: Interpretation result: Answer: The users who signed up after January 1, 2024 are Arun Pandey (arun@example.com), Sita Sharma (sita@example.com), Ram Thapa (ram@example.com), Krishna Adhikari (krishna@example.com), Bina Kafle (bina@example.com), and Binisha Chapagain (binisha@example.com).
2025-07-29 22:23:41 [INFO    ] SQLAgent: Final answer generated. Ending workflow.
2025-07-29 22:23:41 [CRITICAL] SQLAgent: CRITICAL: GraphRecursionError occurred - Unable to process the query due to recursion limit. The query may be too complex or the database structure unclear.
2025-07-29 22:31:13 [INFO    ] SQLAgent_Streamlit: Initializing SQLAgent...
2025-07-29 22:31:14 [INFO    ] SQLAgent_Streamlit: SQLAgent initialization completed.
2025-07-29 22:37:17 [INFO    ] SQLAgent_Streamlit: Initializing SQLAgent...
2025-07-29 22:37:18 [INFO    ] SQLAgent_Streamlit: SQLAgent initialization completed.
2025-07-29 22:42:05 [INFO    ] SQLAgent_Streamlit: Initializing SQLAgent...
2025-07-29 22:42:06 [INFO    ] SQLAgent_Streamlit: SQLAgent initialization completed.
